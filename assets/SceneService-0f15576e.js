import{e as n,y as d,a as K}from"./JSONSupport-32b5ad86.js";import{L as _,U as w}from"./request-f01affa1.js";import{s as L,a as h}from"./Error-62cc7aff.js";import{r as j}from"./typedArrayUtil-70e1d79e.js";import{x as V}from"./promiseUtils-59dab60c.js";import"./ensureType-249b88cd.js";import{f as x,o as f,e as I,r as P}from"./Extent-2ad2c9a9.js";import{i as A}from"./originUtils-1469eeaf.js";import{v as C}from"./HeightModelInfo-bc3bd77c.js";import{y as q,d as M,w as z,b as k,C as F}from"./arcgisLayerUrl-1177870a.js";import{v as J,f as D}from"./OperationalLayer-892ef1ff.js";import{n as B}from"./I3SIndexInfo-93dfc828.js";import{b as N}from"./Portal-52d960e8.js";import Z from"./PortalItem-476b4f2f.js";import{a as R}from"./saveUtils-44b7e317.js";let G=null;function H(){return G}const T="esri.layers.mixins.SceneService",y=L.getLogger(T),ue=c=>{let s=class extends c{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=V(async(e,t,i)=>{switch(e){case g.SAVE:return this._save(t);case g.SAVE_AS:return this._saveAs(i,t)}})}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(e.spatialReference!=null)return x.fromJSON(e.spatialReference);{const t=e.store,i=t.indexCRS||t.geographicCRS,r=i&&parseInt(i.substring(i.lastIndexOf("/")+1,i.length),10);return r!=null?new x(r):null}}readFullExtent(e,t,i){if(e!=null&&typeof e=="object"){const o=e.spatialReference==null?{...e,spatialReference:this._readSpatialReference(t)}:e;return I.fromJSON(o,i)}const r=t.store,a=this._readSpatialReference(t);return a==null||r==null||r.extent==null||!Array.isArray(r.extent)||r.extent.some(o=>o<b)?null:new I({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:a})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},i=e.split(".");return i.length>=2&&(t.major=parseInt(i[0],10),t.minor=parseInt(i[1],10)),t}readVersion(e,t){const i=t.store,r=i.version!=null?i.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(e){return this.sublayerTitleMode!=="item-title"?void 0:e}readTitleService(e,t){const i=this.portalItem&&this.portalItem.title;if(this.sublayerTitleMode==="item-title")return q(this.url,t.name);let r=t.name;if(!r&&this.url){const a=M(this.url);j(a)&&(r=a.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(r=i+" - "+r),z(r)}set url(e){const t=k({layer:this,url:e,nonStandardUrlAllowed:!1,logger:y});this._set("url",t.url),t.layerId!=null&&this._set("layerId",t.layerId)}writeUrl(e,t,i,r){F(this,e,"layers",t,r)}get parsedUrl(){const e=this._get("url"),t=_(e);return this.layerId!=null&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=B(this.parsedUrl.path,this.rootNode,e,this.apiKey,y,t),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){var t,i,r;if((e==null?void 0:e.type)==="page"){const a=e.rootIndex%e.pageSize,o=(i=(t=e.rootPage)==null?void 0:t.nodes)==null?void 0:i[a];if(o==null||o.obb==null||o.obb.center==null||o.obb.halfSize==null)throw new h("sceneservice:invalid-node-page","Invalid node page.");if(o.obb.center[0]<b||this.fullExtent==null||this.fullExtent.hasZ)return;const l=o.obb.halfSize,u=o.obb.center[2],m=Math.sqrt(l[0]*l[0]+l[1]*l[1]+l[2]*l[2]);this.fullExtent.zmin=u-m,this.fullExtent.zmax=u+m}else if((e==null?void 0:e.type)==="node"){const a=(r=e.rootNode)==null?void 0:r.mbs;if(!Array.isArray(a)||a.length!==4||a[0]<b)return;const o=a[2],l=a[3],{fullExtent:u}=this;u&&(u.zmin=o-l,u.zmax=o+l)}}async _fetchService(e){if(this.url==null)throw new h("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);t!=null&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await w(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){var a;const t=await w(((a=this.parsedUrl)==null?void 0:a.path)??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(t.data.layerType&&t.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();const r=t.data;this.read(r,this._getServiceContext()),this.validateLayer(r)}async _fetchVoxelServiceLayer(e){var i;const t=(await w(((i=this.parsedUrl)==null?void 0:i.path)+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){var e;return{origin:"service",portalItem:this.portalItem,portal:(e=this.portalItem)==null?void 0:e.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,i){e.typeKeywords||(e.typeKeywords=[]);const r=t.getTypeKeywords();for(const a of r)e.typeKeywords.push(a);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((a,o,l)=>l.indexOf(a)===o),i===v.newItem&&(e.typeKeywords=e.typeKeywords.filter(a=>a!=="Hosted Service")))}async _saveAs(e,t){var u;const i={...E,...t};let r=Z.from(e);r||(y.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new h("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),r.id&&(r=r.clone(),r.id=null);const a=r.portal||N.getDefault();await this._ensureLoadBeforeSave(),r.type=S,r.portal=a;const o={origin:"portal-item",url:null,messages:[],portal:a,portalItem:r,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},l={layers:[this.write({},o)]};return await Promise.all(o.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(l,o,i),r.url=this.url,r.title||(r.title=this.title),this._updateTypeKeywords(r,i,v.newItem),await a.signIn(),await((u=a.user)==null?void 0:u.addItem({item:r,folder:i&&i.folder,data:l})),await R(this.resourceReferences,o,null),this.portalItem=r,A(o),o.portalItem=r,r}async _save(e){const t={...E,...e};if(!this.portalItem)throw y.error("_save(): requires the .portalItem property to be set"),new h("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==S)throw y.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+S),new h("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${S}"`);await this._ensureLoadBeforeSave();const i={origin:"portal-item",url:this.portalItem.itemUrl&&_(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||N.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},r={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(r,i,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,v.existingItem),await this.portalItem.update({data:r}),await R(this.resourceReferences,i,null),A(i),this.portalItem}async _validateAgainstJSONSchema(e,t,i){var u,m;let r=((u=t.messages)==null?void 0:u.filter(p=>p.type==="error").map(p=>new h(p.name,p.message,p.details)))??[];(m=i==null?void 0:i.validationOptions)!=null&&m.ignoreUnsupported&&(r=r.filter(p=>p.name!=="layer:unsupported"&&p.name!=="symbol:unsupported"&&p.name!=="symbol-layer:unsupported"&&p.name!=="property:unsupported"&&p.name!=="url:unsupported"&&p.name!=="scenemodification:unsupported"));const a=i==null?void 0:i.validationOptions,o=a==null?void 0:a.enabled,l=H();if(o&&l){const p=(await l()).validate(e,i.portalItemLayerType);if(p.length>0){const O=`Layer item did not validate:
${p.join(`
`)}`;if(y.error(`_validateAgainstJSONSchema(): ${O}`),a.failPolicy==="throw"){const U=p.map($=>new h("sceneservice:schema-validation",$)).concat(r);throw new h("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:U})}}}if(r.length>0)throw new h("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})}};return n([d(J)],s.prototype,"id",void 0),n([d({type:x})],s.prototype,"spatialReference",void 0),n([f("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readSpatialReference",null),n([d({type:I})],s.prototype,"fullExtent",void 0),n([f("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readFullExtent",null),n([d({readOnly:!0,type:C})],s.prototype,"heightModelInfo",void 0),n([d({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],s.prototype,"minScale",void 0),n([d({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],s.prototype,"maxScale",void 0),n([d({readOnly:!0})],s.prototype,"version",void 0),n([f("version",["store.version"])],s.prototype,"readVersion",null),n([d({type:String,json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),n([d({type:String,json:{read:!1}})],s.prototype,"sublayerTitleMode",void 0),n([d({type:String})],s.prototype,"title",void 0),n([f("portal-item","title")],s.prototype,"readTitlePortalItem",null),n([f("service","title",["name"])],s.prototype,"readTitleService",null),n([d({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],s.prototype,"layerId",void 0),n([d(D)],s.prototype,"url",null),n([P("url")],s.prototype,"writeUrl",null),n([d()],s.prototype,"parsedUrl",null),n([d({readOnly:!0})],s.prototype,"store",void 0),n([d({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],s.prototype,"rootNode",void 0),s=n([K(T)],s),s},b=-1e38;var v;(function(c){c[c.existingItem=0]="existingItem",c[c.newItem=1]="newItem"})(v||(v={}));const S="Scene Service",E={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var g;(function(c){c[c.SAVE=0]="SAVE",c[c.SAVE_AS=1]="SAVE_AS"})(g||(g={}));export{ue as E,g as L};
