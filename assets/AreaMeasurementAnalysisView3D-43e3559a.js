import{e as a,y as l,a as re,v as me,t as Ie}from"./cast-8b575ab3.js";import{r as _,l as Ee,a as v,t as q,e as W}from"./typedArrayUtil-ce39e5f4.js";import"./ArrayPool-5813d861.js";import{c as oe,e as ae,t as Xe,a as Ze}from"./UnitNormalizer-20f83d8e.js";import{n as Qe}from"./AnalysisView3D-1c8b14ef.js";import{l as N,U as _e,w as he}from"./reactiveUtils-042dd05a.js";import{g as F,y as le,U as ne,A as Ue,R as Ye,K as fe,j as Le,z as et}from"./projection-582e07d8.js";import{c as de,f as tt,a as st}from"./spatialReferenceEllipsoidUtils-23733e37.js";import{m as it,s as rt}from"./mathUtils-5b623c84.js";import{a as E,o as ye,v as nt,g as ve}from"./quantityFormatUtils-48a180ea.js";import{r as Se,m as ot,a as at}from"./vec2-8acac370.js";import{n as we,r as je}from"./vec2f64-f35767d6.js";import{n as c,o as We,u as te,g as Y,p as ht,P as $,x as Fe,a as ee,z as ce,_ as qe,j as lt,e as se}from"./vec3-015ca254.js";import{n as dt,r as ie}from"./vec4f64-6d0e93be.js";import{f as Ne,O as ct,a3 as Ce,w as pt,N as ut,T as mt,d as gt,K as _t,b as ft}from"./Extent-680ef92a.js";import{n as Lt}from"./sphere-8ab93b42.js";import{J as yt,A as vt,l as St,f as wt,E as J,B as Ct,d as bt,v as Pt}from"./objectResourceUtils-8909e8c3.js";import{geodesicArea as At}from"./geometryEngine-68f880a9.js";import{v as Mt}from"./Polyline-889037e7.js";import{ax as ke,ay as Be,az as $t,_ as Vt,$ as Rt,aA as Gt}from"./index-334863ed.js";import{f as Dt,q as be,h as xt}from"./plane-e5e66c24.js";import{n as Pe}from"./Indices-37e06e9a.js";import{v as Ae}from"./euclideanAreaMeasurementUtils-f8aad2db.js";import{n as zt}from"./Evented-d959ede6.js";import{s as Ot}from"./Error-685fdf30.js";import{D as Me,m as Tt}from"./aaBoundingRect-41e05474.js";import{a as It,n as Et,g as U}from"./LineVisualElement-b2465764.js";import{V as $e,g as Ut,w as jt,p as Wt}from"./EditGeometryOperations-73b6c5df.js";import{l as j}from"./Color-ad49dc79.js";import"./intl-b84fb3c9.js";import{i as X,u as Ft,s as qt,c as Nt}from"./analysisThemeUtils-c2d98636.js";import"./string-7a324480.js";import{I as kt,q as Bt}from"./mat4-4714ff8c.js";import{e as Ht}from"./mat4f64-abdda1bb.js";import{g as Z,m as Ve,f as pe}from"./Segment-9f590ab3.js";import{D as Re,a as Ge}from"./vec4-c7a19f0d.js";import{s as De}from"./Attribute-f72d3f37.js";import{E as Kt,u as Jt,g as D}from"./VisualVariablePassParameters-8cb0a75a.js";import{O as T}from"./VertexAttribute-15d1866a.js";import{h as xe}from"./Matrix3PassUniform-0b3b1bba.js";import{_ as Xt}from"./preload-helper-41c905a7.js";import{t as Zt,l as Qt,e as Yt,o as es,W as ts,a as ss,_ as is}from"./EvaluateSceneLighting.glsl-5da94bb7.js";import{e as rs,o as k}from"./TransparencyPassType-a6b20292.js";import{n as ns}from"./MultipassTerrainTest.glsl-43f42334.js";import{v as os}from"./View.glsl-03db830e.js";import{e as as}from"./Texture2DPassUniform-70e1e126.js";import{e as ze}from"./Float4PassUniform-7f3c3ce8.js";import{o as hs,a as Oe}from"./ShaderBuilder-7bfc11d2.js";import{R as Q}from"./enums-fc527c7c.js";import{r as z}from"./ShaderTechniqueConfiguration-ee770726.js";import{s as ls}from"./DefaultTechniqueConfiguration-5fedee5c.js";import{s as ds}from"./locale-30120714.js";import{u as cs}from"./messages-8a541332.js";function ps(t,e){const s=e.center;We(s,0,0,0);for(let r=0;r<t.length;++r)te(s,s,t[r]);Y(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,ht(s,t[r]));e.radius=Math.sqrt(i)}function us(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Dt(t[0],t[1],t[2],e)}function ms(t,e){return $(t,e)+t[3]}function gs(t,e,s){return F(t,V,s)&&F(e,R,s)?Fe(V,R):0}function _s(t,e){if(!le(t,V)||!le(e,R))return 0;const s=new Be;return ke(s,[V[0],V[1]],[R[0],R[1]]),s.distance}function fs(t,e,s){const i=new Be;return ke(i,[t[0],t[1]],[e[0],e[1]],s),i.distance}function Ls(t,e,s,i){const r=vs;return ne(t,i,V)&&ne(e,i,R)&&ne(s,i,ue)?(r.setPoint(0,0,V),r.setPoint(0,1,R),r.setPoint(0,2,ue),Math.abs(At(r,"square-meters"))):0}function ys(t,e=null,s=!0){const r=(n,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let h=0;h<n.length;++h)if($(o,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&ee(e,t[0]),!0;We(S,0,0,0);for(let n=0;n<t.length;++n)te(S,S,t[n]);if(ce(S,S),r(t,S))return e&&ee(e,S),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let o=0;o<t.length;++o)if(n!==o&&(qe(S,t[n],t[o]),ce(S,S),r(t,S)))return e&&ee(e,S),!0;return!1}const V=c(),R=c(),ue=c(),vs=new Mt({rings:[[V,R,ue]],spatialReference:Ne.WGS84}),S=c();class Ss{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=dt(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o,h){const d=this.unitNormalizer,u=this._sceneView.renderSpatialReference,p=this.unitNormalizer.spatialReference,g=_(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===g&&this._mode===o)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=g;const m=e.numVertices;this._resize(m);const y=de(i.spatialReference),b=Ue(i.spatialReference,y)&&Ye(i.spatialReference),{positionsGeographic:P,positionsWorldCoords:B,positionsRenderCoords:A,positionsSpherical:x}=this;e.forEachVertexPosition((L,C)=>{ws(i.elevationProvider,L),F(L,B[C],p),F(L,A[C],u),b&&(le(L,P[C]),F(L,x[C],y),ce(x[C],x[C]))});const H=this._updatePathLengths(r);if(this.pathLength=this._length>1?E(d.normalizeDistance(H),"meters"):null,b){const L=this._updateGeodesicPathLengths(r,p);this.geodesicPathLength=this._length>1?E(L,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,o),r?(this._updateArea(i,d,u,p,n),b&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(we()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(we()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Fe(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const h=r[o]=fs(i[o],i[(o+1)%this._length],s??void 0);(o<this._length-1||e)&&(n+=h)}return n}_updateArea(e,s,i,r,n){const o=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,u=this.positionsProjectedWorldCoords,p=this.positionsFittedRenderCoords,g=this._planeWorldCoords,m=this._centroidRenderCoords;oe(d,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,Lt.X,this._worldTangent),fe(m,this._worldUp,i,this._worldUp,r),fe(m,this._worldTangent,i,this._worldTangent,r),h.length>2&&us(h,g),this.fittingMode=this._selectFittingMode(g,h,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let L=-1/0;d.forEach((C,K)=>{const ge=o.getAltitude(d[K]);ge>L&&(L=ge,y=K)})}const b=h[y];let P=g,B=this._worldTangent;this.fittingMode==="horizontal"?P=this._worldUp:this.fittingMode==="vertical"&&(P=this._tempVec3,B=this._worldUp,be(g,this._worldUp,P)),ee(this._frame[2],P),be(B,P,this._frame[0]),qe(this._frame[1],this._frame[0],this._frame[2]),lt(this._frame[1],this._frame[1]);const A=this._tempVec3,x=this._tempU,H=this._tempV;for(let L=0;L<this._length;++L){const C=u[L],K=p[L];se(A,h[L],b),Se(C,$(this._frame[0],A),$(this._frame[1],A)),Y(x,this._frame[0],C[0]),Y(H,this._frame[1],C[1]),te(A,x,H),te(A,A,b),Le(A,r,K,i)}this.perimeterLength=this._length>0?E(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,oe(p,this.areaCentroidRenderCoords),Le(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ye(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,h=ys(r,o);if(!h)return void(this.geodesicArea=null);const d=this._tempU,u=this._tempV;xt(o,d,u);for(let p=0;p<this._length;++p){const g=$(r[p],d),m=$(r[p],u),y=$(r[p],o);Se(n[p],g/y,m/y)}Y(o,o,ct(i).radius),s.toRenderCoords(o,de(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?ye(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=ot(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];Ce(n,o,h,d)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=Pe(Ae(e));let i=0;for(let r=0;r<s.length;r+=3)i+=yt(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];Ce(n,o,h,d)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=Pe(Ae(s));let r=0;for(let n=0;n<i.length;n+=3)r+=Ls(e[i[n]],e[i[n+1]],e[i[n+2]],Ne.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(p=>Math.abs(ms(e,p))).reduce((p,g)=>Math.max(p,g),0);ps(s,this._tempSphere);const o=n/(2*this._tempSphere.radius),h=o<r.maxRelativeErrorCoplanar,d=o<r.maxRelativeErrorAlmostCoplanar;let u="horizontal";return h?u="oblique":d&&(u=Math.abs($(i,e))>Math.cos(it(r.verticalAngleThreshold))?"horizontal":"vertical"),u}_updateCursorSegmentLength(e,s){const i=e.lastPoint;!e.isValidPolygon&&_(i)&&_(s)?(this.geodesicCursorSegmentLength=E(_s(i,s),"meters"),this.cursorSegmentLength=E(this.unitNormalizer.normalizeDistance(gs(i,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(s===ae.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),!e.isValidPolygon&&_(this.geodesicCursorSegmentLength)&&(i+=this.geodesicCursorSegmentLength.value),i>Cs&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===ae.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function ws(t,e){e.hasZ||(e.z=Ee($t(t,e,"ground"),0))}const Cs=1e5;let O=class extends me{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=de(t),s=e===tt?st:e,i=!t||Ue(t,s)?s:t,r=new Xe(i);this._measurementDataManager=new Ss(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),N(()=>this.analysisViewData.cursorPoint,()=>this._update(),_e),N(()=>this.analysisViewData.mode,()=>this._update(),_e)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.cursorPoint,s,e.validMeasurement,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};a([l({constructOnly:!0})],O.prototype,"view",void 0),a([l({constructOnly:!0})],O.prototype,"analysis",void 0),a([l({constructOnly:!0})],O.prototype,"analysisViewData",void 0),O=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],O);const He="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",bs=Ot.getLogger(He);let M=class extends zt.EventedAccessor{constructor(t={}){super(t),this._handles=new Ie,this._version=0,this._internalGeometryChange=!1,this._extent=Me()}destroy(){this._handles=v(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),_(t)&&_(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),_(t)&&_(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get constructed(){return _(this.areaMeasurement)&&_(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=Me(this._extent);return this.forEachVertex(e=>{Tt(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(N(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},he)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if(_(s)){const i=et(s,e.spatialReference);q(i)&&It(t,s.spatialReference,bs),s=i}_(s)?this._editGeometryOperations=$e.fromGeometry(s,e.state.viewingMode):this._editGeometryOperations=new $e(new Ut("polygon",jt(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(_(t))return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Te),t(Te,i)})}clear(){_(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=W(this.view);this._editGeometry.components.push(new Wt(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};a([l({value:null})],M.prototype,"areaMeasurement",null),a([l({value:null})],M.prototype,"view",null),a([l()],M.prototype,"isValidPolygon",null),a([l()],M.prototype,"extent",null),a([l()],M.prototype,"spatialReference",null),a([l()],M.prototype,"numVertices",null),M=a([re(He)],M);const Te=new pt;function Ps(t){const e=new hs;e.extensions.add("GL_OES_standard_derivatives");const{vertex:s,fragment:i}=e;return os(s,t),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),s.code.add(Oe`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(ns,t),i.uniforms.add(new as("size",r=>r.size)),i.uniforms.add(new ze("color1",r=>r.color1)),i.uniforms.add(new ze("color2",r=>r.color2)),i.include(rs),i.code.add(Oe`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${t.transparencyPassType===k.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),e}const As=Object.freeze(Object.defineProperty({__proto__:null,build:Ps},Symbol.toStringTag,{value:"Module"}));let Ke=class Je extends Yt{initializeProgram(e){return new es(e.rctx,Je.shader.get().build(this.configuration),Kt)}_setPipelineState(e){const s=this.configuration,i=e===k.NONE,r=e===k.FrontFace;return ts({blending:s.transparent?i?$s:vt(e):null,depthTest:{func:St(e)},depthWrite:i?s.writeDepth?ss:null:wt(e),colorWrite:is,polygonOffset:i||r?s.polygonOffset?Ms:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}};Ke.shader=new Zt(As,()=>Xt(()=>import("./CheckerBoard.glsl-bc45b440.js"),["./CheckerBoard.glsl-bc45b440.js","./ShaderBuilder-7bfc11d2.js","./typedArrayUtil-ce39e5f4.js","./Error-685fdf30.js","./string-7a324480.js","./vec2-8acac370.js","./common-d0b63c2d.js","./vec2f64-f35767d6.js","./Texture2DPassUniform-70e1e126.js","./View.glsl-03db830e.js","./mat4-4714ff8c.js","./vec3-015ca254.js","./mat4f32-60a2394b.js","./TransparencyPassType-a6b20292.js","./VertexAttribute-15d1866a.js","./cast-8b575ab3.js","./ArrayPool-5813d861.js","./nextTick-3ee5a785.js","./promiseUtils-e37fe75d.js","./UnitNormalizer-20f83d8e.js","./quantityFormatUtils-48a180ea.js","./Extent-680ef92a.js","./Ellipsoid-89682c5e.js","./Portal-7ecdc9f0.js","./preload-helper-41c905a7.js","./request-fc61835a.js","./Loadable-695031ac.js","./Promise-e757e514.js","./locale-30120714.js","./PortalGroup-ea788274.js","./PortalUser-a1aa49cd.js","./index-334863ed.js","./IdentityManager-13ed5348.js","./Evented-d959ede6.js","./reactiveUtils-042dd05a.js","./intl-b84fb3c9.js","./number-134e9f14.js","./messages-8a541332.js","./assets-5052bbaa.js","./uuid-73213768.js","./dom-2ec1e33c.js","./Graphic-96c42a4d.js","./geometry-bad16232.js","./Polyline-889037e7.js","./typeUtils-700e0da4.js","./PopupTemplate-8ac0cb61.js","./Clonable-2b8b60cc.js","./Collection-47946fa8.js","./SimpleObservable-6f002ab0.js","./fieldUtils-1ecec444.js","./arcadeOnDemand-a1bf65ec.js","./enumeration-4ec8d3f9.js","./Identifiable-96150ecf.js","./symbols-0f3de684.js","./CIMSymbol-cdddfd9c.js","./Color-ad49dc79.js","./colorUtils-639f4d25.js","./mathUtils-5b623c84.js","./vec4-c7a19f0d.js","./screenUtils-410d12c0.js","./opacityUtils-6b5cbdc2.js","./symbolLayerUtils3D-51cc6d75.js","./aaBoundingBox-04c58f5a.js","./aaBoundingRect-41e05474.js","./persistableUrlUtils-1c5d7615.js","./Symbol3DAnchorPosition2D-142c1e90.js","./collectionUtils-25147e5f.js","./jsonUtils-03437bcd.js","./Basemap-f5ca570d.js","./deprecate-9828d7d2.js","./loadAll-8401c5ec.js","./asyncUtils-623987a8.js","./PortalItem-6549afda.js","./writeUtils-ff257e5e.js","./layerUtils-0c01cb0c.js","./compilerUtils-175b9e40.js","./CollectionFlattener-9bc75576.js","./TablesMixin-b6031ef9.js","./Layer-b29c44e3.js","./Cyclical-34b2a5e3.js","./MultiOriginJSONSupport-a1d33be9.js","./originUtils-1469eeaf.js","./multiOriginJSONSupportUtils-c978f4c3.js","./HeightModelInfo-42ae0f61.js","./projection-582e07d8.js","./zscale-def794ea.js","./arcgisLayerUrl-81a33ec5.js","./ViewingMode-5d7d590b.js","./saveUtils-bf4b189a.js","./resourceUtils-e6e10558.js","./fieldType-232282e5.js","./OperationalLayer-c3a14c54.js","./TimeExtent-d116f9c4.js","./ElevationInfo-ad190ee6.js","./lengthUtils-1d09729e.js","./plane-e5e66c24.js","./sphere-8ab93b42.js","./vec4f64-6d0e93be.js","./byteSizeEstimations-f0cab514.js","./mat3f64-50f3b9f6.js","./mat4f64-abdda1bb.js","./quatf64-f8f1c132.js","./mat3-4fd89d48.js","./Octree-d990d188.js","./Util-c12e93ba.js","./scaleUtils-87bb90d3.js","./lineSegment-b352e49e.js","./objectResourceUtils-8909e8c3.js","./devEnvironmentUtils-5002a058.js","./BufferView-da65c548.js","./vec33-8529ce65.js","./DefaultMaterial_COLOR_GAMMA-87d1f8e6.js","./types-e1c0a5bf.js","./enums-fc527c7c.js","./Version-419f71e1.js","./quat-99c4e099.js","./resourceUtils-527631ac.js","./basicInterfaces-7449a8bf.js","./Indices-37e06e9a.js","./DefaultMaterial.glsl-7d7dc23e.js","./ForwardLinearDepth.glsl-a0929473.js","./Matrix3PassUniform-0b3b1bba.js","./vec3f32-01c06d8d.js","./MixExternalColor.glsl-99b269fe.js","./ShaderTechniqueConfiguration-ee770726.js","./symbolColorUtils-834d5fca.js","./PhysicallyBasedRendering.glsl-32dfb9c7.js","./FloatPassUniform-e3702139.js","./Float4PassUniform-7f3c3ce8.js","./RgbaFloatEncoding.glsl-4a25e2a7.js","./Texture2DDrawUniform-02720a73.js","./PiUtils.glsl-5ee49495.js","./VisualVariablePassParameters-8cb0a75a.js","./VertexElementDescriptor-2925c6af.js","./Texture-bf6b5582.js","./context-util-7ede29e5.js","./Slice.glsl-7975394d.js","./Transform.glsl-7294c426.js","./ObjectAndLayerIdColor.glsl-a64028da.js","./OutputDepth.glsl-f581dcdd.js","./OutputHighlight.glsl-08aacdf4.js","./VisualVariables.glsl-9e988d16.js","./DiscardOrAdjustAlphaBlend.glsl-f19054e7.js","./AlphaCutoff-96178e0d.js","./VertexColor.glsl-79a8c465.js","./VerticalOffset.glsl-5354e013.js","./Normals.glsl-0f400ece.js","./EvaluateSceneLighting.glsl-5da94bb7.js","./SSAOBlur.glsl-7265df26.js","./ScreenSpacePass.glsl-fee70090.js","./ReadLinearDepth.glsl-53a01bc1.js","./SSAO.glsl-c9cc39dd.js","./MultipassTerrainTest.glsl-43f42334.js","./vec2f32-eaf29605.js","./Texture-87febf19.js","./TextureOnly.glsl-548e665f.js","./Attribute-f72d3f37.js","./InterleavedLayout-d75b8228.js","./DefaultTechniqueConfiguration-5fedee5c.js","./RealisticTree.glsl-1e8f0ea9.js","./Scheduler-3113abcd.js","./GraphicsLayer-70f87af0.js","./HandleOwner-f773ce72.js","./BlendLayer-291a2b49.js","./ScaleRangeLayer-7ff6c0d3.js","./workers-c3882da6.js","./Connection-6bd43370.js","./spatialReferenceEllipsoidUtils-23733e37.js","./AttachmentInfo-6f2ba68c.js","./AttachmentQuery-061e93ef.js","./LegendOptions-de492976.js","./DimensionalDefinition-4b26df38.js","./UniqueValueRenderer-3904f4cc.js","./diffUtils-0c65d604.js","./colorRamps-ddfecb23.js","./sizeVariableUtils-d4870b0d.js","./visualVariableUtils-a1979e31.js","./jsonUtils-e877a23b.js","./styleUtils-305d8f69.js","./vectorFieldUtils-3e325848.js","./colorUtils-7641d345.js","./normalizeUtils-6bee55d6.js","./normalizeUtilsCommon-17a95432.js","./ItemCache-c0904c4f.js","./MemCache-1d0e264b.js","./cimSymbolUtils-bff8b59b.js","./utils-3d986af0.js","./jsonUtils-b2e5d321.js","./DictionaryLoader-1438695d.js","./LRUCache-16cff7d8.js","./heatmapUtils-bc76f08e.js","./Query-65d38c02.js","./Field-1bc3a16a.js","./executeQueryJSON-04f85be1.js","./query-b200d7cb.js","./pbfQueryUtils-f001828a.js","./pbf-68e00ce0.js","./OptimizedFeature-7f37a325.js","./OptimizedFeatureSet-1d1ac4b9.js","./queryZScale-bd6bba60.js","./FeatureSet-cb704b51.js","./featureConversionUtils-c227ec85.js","./RelationshipQuery-0abdb3e2.js","./TopFeaturesQuery-3a519c5e.js","./FeatureLayer-f2f6536e.js","./serviceCapabilitiesUtils-6f645c61.js","./FeatureLayerBase-b19f7ee7.js","./TimeReference-aeda2bb8.js","./datetime-b6333958.js","./editsZScale-eefb35e6.js","./APIKeyMixin-d7cb7220.js","./ArcGISService-7ce81abb.js","./CustomParametersMixin-0dbce8f2.js","./EditBusLayer-faff46ba.js","./FeatureReductionLayer-55e6b2c4.js","./labelingInfo-8462538e.js","./labelUtils-61dff46d.js","./defaultsJSON-59981e75.js","./OrderedLayer-f840e564.js","./PortalLayer-7f6f61d4.js","./portalItemUtils-ba37e370.js","./RefreshableLayer-51d28698.js","./TemporalLayer-12ea8921.js","./FeatureTemplate-26b6ba5d.js","./FeatureType-474514d1.js","./fieldProperties-66b12497.js","./FieldsIndex-967913ce.js","./versionUtils-f77d2452.js","./styleUtils-4d62e921.js","./popupUtils-7d1e2de5.js","./callExpressionWithFeature-6f3761f2.js","./quantizationUtils-dc028b68.js","./webStyleSymbolUtils-0f876db3.js","./ElevationSamplerData-b8eeacdf.js","./TileInfo-f339e6a5.js","./WaterSurface.glsl-55a88d78.js","./NormalUtils.glsl-f259fe4a.js","./HUD.glsl-79bd614f.js","./edgeProcessing-fa6d4038.js","./deduplicate-dffc7dea.js","./MeshComponent-f5ec9479.js","./earcut-61f7b102.js","./projection-c67d3c7f.js","./HUDMaterial.glsl-caa3e151.js","./sdfPrimitives-86e63320.js","./floatRGBA-11065dbc.js","./dehydratedFeatures-55779981.js","./labelFormatUtils-695eab3b.js","./orientedBoundingBox-8bbf4141.js","./quatf32-51a323b8.js","./LineCallout.glsl-ede36b7c.js","./QueryEngineResult-c580d29f.js","./WhereClause-cbd158ef.js","./executionError-fb3f283a.js","./utils-f1e38d04.js","./generateRendererUtils-65ba2788.js","./json-48e3ea08.js","./MarkerSizing.glsl-0f21463c.js","./RibbonLine.glsl-376e988d.js","./LineStipple.glsl-dfd34f08.js","./LineMarker.glsl-b68d2081.js","./NativeLine.glsl-38506d53.js","./Path.glsl-5da6ce18.js","./ColorMaterial.glsl-d42d7e44.js","./Pattern.glsl-cc643bcf.js","./LercDecoder-e072a355.js","./enums-fb086c25.js","./config-f7904f35.js","./TileKey-ae8a9188.js","./workerHelper-7b69330e.js","./capabilities-8176ed28.js","./geometryEngine-68f880a9.js","./geometryEngineBase-e1a33b0a.js","./hydrated-61d2b3c5.js","./floating-ui-8c8de742.js","./StreamLayer-b816a6d3.js","./SceneFilter-8312e3bf.js","./persistable-63f0629a.js","./resourceExtension-a93bca74.js","./elevationInfoUtils-ab005f9a.js","./DimensionAnalysis-0ac2f8cd.js","./Analysis-cc5bd6fb.js","./ExportImageParameters-c93de02f.js","./sublayerUtils-7a7b4353.js","./index-2f6aec2e.css","./AnalysisView3D-1c8b14ef.js","./euclideanAreaMeasurementUtils-f8aad2db.js","./measurementUtils-7ae47288.js","./LineVisualElement-b2465764.js","./EditGeometryOperations-73b6c5df.js","./analysisThemeUtils-c2d98636.js","./colorUtils-52ea1047.js","./Segment-9f590ab3.js","./TextOverlayItem-85184606.js"],import.meta.url));const Ms={factor:0,units:-25},$s=Qt(Q.SRC_ALPHA,Q.ONE,Q.ONE_MINUS_SRC_ALPHA,Q.ONE_MINUS_SRC_ALPHA);class G extends ls{constructor(){super(...arguments),this.transparencyPassType=k.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}a([z({count:k.COUNT})],G.prototype,"transparencyPassType",void 0),a([z()],G.prototype,"transparent",void 0),a([z()],G.prototype,"writeDepth",void 0),a([z()],G.prototype,"polygonOffset",void 0),a([z()],G.prototype,"hasMultipassTerrain",void 0),a([z()],G.prototype,"cullAboveGround",void 0);class Vs extends Vt{constructor(e){super(e,new Gs),this._configuration=new G}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}requiresSlot(e,s){return s===xe.Color||s===xe.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?J.TRANSPARENT_MATERIAL:J.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:J.OPAQUE_MATERIAL)||e===J.DRAPED_MATERIAL:!1}createGLMaterial(e){return new Rs(e)}createBufferWriter(){return new Ct(Rt)}}let Rs=class extends bt{beginSlot(e){return this.ensureTechnique(Ke,e)}};class Gs extends Jt{constructor(){super(...arguments),this.size=je(1,1),this.color1=ie(.75,.75,.75,1),this.color2=ie(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Ds extends Et{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=D.OccludeAndTransparent,this._geometry=null,this._size=je(1,1),this._color1=ie(1,.5,0,.5),this._color2=ie(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){at(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Re(e,this._color1)||(Ge(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Re(e,this._color2)||(Ge(this._color2,e),this._updateMaterial())}_updateMaterial(){_(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Vs({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){_(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(q(this._geometry)||q(this._checkerBoardMaterial))return;const s=xs;kt(s,this.transform);const i=this._geometry,r=[],n=c();i.position.forEach(d=>{se(n,d,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(d=>{o.push(d[0],d[1])});const h=new Pt(this._checkerBoardMaterial,[[T.POSITION,new De(r,3,!0)],[T.UV0,new De(o,2,!0)]],[[T.POSITION,i.triangleIndices],[T.UV0,i.triangleIndices]]);e.addGeometry(h)}_geometryChanged(){this.recreateGeometry()}}const xs=c();let w=class extends me{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._handles=new Ie,this._params={pathLineColor:j.toUnitRGBA(X()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:j.toUnitRGBA(X()),perimeterLineWidth:2,projectionLineColor:j.toUnitRGBA(X()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:j.toUnitRGBA(X(.5)),areaColor2:j.toUnitRGBA(Ft(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=Ht(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=zs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new U({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPath=new U({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._perimeter=new U({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPerimeter=new U({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._projectionLines=new U({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:Gt(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._measurementArea=new Ds({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const i={attached:!0,backgroundColor:qt(.6),textColor:Nt(),view:s};this._areaLabel=new Z({...i,fontSize:I.Large}),this._pathLengthLabel=new Z({...i,fontSize:I.Small}),this._cursorSegmentLengthLabel=new Z({...i,fontSize:I.Small}),this._perimeterLengthLabel=new Z({...i,fontSize:I.Small}),this._handles.add([N(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),he),N(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),he),ds(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=v(this._measurementArea),this._path=v(this._path),this._intersectedPath=v(this._intersectedPath),this._perimeter=v(this._perimeter),this._intersectedPerimeter=v(this._intersectedPerimeter),this._areaLabel=v(this._areaLabel),this._pathLengthLabel=v(this._pathLengthLabel),this._cursorSegmentLengthLabel=v(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=v(this._perimeterLengthLabel),this._projectionLines=v(this._projectionLines),this._handles=v(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;q(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=rt(Math.sqrt(d.value)/Math.sqrt(300)),o*=Math.sqrt(ut(1,d.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:i,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;oe(t.positionsRenderCoords,this._origin),Bt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,i=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],o=[],h=[],d=e.validMeasurement?s.numVertices:s.numVertices-1;for(let u=0;u<d;++u){const p=e[t][u],g=e[t][(u+1)%s.numVertices];let m=null;switch(r){case"euclidean":m=new pe(p,g);break;case"geodesic":m=new Ve(p,g,i)}e.intersectingSegments.has(u)?h.push(m):o.push(m),n.push(m)}return{all:n,nonIntersecting:o,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,i=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:o}=e,h=!o.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,o.numVertices>0&&h&&_(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const u=e.positionsRenderCoords[o.numVertices-1],p=this._cursorPositionRenderSpace;let g=null;switch(n){case"euclidean":g=new pe(u,p);break;case"geodesic":g=new Ve(u,p,d)}i.nonIntersecting.push(g),this._cursorSegment=g}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=i.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path,i=t.mode;if(s.numVertices>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s.numVertices;++n){const o=c();se(o,t.positionsRenderCoords[n],this._origin);const h=c();se(h,t.positionsFittedRenderCoords[n],this._origin),r.push([o,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=!i.isValidPolygon,n=this.visible,o=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);_(o)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=o,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",W(o));const h=this._formatLengthLabel(this.messages,s==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(_(h)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const m=this._pathSegments[t.pathLengthLabelSegmentIndex],y=_(this._cursorSegment)?this._cursorSegment:Os;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:m,right:y},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&i.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=s==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(_(d)){const m=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=_(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=W(m),this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const u=t.mode==="geodesic",p=u?e.geodesicPathLength:e.perimeterLength,g=this._formatLengthLabel(this.messages,p,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",W(g)),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=W(g),this._perimeterLengthLabel.visible=!0;let m=!0;for(let y=0;y<t.path.numVertices;++y){const b=(t.perimeterLengthLabelSegmentIndex+y)%t.path.numVertices,P=u?this._pathSegments[b]:this._perimeterSegments[b];if(m=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:P,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;m=!1}this._perimeterLengthLabel.visible=m&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return nt(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return gt(t.value,t.unit);case"imperial":return mt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return ft(t.value,t.unit);case"imperial":return _t(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&ve(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&ve(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,cs("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var I;a([l()],w.prototype,"view",void 0),a([l()],w.prototype,"messages",void 0),a([l()],w.prototype,"analysis",void 0),a([l()],w.prototype,"viewData",void 0),a([l()],w.prototype,"analysisViewData",void 0),a([l({readOnly:!0})],w.prototype,"areaLabel",void 0),a([l({readOnly:!0})],w.prototype,"perimeterLengthLabel",void 0),a([l()],w.prototype,"loadingMessages",void 0),a([l()],w.prototype,"visible",null),w=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],w),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(I||(I={}));const zs={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Os=new pe(c(),c());let f=class extends Qe(me){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=ae.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new w({view:e,analysis:t,analysisViewData:this}),this.analysisController=new O({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=v(this.analysisController),this.analysisVisualization=v(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return q(t)?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return Ee(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([l({readOnly:!0})],f.prototype,"type",void 0),a([l({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),a([l()],f.prototype,"updating",null),a([l()],f.prototype,"analysisVisualization",void 0),a([l()],f.prototype,"analysisController",void 0),a([l()],f.prototype,"result",null),a([l()],f.prototype,"measurementData",void 0),a([l()],f.prototype,"viewData",null),a([l()],f.prototype,"validMeasurement",null),a([l()],f.prototype,"path",void 0),a([l()],f.prototype,"lastDraggedVertex",void 0),a([l()],f.prototype,"cursorPoint",void 0),a([l()],f.prototype,"mode",void 0),a([l()],f.prototype,"unit",null),a([l(Ze)],f.prototype,"_defaultUnit",void 0),f=a([re("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],f);const Ts=f,Ii=Object.freeze(Object.defineProperty({__proto__:null,default:Ts},Symbol.toStringTag,{value:"Module"}));export{Ii as A,Ps as n};
