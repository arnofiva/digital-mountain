import{x as v,G as d,H as h}from"./symbols-5a102dff.js";import{c as C,a as $}from"./devEnvironmentUtils-5002a058.js";import{a as N}from"./Error-62cc7aff.js";import{c as F,r as S}from"./typedArrayUtil-70e1d79e.js";import{L as u,p as U}from"./request-f01affa1.js";import{b as w}from"./Portal-52d960e8.js";import{c as g}from"./persistableUrlUtils-ccf13db2.js";import{y as D}from"./jsonUtils-ba20c384.js";import{p as G,b as H,j as P,d as j,U as L}from"./styleUtils-ba5d50e4.js";import"./ensureType-249b88cd.js";import"./string-7a2f1d87.js";import"./JSONSupport-32b5ad86.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-59dab60c.js";import"./CIMSymbol-561444b9.js";import"./enumeration-504d95a2.js";import"./Extent-2ad2c9a9.js";import"./Ellipsoid-89682c5e.js";import"./fieldUtils-e397be4b.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./geometry-f89ca072.js";import"./Polyline-cf51ad23.js";import"./typeUtils-05f9d41d.js";import"./Color-5a385b27.js";import"./colorUtils-639f4d25.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-c0957a27.js";import"./symbolLayerUtils3D-5a2f49a8.js";import"./aaBoundingBox-dfb04110.js";import"./aaBoundingRect-42f9721f.js";import"./Symbol3DAnchorPosition2D-d0207ef9.js";import"./Collection-9e42cc30.js";import"./Evented-36093e88.js";import"./SimpleObservable-a6d3d2d8.js";import"./collectionUtils-61fc1a27.js";import"./Clonable-95fa5d2d.js";import"./Loadable-7c3ecd79.js";import"./Promise-3959c3ee.js";import"./locale-30120714.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./layerUtils-ff76096c.js";function Ct(t,r,o,m){return t.name?t.styleName&&t.styleName==="Esri2DPointSymbolsStyle"?R(t,r,m):G(t,r,m).then(a=>M(F(a),t.name,r,o,m)):Promise.reject(new N("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function M(t,r,o,m,a){var f;const y=t.data,l=o&&S(o.portal)?o.portal:w.getDefault(),c={portal:l,url:u(t.baseUrl),origin:"portal-item"},p=y.items.find(e=>e.name===r);if(!p){const e=`The symbol name '${r}' could not be found`;return Promise.reject(new N("symbolstyleutils:symbol-name-not-found",e,{symbolName:r}))}let n=g(H(p,m),c),s=((f=p.thumbnail)==null?void 0:f.href)??null;const b=p.thumbnail&&p.thumbnail.imageData;C()&&(n=$(n)??"",s=$(s));const O={portal:l,url:u(U(n)),origin:"portal-item"};return P(n,a).then(e=>{const x=m==="cimRef"?j(e.data):e.data,i=D(x,O);if(i&&v(i)){if(s){const E=g(s,c);i.thumbnail=new d({url:E})}else b&&(i.thumbnail=new d({url:`data:image/png;base64,${b}`}));t.styleUrl?i.styleOrigin=new h({portal:o.portal,styleUrl:t.styleUrl,name:r}):t.styleName&&(i.styleOrigin=new h({portal:o.portal,styleName:t.styleName,name:r}))}return i})}function R(t,r,o){const m=L.replace(/\{SymbolName\}/gi,t.name),a=S(r.portal)?r.portal:w.getDefault();return P(m,o).then(y=>{const l=j(y.data);return D(l,{portal:a,url:u(U(m)),origin:"portal-item"})})}export{M as fetchSymbolFromStyle,Ct as resolveWebStyleSymbol};
