import{t as f}from"./byteSizeEstimations-f0cab514.js";import"./string-7a2f1d87.js";import{r as m,t as h,Q as l}from"./typedArrayUtil-70e1d79e.js";import{j as y}from"./JSONSupport-32b5ad86.js";import{f as g}from"./Extent-2ad2c9a9.js";import{S as b,s as p}from"./aaBoundingBox-dfb04110.js";import{D as d,x as u}from"./aaBoundingRect-42f9721f.js";import{C as x,B as Z,q as M,v as k}from"./quantizationUtils-5accf704.js";import{o as N}from"./typeUtils-05f9d41d.js";import{y as v}from"./Field-efd8d6fa.js";class P{constructor(e,s,r){this.uid=e,this.geometry=s,this.attributes=r,this.visible=!0,this.objectId=null,this.centroid=null}}function q(t){return m(t.geometry)}class B{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function C(t){var o;const e=N.fromJSON(t.geometryType),s=g.fromJSON(t.spatialReference),r=t.transform,i=t.features.map(c=>{const a=I(c,e,s,t.objectIdFieldName),n=a.geometry;if(m(n)&&r)switch(n.type){case"point":a.geometry=k(r,n,n,n.hasZ,n.hasM);break;case"multipoint":a.geometry=M(r,n,n,!!n.hasZ,!!n.hasM);break;case"polygon":a.geometry=Z(r,n,n,!!n.hasZ,!!n.hasM);break;case"polyline":a.geometry=x(r,n,n,!!n.hasZ,!!n.hasM);break;case"extent":case"mesh":a.geometry=n}return a});return{geometryType:e,features:i,spatialReference:s,fields:((o=t.fields)==null?void 0:o.map(c=>v.fromJSON(c)))??[],objectIdFieldName:t.objectIdFieldName,globalIdFieldName:t.globalIdFieldName,geohashFieldName:t.geohashFieldName,geometryProperties:t.geometryProperties,hasZ:t.hasZ,hasM:t.hasM,exceededTransferLimit:t.exceededTransferLimit,transform:null}}function I(t,e,s,r){return{uid:y(),objectId:r&&t.attributes?t.attributes[r]:null,attributes:t.attributes,geometry:F(t.geometry,e,s),visible:!0}}function F(t,e,s){if(h(t))return null;switch(e){case"point":{const r=t;return{x:r.x,y:r.y,z:r.z,m:r.m,hasZ:r.z!=null,hasM:r.m!=null,type:"point",spatialReference:s}}case"polyline":{const r=t;return{paths:r.paths,hasZ:!!r.hasZ,hasM:!!r.hasM,type:"polyline",spatialReference:s}}case"polygon":{const r=t;return{rings:r.rings,hasZ:!!r.hasZ,hasM:!!r.hasM,type:"polygon",spatialReference:s}}case"multipoint":{const r=t;return{points:r.points,hasZ:!!r.hasZ,hasM:!!r.hasM,type:"multipoint",spatialReference:s}}}}function D(t,e,s,r){return{x:t,y:e,z:s,hasZ:s!=null,hasM:!1,spatialReference:r,type:"point"}}function j(t){if(h(t))return 0;let e=32;switch(t.type){case"point":e+=42;break;case"polyline":case"polygon":{let s=0;const r=2+(t.hasZ?1:0)+(t.hasM?1:0),i=t.type==="polyline"?t.paths:t.rings;for(const o of i)s+=o.length;e+=8*s*r+64,e+=128*s,e+=34,e+=32*(i.length+1);break}case"multipoint":{const s=2+(t.hasZ?1:0)+(t.hasM?1:0),r=t.points.length;e+=8*r*s+64,e+=128*r,e+=34,e+=32;break}case"extent":e+=98,t.hasM&&(e+=32),t.hasZ&&(e+=32);break;case"mesh":e+=l(t.vertexAttributes.position),e+=l(t.vertexAttributes.normal),e+=l(t.vertexAttributes.uv),e+=l(t.vertexAttributes.tangent)}return e}function Q(t){let e=32;return e+=f(t.attributes),e+=3,e+=8+j(t.geometry),e}function E(t){if(h(t))return 0;switch(t.type){case"point":return 1;case"polyline":{let e=0;for(const s of t.paths)e+=s.length;return e}case"polygon":{let e=0;for(const s of t.rings)e+=s.length;return e}case"multipoint":return t.points.length;case"extent":return 2;case"mesh":{const e=t.vertexAttributes&&t.vertexAttributes.position;return e?e.length/3:0}default:return}}function G(t){if(h(t))return!1;switch(t.type){case"extent":case"point":return!0;case"polyline":for(const e of t.paths)if(e.length>0)return!0;return!1;case"polygon":for(const e of t.rings)if(e.length>0)return!0;return!1;case"multipoint":return t.points.length>0;case"mesh":return!t.loaded||t.vertexAttributes.position.length>0}}function H(t,e){switch(b(e),t.type==="mesh"&&(t=t.extent),t.type){case"point":e[0]=e[3]=t.x,e[1]=e[4]=t.y,t.hasZ&&(e[2]=e[5]=t.z);break;case"polyline":for(let s=0;s<t.paths.length;s++)p(e,t.paths[s],!!t.hasZ);break;case"polygon":for(let s=0;s<t.rings.length;s++)p(e,t.rings[s],!!t.hasZ);break;case"multipoint":p(e,t.points,!!t.hasZ);break;case"extent":e[0]=t.xmin,e[1]=t.ymin,e[3]=t.xmax,e[4]=t.ymax,t.zmin!=null&&(e[2]=t.zmin),t.zmax!=null&&(e[5]=t.zmax)}}function K(t,e){switch(d(e),t.type==="mesh"&&(t=t.extent),t.type){case"point":e[0]=e[2]=t.x,e[1]=e[3]=t.y;break;case"polyline":for(let s=0;s<t.paths.length;s++)u(e,t.paths[s]);break;case"polygon":for(let s=0;s<t.rings.length;s++)u(e,t.rings[s]);break;case"multipoint":u(e,t.points);break;case"extent":e[0]=t.xmin,e[1]=t.ymin,e[2]=t.xmax,e[3]=t.ymax}}function U(t,e){return t.objectId!=null?t.objectId:t.attributes&&e?t.attributes[e]:null}export{G as F,H as I,D as M,Q as N,U as R,q as b,B as d,P as g,K as v,C as x,E as z};
