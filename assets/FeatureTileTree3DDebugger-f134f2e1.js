import{t as s,e as o,y as e,a as n}from"./JSONSupport-32b5ad86.js";import"./geometry-f89ca072.js";import{a as d}from"./typedArrayUtil-70e1d79e.js";import{h}from"./reactiveUtils-e6d6c898.js";import"./ensureType-249b88cd.js";import{c as l}from"./HandleOwner-f4554d8c.js";import{b as g}from"./TileTreeDebugger-4c1f6a1b.js";import{v as c}from"./Polyline-cf51ad23.js";import"./string-7a2f1d87.js";import"./Error-62cc7aff.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-59dab60c.js";import"./Extent-2ad2c9a9.js";import"./Ellipsoid-89682c5e.js";import"./typeUtils-05f9d41d.js";import"./Color-5a385b27.js";import"./colorUtils-639f4d25.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./Graphic-46941d56.js";import"./PopupTemplate-c1fb66ed.js";import"./Clonable-95fa5d2d.js";import"./Collection-9e42cc30.js";import"./Evented-36093e88.js";import"./SimpleObservable-a6d3d2d8.js";import"./fieldUtils-e397be4b.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./enumeration-504d95a2.js";import"./number-2db5f4a2.js";import"./locale-30120714.js";import"./Identifiable-99d92428.js";import"./symbols-5a102dff.js";import"./CIMSymbol-561444b9.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-c0957a27.js";import"./symbolLayerUtils3D-5a2f49a8.js";import"./aaBoundingBox-dfb04110.js";import"./aaBoundingRect-42f9721f.js";import"./request-f01affa1.js";import"./persistableUrlUtils-ccf13db2.js";import"./Symbol3DAnchorPosition2D-d0207ef9.js";import"./collectionUtils-61fc1a27.js";import"./Portal-52d960e8.js";import"./Loadable-7c3ecd79.js";import"./Promise-3959c3ee.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./jsonUtils-6d0a72e3.js";let r=class extends g{get updating(){var t;return((t=this._watchUpdatingTracking)==null?void 0:t.updating)??!1}constructor(t){super(t),this._watchUpdatingTracking=new l,this._handles=new s}initialize(){const{featureTiles:t}=this.view;this._handles.add(t.addClient()),this._watchUpdatingTracking.addOnCollectionChange(()=>t==null?void 0:t.tiles,()=>this.update(),h)}destroy(){this._handles=d(this._handles),this._watchUpdatingTracking.destroy()}getTiles(){const t=i=>{const[p,m,a]=i.lij;return c.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(p,m,a))};return this.view.featureTiles.tiles.toArray().sort((i,p)=>i.loadPriority-p.loadPriority).map(i=>({...i,geometry:t(i)}))}};o([e()],r.prototype,"_watchUpdatingTracking",void 0),o([e()],r.prototype,"updating",null),o([e()],r.prototype,"view",void 0),r=o([n("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],r);export{r as FeatureTileTree3DDebugger};
