import{e as s,y as a,s as v,a as g}from"./cast-8b575ab3.js";import{L as _,U as c,A as S,F as T}from"./request-fc61835a.js";import{a as u}from"./Error-685fdf30.js";import{a as b}from"./HandleOwner-f773ce72.js";import{l as w}from"./loadAll-8401c5ec.js";import{r as h}from"./typedArrayUtil-ce39e5f4.js";import{O}from"./MultiOriginJSONSupport-a1d33be9.js";import{w as $}from"./promiseUtils-e37fe75d.js";import{f as y,o as R,r as U}from"./Extent-680ef92a.js";import{b as W}from"./Layer-b29c44e3.js";import{i as L}from"./APIKeyMixin-d7cb7220.js";import{s as P}from"./ArcGISCachedService-a8e43661.js";import{E as A,y as D,Z as j}from"./SublayersOwner-939be123.js";import{p as B}from"./ArcGISService-7ce81abb.js";import{a as C}from"./BlendLayer-291a2b49.js";import{o as I}from"./CustomParametersMixin-0dbce8f2.js";import{c as M,f as N}from"./OperationalLayer-c3a14c54.js";import{_ as k}from"./PortalLayer-7f6f61d4.js";import{p as J}from"./RefreshableLayer-51d28698.js";import{t as q}from"./ScaleRangeLayer-7ff6c0d3.js";import{d as G,g as E,m as V}from"./arcgisLayerUrl-81a33ec5.js";import{e as x}from"./imageBitmapUtils-753ed100.js";import"./string-7a324480.js";import"./ArrayPool-5813d861.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./reactiveUtils-042dd05a.js";import"./asyncUtils-623987a8.js";import"./Collection-47946fa8.js";import"./Evented-d959ede6.js";import"./SimpleObservable-6f002ab0.js";import"./Loadable-695031ac.js";import"./Promise-e757e514.js";import"./Ellipsoid-89682c5e.js";import"./geometry-bad16232.js";import"./Polyline-889037e7.js";import"./typeUtils-700e0da4.js";import"./Identifiable-96150ecf.js";import"./TilemapCache-d0b032f4.js";import"./TileInfo-f339e6a5.js";import"./aaBoundingRect-41e05474.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./byteSizeEstimations-f0cab514.js";import"./LRUCache-16cff7d8.js";import"./MemCache-1d0e264b.js";import"./Version-419f71e1.js";import"./CollectionFlattener-9bc75576.js";import"./PopupTemplate-8ac0cb61.js";import"./Clonable-2b8b60cc.js";import"./fieldUtils-1ecec444.js";import"./arcadeOnDemand-a1bf65ec.js";import"./enumeration-4ec8d3f9.js";import"./number-134e9f14.js";import"./locale-30120714.js";import"./UniqueValueRenderer-3904f4cc.js";import"./symbols-0f3de684.js";import"./CIMSymbol-cdddfd9c.js";import"./Color-ad49dc79.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-6b5cbdc2.js";import"./symbolLayerUtils3D-51cc6d75.js";import"./aaBoundingBox-04c58f5a.js";import"./persistableUrlUtils-1c5d7615.js";import"./Symbol3DAnchorPosition2D-142c1e90.js";import"./collectionUtils-25147e5f.js";import"./Portal-7ecdc9f0.js";import"./PortalGroup-ea788274.js";import"./PortalUser-a1aa49cd.js";import"./LegendOptions-de492976.js";import"./diffUtils-0c65d604.js";import"./colorRamps-ddfecb23.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-a1979e31.js";import"./Graphic-96c42a4d.js";import"./jsonUtils-03437bcd.js";import"./compilerUtils-175b9e40.js";import"./lengthUtils-1d09729e.js";import"./jsonUtils-e877a23b.js";import"./layerUtils-0c01cb0c.js";import"./styleUtils-305d8f69.js";import"./jsonUtils-b2e5d321.js";import"./DictionaryLoader-1438695d.js";import"./deprecate-9828d7d2.js";import"./heatmapUtils-bc76f08e.js";import"./vec4f64-6d0e93be.js";import"./serviceCapabilitiesUtils-6f645c61.js";import"./QueryTask-fec5cc20.js";import"./Query-65d38c02.js";import"./TimeExtent-d116f9c4.js";import"./Field-1bc3a16a.js";import"./fieldType-232282e5.js";import"./normalizeUtils-6bee55d6.js";import"./normalizeUtilsCommon-17a95432.js";import"./executeForIds-44df8e64.js";import"./query-b200d7cb.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./OptimizedFeature-7f37a325.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bd6bba60.js";import"./zscale-def794ea.js";import"./executeQueryJSON-04f85be1.js";import"./FeatureSet-cb704b51.js";import"./featureConversionUtils-c227ec85.js";import"./FeatureType-474514d1.js";import"./FeatureTemplate-26b6ba5d.js";import"./FieldsIndex-967913ce.js";import"./labelingInfo-8462538e.js";import"./labelUtils-61dff46d.js";import"./defaultsJSON-59981e75.js";import"./AttachmentQuery-061e93ef.js";import"./popupUtils-7d1e2de5.js";import"./sublayerUtils-7a7b4353.js";import"./mat4f32-60a2394b.js";import"./mat4-4714ff8c.js";import"./ElevationInfo-ad190ee6.js";import"./PortalItem-6549afda.js";import"./assets-5052bbaa.js";import"./portalItemUtils-ba37e370.js";import"./projection-582e07d8.js";const d=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=class extends C(A(q(M(k(P(D(B(O(b(J(L(I(W))))))))))))){constructor(...r){super(...r),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=h(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch($).then(()=>this._fetchService(e))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=(e=this.parsedUrl)==null?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(r,e){return(r=r||e.tileInfo&&e.tileInfo.spatialReference)&&y.fromJSON(r)}writeSublayers(r,e,t,o){if(!this.loaded||!r)return;const n=r.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),p=[],m={writeSublayerStructure:!1,...o};n.forEach(l=>{const f=l.write({},m);p.push(f)}),p.some(l=>Object.keys(l).length>1)&&(e.layers=p)}get tileServers(){var r;return this._getDefaultTileServers((r=this.parsedUrl)==null?void 0:r.path)}castTileServers(r){return Array.isArray(r)?r.map(e=>_(e).path):null}fetchTile(r,e,t,o={}){const{signal:n}=o,p=this.getTileUrl(r,e,t),m={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(p,m).then(l=>l.data)}async fetchImageBitmapTile(r,e,t,o={}){const{signal:n}=o,p=this.getTileUrl(r,e,t),m={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:l}=await c(p,m);return x(l,p)}getTileUrl(r,e,t){var m,l;const o=!this.tilemapCache&&this.supportsBlankTile,n=S({...(m=this.parsedUrl)==null?void 0:m.query,blankTile:!o&&null,...this.customParameters,token:this.apiKey}),p=this.tileServers;return`${p&&p.length?p[e%p.length]:(l=this.parsedUrl)==null?void 0:l.path}/tile/${r}/${e}/${t}${n?"?"+n:""}`}loadAll(){return w(this,r=>{r(this.allSublayers)})}_fetchService(r){return new Promise((e,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void e({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const o=G(this.parsedUrl.path);if(h(o)&&o.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e,t)}).then(e=>{let t=this.url;if(e.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!E(t))return this._fetchServerVersion(t,r).then(o=>{this.read({currentVersion:o})}).catch(()=>{})})}_fetchServerVersion(r,e){if(!V(r))return Promise.reject();const t=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new u("tile-layer:version-not-available")})}_getMapName(r){const e=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return e?e[2]:void 0}_getDefaultAttribution(r){if(r==null)return null;let e;r=r.toLowerCase();for(let t=0,o=d.length;t<o;t++)if(e=d[t],e.toLowerCase().includes(r))return T("//static.arcgis.com/attribution/"+e);return null}_getDefaultTileServers(r){if(r==null)return[];const e=r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return e||t?[r,r.replace(e?/server\.arcgisonline/i:/services\.arcgisonline/i,e?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({type:Boolean})],i.prototype,"resampling",void 0),s([a()],i.prototype,"sourceJSON",void 0),s([a({type:y})],i.prototype,"spatialReference",void 0),s([R("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([a({readOnly:!0})],i.prototype,"sublayers",void 0),s([U("sublayers",{layers:{type:[j]}})],i.prototype,"writeSublayers",null),s([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([a()],i.prototype,"tileServers",null),s([v("tileServers")],i.prototype,"castTileServers",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([a(N)],i.prototype,"url",void 0),i=s([g("esri.layers.TileLayer")],i),i.prototype.fetchTile.__isDefault__=!0;const lt=i;export{lt as default};
