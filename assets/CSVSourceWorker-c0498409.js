import"./geometry-f89ca072.js";import{L as k,U as P,u as V}from"./request-f01affa1.js";import{j as L}from"./asyncUtils-8de18dd2.js";import{a as _,s as R}from"./Error-62cc7aff.js";import{j as G}from"./promiseUtils-59dab60c.js";import{l as Q}from"./projection-d42b91be.js";import{t as M}from"./json-48e3ea08.js";import{E as A,x as U,H as Y,f as Z,U as B}from"./Extent-2ad2c9a9.js";import{s as J,t as W}from"./OptimizedFeature-cb86a86f.js";import{g as z}from"./FeatureStore-b6e7eda2.js";import{f as H}from"./QueryEngineResult-60e819c8.js";import{e as K}from"./QueryEngine-146c01b4.js";import{a as X}from"./number-9d73a551.js";import{p as w,M as ee}from"./fieldUtils-e397be4b.js";import{i as te,o as ie}from"./clientSideDefaults-6c382415.js";import{r as b}from"./FieldsIndex-3347fdc5.js";import"./ensureType-249b88cd.js";import"./string-7a2f1d87.js";import"./typedArrayUtil-70e1d79e.js";import"./Polyline-cf51ad23.js";import"./JSONSupport-32b5ad86.js";import"./nextTick-3ee5a785.js";import"./typeUtils-05f9d41d.js";import"./preload-helper-41c905a7.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-a6d3d2d8.js";import"./mat4-4714ff8c.js";import"./assets-640b4d04.js";import"./aaBoundingRect-42f9721f.js";import"./Ellipsoid-89682c5e.js";import"./zscale-d428b1da.js";import"./Evented-36093e88.js";import"./aaBoundingBox-dfb04110.js";import"./featureConversionUtils-66a9b1ed.js";import"./jsonUtils-6d0a72e3.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BoundsStore-3597a01f.js";import"./PooledRBush-15b28b04.js";import"./quickselect-56c5966e.js";import"./optimizedFeatureQueryEngineAdapter-5596e92b.js";import"./centroid-31e9f7c2.js";import"./quantizationUtils-5accf704.js";import"./ItemCache-47345b61.js";import"./MemCache-a072224a.js";import"./WhereClause-ec2695a9.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./utils-eec406bb.js";import"./generateRendererUtils-9fa055c1.js";import"./enumeration-504d95a2.js";import"./normalizeUtils-11faac16.js";import"./normalizeUtilsCommon-f5194d67.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./QueryEngineCapabilities-42e44ded.js";import"./Scheduler-22864fbd.js";import"./reactiveUtils-e6d6c898.js";import"./locale-30120714.js";import"./defaultsJSON-59981e75.js";const E=/^\s*"([\S\s]*)"\s*$/,T=/""/g,S=`
`,ne=[","," ",";","|","	"];function*$(r,t,e){let i=0;for(;i<=r.length;){const n=r.indexOf(t,i),o=r.substring(i,n>-1?n:void 0);i+=o.length+t.length,e&&!o.trim()||(yield o)}}function O(r){const t=r.includes(`\r
`)?`\r
`:S;return $(r,t,!0)}function q(r,t){return $(r,t,!1)}function re(r,t,e){r=r.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...ne])).filter(s=>s!=null);for(const s of n){const a=I(r,s).length,u=I(t,s).length??a;a>1&&i.push({weight:Math.min(a,u),delimiter:s})}const o=i.sort(({weight:s},{weight:a})=>a-s).map(({delimiter:s})=>s);for(const s of o){const a=oe(v(r,s).names,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(a.longitudeFieldName&&a.latitudeFieldName)return{delimiter:s,locationInfo:a}}return{delimiter:o[0],locationInfo:null}}function*C(r,t,e,i=()=>Object.create(null)){const n=O(r);n.next();let o="",s="",a=0,u=i(),m=0;e:for(const g of n){const h=q(g,e);for(const f of h)if(o+=s+f,s="",a+=D(f),a%2==0){if(a>0){const p=E.exec(o);if(!p){u=i(),m=0,o="",a=0;continue e}u[t[m]]=p[1].replace(T,'"'),m++}else u[t[m]]=o,m++;o="",a=0}else s=e;a===0?(yield u,u=i(),m=0):s=S}}function v(r,t){const e=I(r,t).filter(n=>n!=null),i=e.map(n=>w(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function I(r,t){if(!(r!=null&&r.length))return[];const e=[];let i="",n="",o=0;const s=q(r,t);for(const a of s)if(i+=n+a,n="",o+=D(a),o%2==0){if(o>0){const u=E.exec(i);u&&e.push(u[1].replace(T,'"'))}else e.push(i);i="",o=0}else n=t;return e}function D(r){let t=0,e=0;for(e=r.indexOf('"',e);e>=0;)t++,e=r.indexOf('"',e+1);return t}function oe(r,t,e){var s,a;t=(s=w(t))==null?void 0:s.toLowerCase(),e=(a=w(e))==null?void 0:a.toLowerCase();const i=r.map(u=>u.toLowerCase()),n=t?r[i.indexOf(t)]:null,o=e?r[i.indexOf(e)]:null;return{longitudeFieldName:n||r[i.indexOf(me.find(u=>i.includes(u)))],latitudeFieldName:o||r[i.indexOf(ue.find(u=>i.includes(u)))]}}function se(r,t,e,i,n){const o=[],s=C(r,e,t),a=[];for(const u of s){if(a.length===10)break;a.push(u)}for(let u=0;u<e.length;u++){const m=e[u],g=i[u];if(m===n.longitudeFieldName||m===n.latitudeFieldName)o.push({name:m,type:"esriFieldTypeDouble",alias:g});else{let h,f;switch(ae(a.map(p=>p[m]))){case"integer":h="esriFieldTypeInteger";break;case"double":h="esriFieldTypeDouble";break;case"date":h="esriFieldTypeDate",f=36;break;default:h="esriFieldTypeString",f=255}o.push({name:m,type:h,alias:g,length:f})}}return o}function ae(r){if(!r.length)return"string";const t=/[^+-.,0-9]/;return r.map(e=>{let i=!1;if(e!==""){if(t.test(e))i=!0;else{let n=N(e);if(!isNaN(n))return/[.,]/.test(e)||!Number.isInteger(n)||n>214783647||n<-214783648?"double":"integer";if(e.includes("E")){if(n=Number(e),!isNaN(n))return"double";if(e.includes(",")){if(e=e.replace(",","."),n=Number(e),!isNaN(n))return"double";i=!0}else i=!0}else i=!0}return i?/^[-]?\d*[.,]?\d*$/.test(e)?"string":j(new Date(e),e)?"date":"string":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}function j(r,t){if(!r||Object.prototype.toString.call(r)!=="[object Date]"||isNaN(r.getTime()))return!1;let e=!0;if(!ce&&/\d+\W*$/.test(t)){const i=t.match(/[a-zA-Z]{2,}/);if(i){let n=!1,o=0;for(;!n&&o<=i.length;)n=!le.test(i[o]),o++;e=!n}}return e}const N=function(){const r=X(),t=new RegExp("^"+r.regexp+"$"),e=new RegExp("["+r.group+"\\s\\xa0]","g"),i=r.factor;return n=>{const o=t.exec(n);if(r.factor=i,!o)return NaN;let s=o[1];if(!o[1]){if(!o[2])return NaN;s=o[2],r.factor*=-1}return s=s.replace(e,"").replace(r.decimal,"."),+s*r.factor}}(),le=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,ce=Number.isNaN(new Date("technology 10").getTime()),ue=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],me=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],de=ie("esriGeometryPoint"),fe=["csv"],pe=[0,0];class he{constructor(t,e){this.x=t,this.y=e}}class bt{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var u;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((u=t==null?void 0:t.parsingOptions)==null?void 0:u.spatialReference)]),n=ye(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const o=await this._createFeatures(i);this._queryEngine.featureStore.addMany(o);const{fullExtent:s,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,a){const{start:m,end:g}=a;n.layerDefinition.timeInfo.timeExtent=[m,g]}return n}async applyEdits(){throw new _("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=L(this._snapshotFeatures),this._snapshotTask.promise.then(o=>{this._queryEngine.featureStore.clear(),o&&this._queryEngine.featureStore.addMany(o)},o=>{this._queryEngine.featureStore.clear(),G(o)||R.getLogger("esri.layers.CSVLayer").error(new _("csv-layer:refresh","An error occurred during refresh",{error:o}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new _("csv-layer:invalid-source","url not defined");const n=k(e);return(await P(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:o}=t.layerDefinition,s=new z({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new K({fields:i,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:o,objectIdField:e,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})}async _createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:o,spatialReference:s}=this._queryEngine;let a=[];const u=[],m=o.fields.filter(l=>l.name!==n).map(l=>l.name);let g=0;const h={};for(const l of o.fields)if(l.type!=="esriFieldTypeOID"&&l.type!=="esriFieldTypeGlobalID"){const y=ee(l);y!==void 0&&(h[l.name]=y)}const f=C(t,m,this._delimiter,te(h,n));for(const l of f){const y=this._parseCoordinateValue(l[e]),F=this._parseCoordinateValue(l[i]);if(F!=null&&y!=null&&!isNaN(y)&&!isNaN(F)){l[e]=y,l[i]=F;for(const c in l)if(c!==e&&c!==i){if(o.isDateField(c)){const d=new Date(l[c]);l[c]=j(d,l[c])?d.getTime():null}else if(o.isNumericField(c)){const d=N(l[c]);isNaN(d)?l[c]=null:l[c]=d}}l[n]=g,g++,a.push(new he(F,y)),u.push(l)}}if(!A({wkid:4326},s))if(U(s))for(const l of a)[l.x,l.y]=Y(l.x,l.y,pe);else a=Q(M,a,Z.WGS84,s,null,null);const p=[];for(let l=0;l<a.length;l++){const{x:y,y:F}=a[l],c=u[l];c[n]=l+1,p.push(new J(new W([],[y,F]),c,null,c[n]))}return p}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=N(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await H(B,t)}catch{throw new _("csv-layer:projection-not-supported","Projection not supported")}}}function ye(r,t){var l,y,F;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:V(t.url,fe)||"csv",drawingInfo:de,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},o=O(r),s=(l=o.next().value)==null?void 0:l.trim(),a=(y=o.next().value)==null?void 0:y.trim();if(!s)throw new _("csv-layer:empty-csv","CSV is empty",{csv:r});const{delimiter:u,locationInfo:m}=re(s,a,e);if(!u)throw new _("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:s,secondLine:a,parsingOptions:e});if(!m)throw new _("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:s,secondLine:a,parsingOptions:e});i.locationInfo=m,i.delimiter=u;const{names:g,aliases:h}=v(s,u),f=se(r,i.delimiter,g,h,i.locationInfo);if((F=e.fields)!=null&&F.length){const c=new b(e.fields);for(const d of f){const x=c.get(d.name);x&&Object.assign(d,x)}}if(!f.some(c=>c.type==="esriFieldTypeOID"&&(n.objectIdField=c.name,!0))){const c={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=c.name,f.unshift(c)}n.fields=f;const p=new b(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=p.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=p.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const c=n.timeInfo;if(c.startTimeField){const d=p.get(c.startTimeField);d?(c.startTimeField=d.name,d.type="esriFieldTypeDate"):c.startTimeField=null}if(c.endTimeField){const d=p.get(c.endTimeField);d?(c.endTimeField=d.name,d.type="esriFieldTypeDate"):c.endTimeField=null}if(c.trackIdField){const d=p.get(c.trackIdField);c.trackIdField=d?d.name:null}c.startTimeField||c.endTimeField||(n.timeInfo=null)}return i}export{bt as default};
