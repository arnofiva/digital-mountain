import{v as w,e as s,y as a,a as b}from"./cast-8b575ab3.js";import{r as l,e as E,t as c,v as k}from"./typedArrayUtil-ce39e5f4.js";import{j as F}from"./asyncUtils-623987a8.js";import{a as C}from"./HandleOwner-f773ce72.js";import{L as A,f as d,y as $}from"./promiseUtils-e37fe75d.js";import{h as y,l as G,a as R}from"./reactiveUtils-042dd05a.js";import"./ArrayPool-5813d861.js";import{v as P}from"./Polyline-889037e7.js";import{_ as x,A as I,r as O}from"./projection-582e07d8.js";import{p as H}from"./normalizeUtilsSync-5270c848.js";import{o as Z}from"./typeUtils-700e0da4.js";import{c as z}from"./featureConversionUtils-c227ec85.js";import{s as L}from"./OptimizedFeature-7f37a325.js";import{g as M}from"./FeatureStore-ddd73ade.js";import{e as W}from"./QueryEngine-14917f39.js";import{y as j}from"./elevationInfoUtils-ab005f9a.js";import{B as g}from"./DimensionalDefinition-4b26df38.js";import{dG as q,dF as T}from"./index-334863ed.js";import{i as B,p as D}from"./queryEngineUtils-3ae9042f.js";import{r as f,a as J,n as _}from"./symbologySnappingCandidates-9d1eabb3.js";import"./string-7a324480.js";import"./Error-685fdf30.js";import"./nextTick-3ee5a785.js";import"./Extent-680ef92a.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-41c905a7.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-6f002ab0.js";import"./mat4-4714ff8c.js";import"./assets-5052bbaa.js";import"./request-fc61835a.js";import"./aaBoundingRect-41e05474.js";import"./zscale-def794ea.js";import"./jsonUtils-03437bcd.js";import"./normalizeUtilsCommon-17a95432.js";import"./aaBoundingBox-04c58f5a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Evented-d959ede6.js";import"./BoundsStore-d242d513.js";import"./PooledRBush-733f2760.js";import"./quickselect-56c5966e.js";import"./optimizedFeatureQueryEngineAdapter-34dd80f1.js";import"./centroid-65165a98.js";import"./QueryEngineResult-c580d29f.js";import"./quantizationUtils-dc028b68.js";import"./ItemCache-c0904c4f.js";import"./MemCache-1d0e264b.js";import"./WhereClause-cbd158ef.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./utils-f1e38d04.js";import"./generateRendererUtils-65ba2788.js";import"./enumeration-4ec8d3f9.js";import"./json-48e3ea08.js";import"./normalizeUtils-6bee55d6.js";import"./geometry-bad16232.js";import"./fieldUtils-1ecec444.js";import"./arcadeOnDemand-a1bf65ec.js";import"./QueryEngineCapabilities-42e44ded.js";import"./FieldsIndex-967913ce.js";import"./Scheduler-3113abcd.js";import"./ElevationInfo-ad190ee6.js";import"./lengthUtils-1d09729e.js";import"./UniqueValueRenderer-3904f4cc.js";import"./symbols-0f3de684.js";import"./CIMSymbol-cdddfd9c.js";import"./Color-ad49dc79.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-6b5cbdc2.js";import"./symbolLayerUtils3D-51cc6d75.js";import"./persistableUrlUtils-1c5d7615.js";import"./Symbol3DAnchorPosition2D-142c1e90.js";import"./Collection-47946fa8.js";import"./collectionUtils-25147e5f.js";import"./Portal-7ecdc9f0.js";import"./Loadable-695031ac.js";import"./Promise-e757e514.js";import"./locale-30120714.js";import"./PortalGroup-ea788274.js";import"./PortalUser-a1aa49cd.js";import"./Clonable-2b8b60cc.js";import"./LegendOptions-de492976.js";import"./diffUtils-0c65d604.js";import"./colorRamps-ddfecb23.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-a1979e31.js";import"./Graphic-96c42a4d.js";import"./PopupTemplate-8ac0cb61.js";import"./number-134e9f14.js";import"./Identifiable-96150ecf.js";import"./compilerUtils-175b9e40.js";import"./jsonUtils-e877a23b.js";import"./layerUtils-0c01cb0c.js";import"./styleUtils-305d8f69.js";import"./vectorFieldUtils-3e325848.js";import"./colorUtils-7641d345.js";import"./BlendLayer-291a2b49.js";import"./mat4f32-60a2394b.js";import"./cimSymbolUtils-bff8b59b.js";import"./utils-3d986af0.js";import"./IdentityManager-13ed5348.js";import"./intl-b84fb3c9.js";import"./messages-8a541332.js";import"./uuid-73213768.js";import"./dom-2ec1e33c.js";import"./Basemap-f5ca570d.js";import"./deprecate-9828d7d2.js";import"./loadAll-8401c5ec.js";import"./PortalItem-6549afda.js";import"./writeUtils-ff257e5e.js";import"./CollectionFlattener-9bc75576.js";import"./TablesMixin-b6031ef9.js";import"./Layer-b29c44e3.js";import"./Cyclical-34b2a5e3.js";import"./MultiOriginJSONSupport-a1d33be9.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./HeightModelInfo-42ae0f61.js";import"./arcgisLayerUrl-81a33ec5.js";import"./ViewingMode-5d7d590b.js";import"./saveUtils-bf4b189a.js";import"./resourceUtils-e6e10558.js";import"./fieldType-232282e5.js";import"./OperationalLayer-c3a14c54.js";import"./TimeExtent-d116f9c4.js";import"./plane-e5e66c24.js";import"./sphere-8ab93b42.js";import"./vec4f64-6d0e93be.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./vec2f64-f35767d6.js";import"./mat3-4fd89d48.js";import"./Octree-d990d188.js";import"./Util-c12e93ba.js";import"./scaleUtils-87bb90d3.js";import"./lineSegment-b352e49e.js";import"./objectResourceUtils-8909e8c3.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-da65c548.js";import"./vec2-8acac370.js";import"./vec33-8529ce65.js";import"./DefaultMaterial_COLOR_GAMMA-87d1f8e6.js";import"./types-e1c0a5bf.js";import"./enums-fc527c7c.js";import"./Version-419f71e1.js";import"./quat-99c4e099.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-37e06e9a.js";import"./DefaultMaterial.glsl-7d7dc23e.js";import"./ForwardLinearDepth.glsl-a0929473.js";import"./Matrix3PassUniform-0b3b1bba.js";import"./ShaderBuilder-7bfc11d2.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./View.glsl-03db830e.js";import"./Texture2DPassUniform-70e1e126.js";import"./MixExternalColor.glsl-99b269fe.js";import"./ShaderTechniqueConfiguration-ee770726.js";import"./symbolColorUtils-834d5fca.js";import"./PhysicallyBasedRendering.glsl-32dfb9c7.js";import"./FloatPassUniform-e3702139.js";import"./Float4PassUniform-7f3c3ce8.js";import"./RgbaFloatEncoding.glsl-4a25e2a7.js";import"./Texture2DDrawUniform-02720a73.js";import"./PiUtils.glsl-5ee49495.js";import"./VisualVariablePassParameters-8cb0a75a.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-bf6b5582.js";import"./context-util-7ede29e5.js";import"./Slice.glsl-7975394d.js";import"./Transform.glsl-7294c426.js";import"./ObjectAndLayerIdColor.glsl-a64028da.js";import"./OutputDepth.glsl-f581dcdd.js";import"./OutputHighlight.glsl-08aacdf4.js";import"./VisualVariables.glsl-9e988d16.js";import"./DiscardOrAdjustAlphaBlend.glsl-f19054e7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a6b20292.js";import"./VertexColor.glsl-79a8c465.js";import"./VerticalOffset.glsl-5354e013.js";import"./Normals.glsl-0f400ece.js";import"./EvaluateSceneLighting.glsl-5da94bb7.js";import"./SSAOBlur.glsl-7265df26.js";import"./ScreenSpacePass.glsl-fee70090.js";import"./ReadLinearDepth.glsl-53a01bc1.js";import"./SSAO.glsl-c9cc39dd.js";import"./MultipassTerrainTest.glsl-43f42334.js";import"./vec2f32-eaf29605.js";import"./Texture-87febf19.js";import"./TextureOnly.glsl-548e665f.js";import"./Attribute-f72d3f37.js";import"./InterleavedLayout-d75b8228.js";import"./DefaultTechniqueConfiguration-5fedee5c.js";import"./RealisticTree.glsl-1e8f0ea9.js";import"./GraphicsLayer-70f87af0.js";import"./ScaleRangeLayer-7ff6c0d3.js";import"./workers-c3882da6.js";import"./Connection-6bd43370.js";import"./spatialReferenceEllipsoidUtils-23733e37.js";import"./AttachmentInfo-6f2ba68c.js";import"./AttachmentQuery-061e93ef.js";import"./jsonUtils-b2e5d321.js";import"./DictionaryLoader-1438695d.js";import"./LRUCache-16cff7d8.js";import"./heatmapUtils-bc76f08e.js";import"./Query-65d38c02.js";import"./Field-1bc3a16a.js";import"./executeQueryJSON-04f85be1.js";import"./query-b200d7cb.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./queryZScale-bd6bba60.js";import"./FeatureSet-cb704b51.js";import"./RelationshipQuery-0abdb3e2.js";import"./TopFeaturesQuery-3a519c5e.js";import"./FeatureLayer-f2f6536e.js";import"./serviceCapabilitiesUtils-6f645c61.js";import"./FeatureLayerBase-b19f7ee7.js";import"./TimeReference-aeda2bb8.js";import"./editsZScale-eefb35e6.js";import"./APIKeyMixin-d7cb7220.js";import"./ArcGISService-7ce81abb.js";import"./CustomParametersMixin-0dbce8f2.js";import"./EditBusLayer-faff46ba.js";import"./FeatureReductionLayer-55e6b2c4.js";import"./labelingInfo-8462538e.js";import"./labelUtils-61dff46d.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-f840e564.js";import"./PortalLayer-7f6f61d4.js";import"./portalItemUtils-ba37e370.js";import"./RefreshableLayer-51d28698.js";import"./TemporalLayer-12ea8921.js";import"./FeatureTemplate-26b6ba5d.js";import"./FeatureType-474514d1.js";import"./fieldProperties-66b12497.js";import"./versionUtils-f77d2452.js";import"./styleUtils-4d62e921.js";import"./popupUtils-7d1e2de5.js";import"./callExpressionWithFeature-6f3761f2.js";import"./webStyleSymbolUtils-0f876db3.js";import"./ElevationSamplerData-b8eeacdf.js";import"./TileInfo-f339e6a5.js";import"./WaterSurface.glsl-55a88d78.js";import"./NormalUtils.glsl-f259fe4a.js";import"./HUD.glsl-79bd614f.js";import"./edgeProcessing-fa6d4038.js";import"./deduplicate-dffc7dea.js";import"./MeshComponent-f5ec9479.js";import"./earcut-61f7b102.js";import"./projection-c67d3c7f.js";import"./HUDMaterial.glsl-caa3e151.js";import"./sdfPrimitives-86e63320.js";import"./floatRGBA-11065dbc.js";import"./dehydratedFeatures-55779981.js";import"./labelFormatUtils-695eab3b.js";import"./orientedBoundingBox-8bbf4141.js";import"./quatf32-51a323b8.js";import"./LineCallout.glsl-ede36b7c.js";import"./MarkerSizing.glsl-0f21463c.js";import"./RibbonLine.glsl-376e988d.js";import"./LineStipple.glsl-dfd34f08.js";import"./LineMarker.glsl-b68d2081.js";import"./NativeLine.glsl-38506d53.js";import"./Path.glsl-5da6ce18.js";import"./ColorMaterial.glsl-d42d7e44.js";import"./Pattern.glsl-cc643bcf.js";import"./LercDecoder-e072a355.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-ae8a9188.js";import"./workerHelper-7b69330e.js";import"./capabilities-8176ed28.js";import"./geometryEngine-68f880a9.js";import"./geometryEngineBase-e1a33b0a.js";import"./hydrated-61d2b3c5.js";import"./floating-ui-8c8de742.js";import"./StreamLayer-b816a6d3.js";import"./SceneFilter-8312e3bf.js";import"./persistable-63f0629a.js";import"./resourceExtension-a93bca74.js";import"./DimensionAnalysis-0ac2f8cd.js";import"./Analysis-cc5bd6fb.js";import"./ExportImageParameters-c93de02f.js";import"./sublayerUtils-7a7b4353.js";import"./VertexSnappingCandidate-f9610e8f.js";import"./PointSnappingHint-d61d3bbf.js";const v="graphics-collections";let m=class extends C(w){get updating(){return this.updatingHandles.updating}get _hasZ(){const t=this.view;return l(t)&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:i}=this.layerSource,o=l(t)&&t.type==="3d";if(!o||i.type==="map-notes")return f();const r=async(e,p)=>(await $(t.whenLayerView(i),p)).elevationAlignPointsInFeatures(e,p);return f(o,{elevationInfo:i.elevationInfo,alignPointsInFeatures:r,spatialReference:t.spatialReference})}get _snappingElevationFilter(){const{view:t}=this,i=l(t)&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return J(i)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:i}=this.layerSource,o=l(t)&&t.type==="3d",r=this._extrudedPolygonSymbolsCount>0;return o&&i.type!=="map-notes"&&r?_(r,async(e,p)=>{const n=await t.whenLayerView(i);return d(p),n.queryForSymbologySnapping({candidates:e,spatialReference:t.spatialReference},p)}):_()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),o=>{this.updatingHandles.removeHandles(v);for(const r of o)this._addMany(r.graphics.toArray()),this.handles.add([r.on("graphic-update",e=>this._onGraphicUpdate(e)),this.updatingHandles.addOnCollectionChange(()=>r.graphics,e=>this._onGraphicsChanged(e))],v)},y);const{view:t}=this,{layer:i}=this.layerSource;l(t)&&t.type==="3d"&&i.type!=="map-notes"&&this.addHandles([t.elevationProvider.on("elevation-change",({context:o})=>{j(o,i.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),G(()=>i.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),y),R(()=>i,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,i){const{point:o}=t,r=await A(this._mapSources(n=>this._fetchCandidatesForSource(n,t,i)));d(i);const e=this._getGroundElevation,p=r.flat().map(n=>B(n,e));return q(o,p),p}get _getGroundElevation(){return D(this.view)}async _fetchCandidatesForSource(t,i,o){var u;const r=T(i,((u=E(this.view))==null?void 0:u.type)??"2d"),e=await t.queryEngine.executeQueryForSnapping(r,o);d(o);const p=await this._snappingElevationAligner.alignCandidates(e.candidates,o);d(o);const n=await this._symbologySnappingFetcher.fetch(p,o);d(o);const S=n.length===0?p:[...p,...n];return this._snappingElevationFilter.filter(r,S)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(i=>i.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const i of t.removed)this._remove(i);this._addMany(t.added)}_addMany(t){const i=[],o=new Map;for(const r of t)c(r.geometry)||(this._needsInitializeProjection(r.geometry.spatialReference)?(i.push(r.geometry.spatialReference),o.set(r.uid,r)):this._add(r));this._createPendingAdd(i,o)}_createPendingAdd(t,i){if(!t.length)return;const o=F(async p=>{await x(t.map(n=>({source:n,dest:this.spatialReference})),{signal:p}),this._markLoadedSpatialReferences(t);for(const[,n]of i)this._add(n)});this.updatingHandles.addPromise(o.promise);const r={task:o,graphics:i},e=()=>k(this._pendingAdds,r);o.promise.then(e,e),this._pendingAdds.push(r)}_markLoadedSpatialReferences(t){for(const i of t)i.wkid!=null&&this._loadedWkids.add(i.wkid),i.wkt!=null&&this._loadedWkts.add(i.wkt)}_add(t){if(c(t.geometry)||!t.visible)return;let i=t.geometry;if(i.type==="mesh")return;i.type==="extent"&&(i=P.fromExtent(i));const o=this._ensureSource(i.type);if(c(o))return;const r=this._createOptimizedFeature(t.uid,i);c(r)||(o.featureStore.add(r),g(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){return(t.wkid==null||!this._loadedWkids.has(t.wkid))&&(t.wkt==null||!this._loadedWkts.has(t.wkt))&&!I(t,this.spatialReference)}_createOptimizedFeature(t,i){const o=O(H(i),this.spatialReference);if(!o)return null;const r=this._ensureGeometryHasZ(o),e=z(r,this._hasZ,!1);return new L(e,{[h]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const i=r=>{for(;r.length<3;)r.push(0)},o=t.clone();switch(o.hasZ=!0,o.type){case"point":o.z=o.z??0;break;case"multipoint":o.points.forEach(i);break;case"polyline":o.paths.forEach(r=>r.forEach(i));break;case"polygon":o.rings.forEach(r=>r.forEach(i))}return o}_ensureSource(t){const i=this._sources[t];if(l(i))return i;const o=this._createSource(t);return this._sources[t]=o,o}_createSource(t){const i=Z.toJSON(t),o=this._hasZ,r=new M({geometryType:i,hasZ:o,hasM:!1});return{featureStore:r,queryEngine:new W({featureStore:r,fields:[{name:h,type:"esriFieldTypeOID",alias:h}],geometryType:i,hasM:!1,hasZ:o,objectIdField:h,spatialReference:this.spatialReference,scheduler:l(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(i=>this._removeFromSource(i,t));for(const i of this._pendingAdds)i.graphics.delete(t.uid),i.graphics.size===0&&i.task.abort()}_removeFromSource(t,i){const o=i.uid;t.featureStore.has(o)&&(t.featureStore.removeById(i.uid),g(i.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:i,polygon:o,polyline:r,multipoint:e}=this._sources,p=[];return l(i)&&p.push(t(i)),l(o)&&p.push(t(o)),l(r)&&p.push(t(r)),l(e)&&p.push(t(e)),p}};s([a()],m.prototype,"getGraphicsLayers",void 0),s([a({constructOnly:!0})],m.prototype,"layerSource",void 0),s([a({constructOnly:!0})],m.prototype,"spatialReference",void 0),s([a({constructOnly:!0})],m.prototype,"view",void 0),s([a({readOnly:!0})],m.prototype,"updating",null),s([a({readOnly:!0})],m.prototype,"availability",void 0),s([a()],m.prototype,"_hasZ",null),s([a()],m.prototype,"_snappingElevationAligner",null),s([a()],m.prototype,"_snappingElevationFilter",null),s([a()],m.prototype,"_symbologySnappingFetcher",null),s([a()],m.prototype,"_extrudedPolygonSymbolsCount",void 0),s([a()],m.prototype,"_getGroundElevation",null),m=s([b("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],m);const h="OBJECTID";export{m as GraphicsSnappingSource};
