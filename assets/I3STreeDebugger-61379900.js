import{e as u,y as h,a as S}from"./JSONSupport-32b5ad86.js";import"./geometry-f89ca072.js";import{r as d,t as f}from"./typedArrayUtil-70e1d79e.js";import"./ensureType-249b88cd.js";import{A as b}from"./mat4-4714ff8c.js";import{e as v}from"./mat4f64-abdda1bb.js";import{a as s,O as n,n as y}from"./vec3-015ca254.js";import{x as l}from"./projection-d42b91be.js";import{b as g}from"./TileTreeDebugger-4c1f6a1b.js";import{v as z}from"./Polyline-cf51ad23.js";import"./string-7a2f1d87.js";import"./Error-62cc7aff.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-59dab60c.js";import"./Extent-2ad2c9a9.js";import"./Ellipsoid-89682c5e.js";import"./typeUtils-05f9d41d.js";import"./common-d0b63c2d.js";import"./preload-helper-41c905a7.js";import"./mathUtils-5b623c84.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-a6d3d2d8.js";import"./assets-640b4d04.js";import"./request-f01affa1.js";import"./aaBoundingRect-42f9721f.js";import"./zscale-d428b1da.js";import"./Color-5a385b27.js";import"./colorUtils-639f4d25.js";import"./Graphic-46941d56.js";import"./PopupTemplate-c1fb66ed.js";import"./Clonable-95fa5d2d.js";import"./Collection-9e42cc30.js";import"./Evented-36093e88.js";import"./fieldUtils-e397be4b.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./enumeration-504d95a2.js";import"./number-2db5f4a2.js";import"./locale-30120714.js";import"./Identifiable-99d92428.js";import"./symbols-5a102dff.js";import"./CIMSymbol-561444b9.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-c0957a27.js";import"./symbolLayerUtils3D-5a2f49a8.js";import"./aaBoundingBox-dfb04110.js";import"./persistableUrlUtils-ccf13db2.js";import"./Symbol3DAnchorPosition2D-d0207ef9.js";import"./collectionUtils-61fc1a27.js";import"./Portal-52d960e8.js";import"./Loadable-7c3ecd79.js";import"./Promise-3959c3ee.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./jsonUtils-6d0a72e3.js";let a=class extends g{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),o=this.view.renderSpatialReference,p=this.nodeSR;return e.map(r=>j(r,o,p)).filter(d).sort((r,i)=>r.lij[0]===i.lij[0]?r.label>i.label?-1:1:r.lij[0]-i.lij[0])}};function j(e,o,p){const r=e.serviceObb;if(f(r)||f(o))return null;b(m,r.quaternion),s(t,r.center),l(t,p,0,t,o,0,1),m[12]=t[0],m[13]=t[1],m[14]=t[2];const i=[[],[],[]];s(t,r.halfSize),n(t,t,m),l(t,o,0,t,p,0,1),i[0].push([t[0],t[1]]),s(t,r.halfSize),t[0]=-t[0],n(t,t,m),l(t,o,0,t,p,0,1),i[0].push([t[0],t[1]]),s(t,r.halfSize),t[0]=-t[0],t[1]=-t[1],n(t,t,m),l(t,o,0,t,p,0,1),i[0].push([t[0],t[1]]),s(t,r.halfSize),t[1]=-t[1],n(t,t,m),l(t,o,0,t,p,0,1),i[0].push([t[0],t[1]]),i[1].push(i[0][0]),i[1].push(i[0][1]),s(t,r.halfSize),t[0]=-t[0],t[2]=-t[2],n(t,t,m),l(t,o,0,t,p,0,1),i[1].push([t[0],t[1]]),s(t,r.halfSize),t[2]=-t[2],n(t,t,m),l(t,o,0,t,p,0,1),i[1].push([t[0],t[1]]),i[2].push(i[0][0]),i[2].push(i[0][3]),s(t,r.halfSize),t[1]=-t[1],t[2]=-t[2],n(t,t,m),l(t,o,0,t,p,0,1),i[2].push([t[0],t[1]]),i[2].push(i[1][3]);const c=new z({rings:i,spatialReference:p});return{lij:[e.level,e.childCount,0],label:e.id,geometry:c}}u([h({constructOnly:!0})],a.prototype,"lv",void 0),u([h({constructOnly:!0})],a.prototype,"nodeSR",void 0),a=u([S("esri.views.3d.layers.support.I3STreeDebugger")],a);const m=v(),t=y();export{a as I3STreeDebugger};
