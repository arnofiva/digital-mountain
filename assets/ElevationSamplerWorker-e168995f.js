import{h as l}from"./string-7a324480.js";import{r as h}from"./typedArrayUtil-ce39e5f4.js";import{h as s}from"./PooledRBush-733f2760.js";import{k as u}from"./georeference-76e18bad.js";import"./cast-8b575ab3.js";import"./Error-685fdf30.js";import"./ArrayPool-5813d861.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e37fe75d.js";import"./quickselect-56c5966e.js";import"./Extent-680ef92a.js";import"./Ellipsoid-89682c5e.js";import"./mat3f64-50f3b9f6.js";import"./mat4-4714ff8c.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./mat4f64-abdda1bb.js";import"./mat3-4fd89d48.js";import"./projection-582e07d8.js";import"./preload-helper-41c905a7.js";import"./mathUtils-5b623c84.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-6f002ab0.js";import"./Polyline-889037e7.js";import"./assets-5052bbaa.js";import"./request-fc61835a.js";import"./aaBoundingRect-41e05474.js";import"./zscale-def794ea.js";import"./spatialReferenceEllipsoidUtils-23733e37.js";import"./quat-99c4e099.js";import"./quatf64-f8f1c132.js";import"./projection-c67d3c7f.js";import"./BufferView-da65c548.js";import"./vec2-8acac370.js";import"./vec33-8529ce65.js";class K{async createIndex(t,o){const e=new Array;if(!t.vertexAttributes||!t.vertexAttributes.position)return new s;const n=this._createMeshData(t),i=h(o)?await o.invoke("createIndexThread",n,{transferList:e}):this.createIndexThread(n).result;return this._createPooledRBush().fromJSON(i)}createIndexThread(t){const o=new Float64Array(t.position),e=this._createPooledRBush();return t.components?this._createIndexComponentsThread(e,o,t.components.map(n=>new Uint32Array(n))):this._createIndexAllThread(e,o)}_createIndexAllThread(t,o){const e=new Array(o.length/9);let n=0;for(let i=0;i<o.length;i+=9)e[n++]=p(o,i+0,i+3,i+6);return t.load(e),{result:t.toJSON()}}_createIndexComponentsThread(t,o,e){let n=0;for(const m of e)n+=m.length/3;const i=new Array(n);let c=0;for(const m of e)for(let a=0;a<m.length;a+=3)i[c++]=p(o,3*m[a+0],3*m[a+1],3*m[a+2]);return t.load(i),{result:t.toJSON()}}_createMeshData(t){const o=(t.transform?u({position:t.vertexAttributes.position,normal:null,tangent:null},t.transform,t.spatialReference).position:t.vertexAttributes.position).buffer;return!t.components||t.components.some(e=>!e.faces)?{position:o}:{position:o,components:t.components.map(e=>e.faces)}}_createPooledRBush(){return new s(9,l("esri-csp-restrictions")?t=>t:[".minX",".minY",".maxX",".maxY"])}}function p(r,t,o,e){return{minX:Math.min(r[t+0],r[o+0],r[e+0]),maxX:Math.max(r[t+0],r[o+0],r[e+0]),minY:Math.min(r[t+1],r[o+1],r[e+1]),maxY:Math.max(r[t+1],r[o+1],r[e+1]),p0:[r[t+0],r[t+1],r[t+2]],p1:[r[o+0],r[o+1],r[o+2]],p2:[r[e+0],r[e+1],r[e+2]]}}export{K as default};
