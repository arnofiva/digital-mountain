import{t as S,e as y,y as _,a as g}from"./cast-8b575ab3.js";import"./geometry-bad16232.js";import{a as h,s as V}from"./Error-685fdf30.js";import{r,a as x}from"./typedArrayUtil-ce39e5f4.js";import{l as a,h as T}from"./reactiveUtils-042dd05a.js";import"./ArrayPool-5813d861.js";import{_ as E,z as A,o as L,n as v}from"./vec3-015ca254.js";import{j as I}from"./projection-582e07d8.js";import{S as M,c as D}from"./aaBoundingBox-04c58f5a.js";import{E as P,f as F}from"./Extent-680ef92a.js";import{n as C}from"./LayerView3D-1b2fbab8.js";import{c as $}from"./PopupSceneLayerView-b094dc2a.js";import{u as R}from"./LayerView-e3f48a81.js";import{r as U}from"./context-util-7ede29e5.js";import"./string-7a324480.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e37fe75d.js";import"./Polyline-889037e7.js";import"./typeUtils-700e0da4.js";import"./common-d0b63c2d.js";import"./preload-helper-41c905a7.js";import"./mathUtils-5b623c84.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-6f002ab0.js";import"./mat4-4714ff8c.js";import"./assets-5052bbaa.js";import"./request-fc61835a.js";import"./aaBoundingRect-41e05474.js";import"./Ellipsoid-89682c5e.js";import"./zscale-def794ea.js";import"./index-334863ed.js";import"./IdentityManager-13ed5348.js";import"./Evented-d959ede6.js";import"./intl-b84fb3c9.js";import"./number-134e9f14.js";import"./locale-30120714.js";import"./messages-8a541332.js";import"./Promise-e757e514.js";import"./uuid-73213768.js";import"./dom-2ec1e33c.js";import"./Graphic-96c42a4d.js";import"./PopupTemplate-8ac0cb61.js";import"./Clonable-2b8b60cc.js";import"./Collection-47946fa8.js";import"./fieldUtils-1ecec444.js";import"./arcadeOnDemand-a1bf65ec.js";import"./enumeration-4ec8d3f9.js";import"./Identifiable-96150ecf.js";import"./symbols-0f3de684.js";import"./CIMSymbol-cdddfd9c.js";import"./Color-ad49dc79.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-6b5cbdc2.js";import"./symbolLayerUtils3D-51cc6d75.js";import"./persistableUrlUtils-1c5d7615.js";import"./Symbol3DAnchorPosition2D-142c1e90.js";import"./collectionUtils-25147e5f.js";import"./Portal-7ecdc9f0.js";import"./Loadable-695031ac.js";import"./PortalGroup-ea788274.js";import"./PortalUser-a1aa49cd.js";import"./jsonUtils-03437bcd.js";import"./Basemap-f5ca570d.js";import"./deprecate-9828d7d2.js";import"./loadAll-8401c5ec.js";import"./asyncUtils-623987a8.js";import"./PortalItem-6549afda.js";import"./writeUtils-ff257e5e.js";import"./layerUtils-0c01cb0c.js";import"./compilerUtils-175b9e40.js";import"./CollectionFlattener-9bc75576.js";import"./TablesMixin-b6031ef9.js";import"./Layer-b29c44e3.js";import"./Cyclical-34b2a5e3.js";import"./MultiOriginJSONSupport-a1d33be9.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./HeightModelInfo-42ae0f61.js";import"./arcgisLayerUrl-81a33ec5.js";import"./ViewingMode-5d7d590b.js";import"./saveUtils-bf4b189a.js";import"./resourceUtils-e6e10558.js";import"./fieldType-232282e5.js";import"./OperationalLayer-c3a14c54.js";import"./TimeExtent-d116f9c4.js";import"./ElevationInfo-ad190ee6.js";import"./lengthUtils-1d09729e.js";import"./plane-e5e66c24.js";import"./sphere-8ab93b42.js";import"./vec4f64-6d0e93be.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./vec2f64-f35767d6.js";import"./mat3-4fd89d48.js";import"./Octree-d990d188.js";import"./Util-c12e93ba.js";import"./scaleUtils-87bb90d3.js";import"./lineSegment-b352e49e.js";import"./objectResourceUtils-8909e8c3.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-da65c548.js";import"./vec2-8acac370.js";import"./vec33-8529ce65.js";import"./DefaultMaterial_COLOR_GAMMA-87d1f8e6.js";import"./types-e1c0a5bf.js";import"./enums-fc527c7c.js";import"./Version-419f71e1.js";import"./quat-99c4e099.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-37e06e9a.js";import"./DefaultMaterial.glsl-7d7dc23e.js";import"./ForwardLinearDepth.glsl-a0929473.js";import"./Matrix3PassUniform-0b3b1bba.js";import"./ShaderBuilder-7bfc11d2.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./View.glsl-03db830e.js";import"./mat4f32-60a2394b.js";import"./Texture2DPassUniform-70e1e126.js";import"./MixExternalColor.glsl-99b269fe.js";import"./ShaderTechniqueConfiguration-ee770726.js";import"./symbolColorUtils-834d5fca.js";import"./PhysicallyBasedRendering.glsl-32dfb9c7.js";import"./FloatPassUniform-e3702139.js";import"./Float4PassUniform-7f3c3ce8.js";import"./RgbaFloatEncoding.glsl-4a25e2a7.js";import"./Texture2DDrawUniform-02720a73.js";import"./PiUtils.glsl-5ee49495.js";import"./VisualVariablePassParameters-8cb0a75a.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-bf6b5582.js";import"./Slice.glsl-7975394d.js";import"./Transform.glsl-7294c426.js";import"./ObjectAndLayerIdColor.glsl-a64028da.js";import"./OutputDepth.glsl-f581dcdd.js";import"./OutputHighlight.glsl-08aacdf4.js";import"./VisualVariables.glsl-9e988d16.js";import"./DiscardOrAdjustAlphaBlend.glsl-f19054e7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a6b20292.js";import"./VertexColor.glsl-79a8c465.js";import"./VerticalOffset.glsl-5354e013.js";import"./Normals.glsl-0f400ece.js";import"./EvaluateSceneLighting.glsl-5da94bb7.js";import"./SSAOBlur.glsl-7265df26.js";import"./ScreenSpacePass.glsl-fee70090.js";import"./ReadLinearDepth.glsl-53a01bc1.js";import"./SSAO.glsl-c9cc39dd.js";import"./MultipassTerrainTest.glsl-43f42334.js";import"./vec2f32-eaf29605.js";import"./Texture-87febf19.js";import"./TextureOnly.glsl-548e665f.js";import"./Attribute-f72d3f37.js";import"./InterleavedLayout-d75b8228.js";import"./DefaultTechniqueConfiguration-5fedee5c.js";import"./RealisticTree.glsl-1e8f0ea9.js";import"./Scheduler-3113abcd.js";import"./GraphicsLayer-70f87af0.js";import"./HandleOwner-f773ce72.js";import"./BlendLayer-291a2b49.js";import"./ScaleRangeLayer-7ff6c0d3.js";import"./workers-c3882da6.js";import"./Connection-6bd43370.js";import"./spatialReferenceEllipsoidUtils-23733e37.js";import"./AttachmentInfo-6f2ba68c.js";import"./AttachmentQuery-061e93ef.js";import"./LegendOptions-de492976.js";import"./DimensionalDefinition-4b26df38.js";import"./UniqueValueRenderer-3904f4cc.js";import"./diffUtils-0c65d604.js";import"./colorRamps-ddfecb23.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-a1979e31.js";import"./jsonUtils-e877a23b.js";import"./styleUtils-305d8f69.js";import"./vectorFieldUtils-3e325848.js";import"./colorUtils-7641d345.js";import"./normalizeUtils-6bee55d6.js";import"./normalizeUtilsCommon-17a95432.js";import"./ItemCache-c0904c4f.js";import"./MemCache-1d0e264b.js";import"./cimSymbolUtils-bff8b59b.js";import"./utils-3d986af0.js";import"./jsonUtils-b2e5d321.js";import"./DictionaryLoader-1438695d.js";import"./LRUCache-16cff7d8.js";import"./heatmapUtils-bc76f08e.js";import"./Query-65d38c02.js";import"./Field-1bc3a16a.js";import"./executeQueryJSON-04f85be1.js";import"./query-b200d7cb.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./OptimizedFeature-7f37a325.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bd6bba60.js";import"./FeatureSet-cb704b51.js";import"./featureConversionUtils-c227ec85.js";import"./RelationshipQuery-0abdb3e2.js";import"./TopFeaturesQuery-3a519c5e.js";import"./FeatureLayer-f2f6536e.js";import"./serviceCapabilitiesUtils-6f645c61.js";import"./FeatureLayerBase-b19f7ee7.js";import"./TimeReference-aeda2bb8.js";import"./datetime-b6333958.js";import"./editsZScale-eefb35e6.js";import"./APIKeyMixin-d7cb7220.js";import"./ArcGISService-7ce81abb.js";import"./CustomParametersMixin-0dbce8f2.js";import"./EditBusLayer-faff46ba.js";import"./FeatureReductionLayer-55e6b2c4.js";import"./labelingInfo-8462538e.js";import"./labelUtils-61dff46d.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-f840e564.js";import"./PortalLayer-7f6f61d4.js";import"./portalItemUtils-ba37e370.js";import"./RefreshableLayer-51d28698.js";import"./TemporalLayer-12ea8921.js";import"./FeatureTemplate-26b6ba5d.js";import"./FeatureType-474514d1.js";import"./fieldProperties-66b12497.js";import"./FieldsIndex-967913ce.js";import"./versionUtils-f77d2452.js";import"./styleUtils-4d62e921.js";import"./popupUtils-7d1e2de5.js";import"./callExpressionWithFeature-6f3761f2.js";import"./quantizationUtils-dc028b68.js";import"./webStyleSymbolUtils-0f876db3.js";import"./ElevationSamplerData-b8eeacdf.js";import"./TileInfo-f339e6a5.js";import"./WaterSurface.glsl-55a88d78.js";import"./NormalUtils.glsl-f259fe4a.js";import"./HUD.glsl-79bd614f.js";import"./edgeProcessing-fa6d4038.js";import"./deduplicate-dffc7dea.js";import"./MeshComponent-f5ec9479.js";import"./earcut-61f7b102.js";import"./projection-c67d3c7f.js";import"./HUDMaterial.glsl-caa3e151.js";import"./sdfPrimitives-86e63320.js";import"./floatRGBA-11065dbc.js";import"./dehydratedFeatures-55779981.js";import"./labelFormatUtils-695eab3b.js";import"./orientedBoundingBox-8bbf4141.js";import"./quatf32-51a323b8.js";import"./LineCallout.glsl-ede36b7c.js";import"./QueryEngineResult-c580d29f.js";import"./WhereClause-cbd158ef.js";import"./executionError-fb3f283a.js";import"./utils-f1e38d04.js";import"./generateRendererUtils-65ba2788.js";import"./json-48e3ea08.js";import"./MarkerSizing.glsl-0f21463c.js";import"./RibbonLine.glsl-376e988d.js";import"./LineStipple.glsl-dfd34f08.js";import"./LineMarker.glsl-b68d2081.js";import"./NativeLine.glsl-38506d53.js";import"./Path.glsl-5da6ce18.js";import"./ColorMaterial.glsl-d42d7e44.js";import"./Pattern.glsl-cc643bcf.js";import"./LercDecoder-e072a355.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-ae8a9188.js";import"./workerHelper-7b69330e.js";import"./capabilities-8176ed28.js";import"./geometryEngine-68f880a9.js";import"./geometryEngineBase-e1a33b0a.js";import"./hydrated-61d2b3c5.js";import"./floating-ui-8c8de742.js";import"./StreamLayer-b816a6d3.js";import"./SceneFilter-8312e3bf.js";import"./persistable-63f0629a.js";import"./resourceExtension-a93bca74.js";import"./elevationInfoUtils-ab005f9a.js";import"./DimensionAnalysis-0ac2f8cd.js";import"./Analysis-cc5bd6fb.js";import"./ExportImageParameters-c93de02f.js";import"./sublayerUtils-7a7b4353.js";import"./popupUtils-d00ed938.js";var s;(function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"})(s||(s={}));const l=v(),w=v();let d=class extends $(C(R)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this._handles=new S,this._dbgFlags=new Set}get baseUrl(){var e;return((e=this.layer.parsedUrl)==null?void 0:e.path)??""}get wasmLayerId(){return this._wasmLayerId}initialize(){var c;if(this._dbgFlags.add(s.Error),this.view.viewingMode!=="local")throw new h("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(this.view._stage.renderView.renderingContext.type!==U.WEBGL2)throw new h("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});if(!((c=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&c.textureFloat))throw new h("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!P(e,this.view.spatialReference))throw new h("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=this.layer.currentVariableId,i=this.layer.getVolume(t),m=this.layer.getVariable(t);if(r(i)&&r(m)){const n=i.dimensions[0],o=i.dimensions[1],u=i.zDimension;if(u>1){const W=i.dimensions[u],f=n.size*o.size*W.size;let b=1;switch(m.renderingFormat.type){case"Int16":case"UInt16":b=2;break;case"Int32":case"UInt32":case"Float32":b=4}this._futureMemory=b*f}}const p=this.view.addVoxelLayerViewToWasm(this).then(n=>{this._wasmLayerId=n,this._suspendedHandle=a(()=>this.suspended,o=>{const u=this.view.voxelWasm;r(u)&&u.setEnabled(this,!o)},T),this._handles.add([a(()=>this.layer.renderMode,o=>this._pushRenderModeToWasm(o)),a(()=>this.layer.currentVariableId,o=>this._pushCurrentVariableIdToWasm(o)),a(()=>this.layer.getSections(),o=>this._pushSectionsToWasm(o)),a(()=>this.layer.getVariableStyles(),o=>this._pushVariableStylesToWasm(o)),a(()=>this.layer.getVolumeStyles(),o=>this._pushVolumeStylesToWasm(o)),a(()=>this.layer.enableDynamicSections,o=>this._pushEnableDynamicSectionsToWasm(o)),a(()=>this.layer.enableIsosurfaces,o=>this._pushEnableIsosurfacesToWasm(o)),a(()=>this.layer.enableSections,o=>this._pushEnableSectionsToWasm(o)),a(()=>this.layer.enableSlices,o=>this._pushEnableSlicesToWasm(o)),a(()=>this.slicePlaneEnabled,o=>this._pushAnalysisSliceToWasm(o,this.view.slicePlane)),a(()=>this.view.slicePlane,o=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,o))])}).catch(n=>{if(this.view.removeVoxelLayerViewFromWasm(this),this._wasmLayerId=-1,n===-1)throw new h("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(n===-2)throw new h("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(p)}destroy(){this.view.removeVoxelLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._handles=x(this._handles)}isUpdating(){const e=this.view.voxelWasm;return!(this._wasmLayerId<0||!r(e))&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}getUsedMemory(){return this._usedMemory}getUnloadedMemory(){return this._futureMemory}ignoresMemoryFactor(){return!0}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}whenGraphicBounds(e,t){const i=e.attributes["Voxel.WorldPosition"];if(i){const m=M(),p=JSON.parse(i);if(I(p,this.view.renderSpatialReference,w,this.view.spatialReference||F.WGS84))return D(m,w),Promise.resolve({boundingBox:m,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){const e=this.view.voxelWasm;r(e)&&e.captureFrustum()}toggleFullVolumeExtentDraw(){const e=this.view.voxelWasm;r(e)&&e.toggleFullVolumeExtentDraw(this)}getLayerTimes(){let e=[];const t=this.view.voxelWasm;return r(t)&&(e=t.getLayerTimes(this)),e}getCurrentLayerTimeIndex(){let e=0;const t=this.view.voxelWasm;return r(t)&&(e=t.getCurrentLayerTimeIndex(this)),e}_pushRenderModeToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!")),r(t)&&t.setRenderMode(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!")),r(t)&&t.setStaticSections(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(r(t)?"have WASM":"don't have WASM!!!")),r(t)&&t.setCurrentVariable(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!"));let i=!1;r(t)&&(i=t.setVariableStyles(this,e),i||this._dbg(s.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!"))}_accountForEnableSlices(e,t){const i=r(t)?t:this.layer.enableSlices;for(let m=0;m<e.length;++m){const p=e[m];for(const c of p.slices)c.enabled=c.enabled&&i}}_pushVolumeStylesToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!"));let i=!1;r(t)&&(this._accountForEnableSlices(e,null),i=t.setVolumeStyles(this,e),i||this._dbg(s.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,t){const i=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(r(i)?"have WASM":"don't have WASM!!!"));let m=!1;if(r(i)){if(r(t)){const p=t.origin;E(l,t.basis1,t.basis2),A(l,l),m=i.setAnalysisSlice(this,e,p,l)}else L(l,0,0,1),m=i.setAnalysisSlice(this,!1,l,l);m||this._dbg(s.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!"));let i=!1;r(t)&&(i=t.setEnableDynamicSections(this,e),i||this._dbg(s.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!"))}_pushEnableSlicesToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!"));let i=!1;if(r(t)){const m=this.layer.getVolumeStyles();this._accountForEnableSlices(m,e),i=t.setVolumeStyles(this,m),i||this._dbg(s.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!"));let i=!1;r(t)&&(i=t.setEnableIsosurfaces(this,e),i||this._dbg(s.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!"))}_pushEnableSectionsToWasm(e){const t=this.view.voxelWasm;this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(r(t)?"have WASM":"don't have WASM!!!"));let i=!1;r(t)&&(i=t.setEnableSections(this,e),i||this._dbg(s.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!"))}async whenGraphicAttributes(e,t){return e}_dbg(e,t){this._dbgFlags.has(e)&&(e===s.Error?V.getLogger(this.declaredClass).error(t):V.getLogger(this.declaredClass).warn(t))}};y([_()],d.prototype,"layer",void 0),y([_()],d.prototype,"baseUrl",null),y([_({type:Boolean})],d.prototype,"slicePlaneEnabled",void 0),d=y([g("esri.views.3d.layers.VoxelLayerView3D")],d);const ts=d;export{ts as default};
