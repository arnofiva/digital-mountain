import{e as n,y as l,a as z,v as W,t as H,A as Mt}from"./JSONSupport-32b5ad86.js";import{t as p,r,y as Y,a as w,p as J,e as bt}from"./typedArrayUtil-70e1d79e.js";import"./ensureType-249b88cd.js";import{n as Dt}from"./AnalysisView3D-2c92fcd2.js";import{P as Et,T as Tt,O as St,g as pt,h as ht,e as Ct,s as xt,a as Q,u as $t,l as ut,c as mt,b as ct,m as R,d as G,q as X,I as tt,Y as kt,M as Ht,Z as zt,R as S,G as It,E as f,B as dt,z as Lt,K as Rt,Q as Gt,J as Ot,f as b,x as D,W as At,n as Bt,i as Ft,v as Kt,C as Ut}from"./sliceToolUtils-2110a895.js";import{s as Nt}from"./Error-62cc7aff.js";import{l as _,U as jt,w as U}from"./reactiveUtils-e6d6c898.js";import{bC as d,x as qt,t as Zt,bB as M,bD as m,bE as N,bF as it,ba as Wt,aA as Yt}from"./index-a7842505.js";import{b as et}from"./Layer-ab90f8be.js";import{M as Jt}from"./BuildingComponentSublayer-e5c8c619.js";import{a as Qt}from"./LineVisualElement-2ff4c993.js";import{n as Xt}from"./compilerUtils-2eb56463.js";import{t as ti}from"./promiseUtils-59dab60c.js";import{c as ii,d as at,i as ei}from"./screenUtils-410d12c0.js";import{p as ai,g as yt,c as _t}from"./mat4-4714ff8c.js";import{P as C,s as E,a as st,g as O,u as rt,O as nt,t as si,z as A,o as vt,n as j}from"./vec3-015ca254.js";import{V as ot,p as q,x as k,Y as ri}from"./plane-fef3662c.js";import{c,e as T,d as ni,t as oi}from"./sphere-092242fd.js";import{o as li,i as pi,C as x}from"./Factory-f48681ca.js";import{C as hi}from"./manipulatorUtils-cb1ff919.js";import{a as ui,s as mi,m as ci}from"./analysisViewUtils-fa936260.js";import{y as $}from"./InteractiveToolBase-7dd00fb3.js";import{l as di}from"./vec4f64-6d0e93be.js";import"./string-7a2f1d87.js";import"./nextTick-3ee5a785.js";import"./Promise-3959c3ee.js";import"./geometry-f89ca072.js";import"./Extent-2ad2c9a9.js";import"./Ellipsoid-89682c5e.js";import"./Polyline-cf51ad23.js";import"./typeUtils-05f9d41d.js";import"./Clonable-95fa5d2d.js";import"./Cyclical-34b2a5e3.js";import"./mathUtils-5b623c84.js";import"./vec4-c7a19f0d.js";import"./common-d0b63c2d.js";import"./persistable-5845b8f0.js";import"./preload-helper-41c905a7.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./request-f01affa1.js";import"./uuid-73213768.js";import"./resourceExtension-58c3e69d.js";import"./persistableUrlUtils-ccf13db2.js";import"./mat4f64-abdda1bb.js";import"./quat-99c4e099.js";import"./mat3f64-50f3b9f6.js";import"./quatf64-f8f1c132.js";import"./projection-d42b91be.js";import"./SimpleObservable-a6d3d2d8.js";import"./assets-640b4d04.js";import"./aaBoundingRect-42f9721f.js";import"./zscale-d428b1da.js";import"./VisualVariablePassParameters-ded3d86d.js";import"./VertexAttribute-15d1866a.js";import"./enums-fc527c7c.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-42bd3a76.js";import"./context-util-eb98c678.js";import"./ShaderBuilder-c7fc4a30.js";import"./aaBoundingBox-dfb04110.js";import"./ViewingMode-5d7d590b.js";import"./Util-c12e93ba.js";import"./vec2f64-f35767d6.js";import"./Matrix3PassUniform-285be0f9.js";import"./ShaderTechniqueConfiguration-5b4afc58.js";import"./objectResourceUtils-f1a10a8c.js";import"./devEnvironmentUtils-5002a058.js";import"./mat3-4fd89d48.js";import"./BufferView-da65c548.js";import"./vec2-8acac370.js";import"./vec33-6cea25ab.js";import"./DefaultMaterial_COLOR_GAMMA-8afda99b.js";import"./types-e1c0a5bf.js";import"./asyncUtils-8de18dd2.js";import"./Version-b7702d36.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-7097baff.js";import"./DefaultMaterial.glsl-0c704a85.js";import"./ForwardLinearDepth.glsl-3606f02d.js";import"./vec3f32-01c06d8d.js";import"./View.glsl-725bf3cf.js";import"./mat4f32-60a2394b.js";import"./Texture2DPassUniform-1510cbb0.js";import"./MixExternalColor.glsl-96fc9ef8.js";import"./symbolColorUtils-7c94928f.js";import"./PhysicallyBasedRendering.glsl-d72e2a11.js";import"./FloatPassUniform-8a52db3d.js";import"./Float4PassUniform-52993952.js";import"./RgbaFloatEncoding.glsl-31b2b966.js";import"./Texture2DDrawUniform-d1eaa0d6.js";import"./PiUtils.glsl-9dc0973a.js";import"./Slice.glsl-e5fdd8d3.js";import"./Transform.glsl-e6366353.js";import"./ObjectAndLayerIdColor.glsl-751e40ac.js";import"./OutputDepth.glsl-ccbc6366.js";import"./OutputHighlight.glsl-569dde3f.js";import"./VisualVariables.glsl-655a358f.js";import"./DiscardOrAdjustAlphaBlend.glsl-27b032af.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a1cb0602.js";import"./VertexColor.glsl-e2eb2da5.js";import"./VerticalOffset.glsl-2b654767.js";import"./Normals.glsl-81bc0899.js";import"./EvaluateSceneLighting.glsl-ed7fcdc2.js";import"./SSAOBlur.glsl-2bfd75b0.js";import"./ScreenSpacePass.glsl-28a2b6e5.js";import"./ReadLinearDepth.glsl-9abddde9.js";import"./SSAO.glsl-1d087e8c.js";import"./MultipassTerrainTest.glsl-029ffa3f.js";import"./vec2f32-eaf29605.js";import"./byteSizeEstimations-f0cab514.js";import"./Texture-2b2e584f.js";import"./Evented-36093e88.js";import"./TextureOnly.glsl-12d60c43.js";import"./Attribute-f72d3f37.js";import"./lineSegment-8ffcb750.js";import"./InterleavedLayout-d75b8228.js";import"./DefaultTechniqueConfiguration-d3c0bf46.js";import"./RealisticTree.glsl-f514fb19.js";import"./IdentityManager-844d980b.js";import"./intl-0ee83c79.js";import"./number-2db5f4a2.js";import"./locale-30120714.js";import"./messages-f54f7f46.js";import"./dom-2ec1e33c.js";import"./Graphic-46941d56.js";import"./PopupTemplate-c1fb66ed.js";import"./Collection-9e42cc30.js";import"./fieldUtils-e397be4b.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./enumeration-504d95a2.js";import"./Identifiable-99d92428.js";import"./symbols-5a102dff.js";import"./CIMSymbol-561444b9.js";import"./Color-5a385b27.js";import"./colorUtils-639f4d25.js";import"./opacityUtils-c0957a27.js";import"./symbolLayerUtils3D-5a2f49a8.js";import"./Symbol3DAnchorPosition2D-d0207ef9.js";import"./collectionUtils-61fc1a27.js";import"./Portal-52d960e8.js";import"./Loadable-7c3ecd79.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./jsonUtils-6d0a72e3.js";import"./workers-591e0dfc.js";import"./Connection-000cba43.js";import"./GraphicsLayer-78551f17.js";import"./HandleOwner-f4554d8c.js";import"./BlendLayer-fe49ee20.js";import"./ScaleRangeLayer-56857dcb.js";import"./ElevationInfo-bc15f954.js";import"./lengthUtils-e2d3809d.js";import"./HeightModelInfo-bc3bd77c.js";import"./spatialReferenceEllipsoidUtils-26c8dea5.js";import"./scaleUtils-b27f2fc2.js";import"./layerUtils-ff76096c.js";import"./AttachmentInfo-2774f92c.js";import"./AttachmentQuery-be73c1f4.js";import"./LegendOptions-d1ee6f9f.js";import"./DimensionalDefinition-89a02a09.js";import"./UniqueValueRenderer-31cfe725.js";import"./diffUtils-a2efee1b.js";import"./colorRamps-844ba070.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6f78f1dd.js";import"./jsonUtils-ba20c384.js";import"./styleUtils-ba5d50e4.js";import"./vectorFieldUtils-b0aae2f9.js";import"./colorUtils-7641d345.js";import"./normalizeUtils-11faac16.js";import"./normalizeUtilsCommon-f5194d67.js";import"./ItemCache-47345b61.js";import"./MemCache-a072224a.js";import"./cimSymbolUtils-12c2ae8a.js";import"./utils-3d986af0.js";import"./jsonUtils-0cd7beab.js";import"./DictionaryLoader-e5256637.js";import"./LRUCache-805da42e.js";import"./deprecate-2ea4a12e.js";import"./heatmapUtils-bc76f08e.js";import"./Query-6df7497c.js";import"./TimeExtent-4bfae662.js";import"./Field-efd8d6fa.js";import"./fieldType-ec749512.js";import"./executeQueryJSON-c3e8823f.js";import"./query-159ca0c6.js";import"./pbfQueryUtils-e595cc71.js";import"./pbf-490f560a.js";import"./OptimizedFeature-cb86a86f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-7c3cd57e.js";import"./FeatureSet-adc6c42d.js";import"./featureConversionUtils-66a9b1ed.js";import"./RelationshipQuery-1388e5e8.js";import"./TopFeaturesQuery-c51356f1.js";import"./FeatureLayer-c3299dce.js";import"./MultiOriginJSONSupport-247be6b9.js";import"./serviceCapabilitiesUtils-d47be03f.js";import"./arcgisLayerUrl-1177870a.js";import"./FeatureLayerBase-4bc86305.js";import"./OperationalLayer-892ef1ff.js";import"./TimeReference-dbe22fa2.js";import"./datetime-b6333958.js";import"./editsZScale-1f9f5428.js";import"./APIKeyMixin-a999140b.js";import"./ArcGISService-69574b36.js";import"./CustomParametersMixin-0cb5d402.js";import"./EditBusLayer-40721674.js";import"./FeatureReductionLayer-5d021257.js";import"./labelingInfo-81f8350c.js";import"./labelUtils-2517fbb8.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e39f681d.js";import"./PortalLayer-f8afa381.js";import"./PortalItem-476b4f2f.js";import"./portalItemUtils-f08de884.js";import"./RefreshableLayer-6e09e5c7.js";import"./TemporalLayer-1cafdc62.js";import"./FeatureTemplate-c492af3e.js";import"./FeatureType-9aee1062.js";import"./fieldProperties-13016a3b.js";import"./FieldsIndex-3347fdc5.js";import"./versionUtils-3b55ef95.js";import"./styleUtils-a2cb1d02.js";import"./popupUtils-ef59e204.js";import"./callExpressionWithFeature-b2780134.js";import"./quantizationUtils-5accf704.js";import"./webStyleSymbolUtils-7af9b968.js";import"./Scheduler-22864fbd.js";import"./ElevationSamplerData-89295dc0.js";import"./TileInfo-c1a6fc90.js";import"./Basemap-a98ee4eb.js";import"./loadAll-b0bbaf30.js";import"./writeUtils-054a51f5.js";import"./CollectionFlattener-53f524d1.js";import"./TablesMixin-d0eb7f9b.js";import"./WaterSurface.glsl-ad07df19.js";import"./NormalUtils.glsl-d1e61521.js";import"./HUD.glsl-03dc2889.js";import"./Octree-fac2eadb.js";import"./edgeProcessing-9fe73f05.js";import"./deduplicate-3aef92f2.js";import"./MeshComponent-76cc0acf.js";import"./earcut-61f7b102.js";import"./projection-720a032f.js";import"./HUDMaterial.glsl-bcc90ab4.js";import"./sdfPrimitives-16d07d48.js";import"./floatRGBA-11065dbc.js";import"./dehydratedFeatures-be6dfdbf.js";import"./labelFormatUtils-deccc57b.js";import"./orientedBoundingBox-7f391048.js";import"./quatf32-51a323b8.js";import"./LineCallout.glsl-828f2c8d.js";import"./QueryEngineResult-60e819c8.js";import"./WhereClause-ec2695a9.js";import"./executionError-fb3f283a.js";import"./utils-eec406bb.js";import"./generateRendererUtils-9fa055c1.js";import"./json-48e3ea08.js";import"./MarkerSizing.glsl-1e815ddd.js";import"./RibbonLine.glsl-3b5ffb4c.js";import"./LineStipple.glsl-df787c01.js";import"./LineMarker.glsl-af47e9ca.js";import"./NativeLine.glsl-eddd3297.js";import"./Path.glsl-98387e31.js";import"./ColorMaterial.glsl-2f16b93b.js";import"./Pattern.glsl-3d1048ed.js";import"./LercDecoder-bc94632d.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-5f02dc79.js";import"./workerHelper-7b69330e.js";import"./capabilities-ef053cf2.js";import"./originUtils-1469eeaf.js";import"./saveUtils-44b7e317.js";import"./resourceUtils-a295dbcf.js";import"./floating-ui-8c8de742.js";import"./StreamLayer-869211a2.js";import"./geometryEngine-5399ce6b.js";import"./geometryEngineBase-e1a33b0a.js";import"./hydrated-d446f5f6.js";import"./SceneFilter-9f7d00a7.js";import"./elevationInfoUtils-cb162a43.js";import"./DimensionAnalysis-26fb1362.js";import"./Analysis-ba6617ff.js";import"./ExportImageParameters-1fbdfa05.js";import"./sublayerUtils-1d562031.js";import"./capabilities-a18453f6.js";import"./I3SIndexInfo-93dfc828.js";import"./I3SLayerDefinitions-2c1e8173.js";import"./I3SUtil-66e1266a.js";import"./I3SBinaryReader-c63d93b8.js";import"./popupUtils-ec9821da.js";import"./ImageMaterial-b61fbd7a.js";import"./ImageMaterial.glsl-44b698e0.js";import"./ShadedColorMaterial.glsl-e70bd616.js";import"./drawUtils-0bdf2fe1.js";function yi(t){switch(t.type){case"building-scene":case"csv":case"dimension":case"feature":case"geo-rss":case"geojson":case"graphics":case"group":case"integrated-mesh":case"kml":case"knowledge-graph":case"link-chart":case"knowledge-graph-sublayer":case"line-of-sight":case"map-notes":case"ogc-feature":case"oriented-imagery":case"point-cloud":case"route":case"scene":case"stream":case"voxel":case"subtype-group":case"unknown":case"unsupported":case"wfs":case null:return!1;case"base-dynamic":case"base-elevation":case"base-tile":case"bing-maps":case"elevation":case"imagery":case"imagery-tile":case"map-image":case"media":case"open-street-map":case"tile":case"vector-tile":case"wcs":case"web-tile":case"wms":case"wmts":return!0;default:return Xt(t.type),!1}}const wt="esri.views.3d.analysis.Slice.SliceController",B=Nt.getLogger(wt);let P=class extends W{constructor(t){super(t),this._handles=new H,this._internalChange=!1,this._currentSlicePlane=null}initialize(){this._handles.add(this.analysis.excludedLayers.on("before-add",t=>{const i=t.item;i!=null&&(i instanceof et||i instanceof Jt)?i instanceof et&&yi(i)?(B.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),t.preventDefault()):this.analysis.excludedLayers.includes(i)&&t.preventDefault():(B.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),t.preventDefault())})),vi(this.view,this),this._handles.add([_(()=>this.analysisViewData.plane,()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()},{sync:!0}),_(()=>this.analysis.excludeGroundSurface,()=>this._updateLayerViews(),{sync:!0}),this.analysis.excludedLayers.on("change",()=>this._updateLayerViews()),_(()=>[this.analysisViewData.active,this.analysisViewData.visible],()=>{this._updateActiveController(),this._updateViewSlicePlane()},{sync:!0}),_(()=>this._allLayerAndSubLayerViews,()=>this._updateLayerViews())]),this._handles.add([_(()=>this.analysis.shape,()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())},{sync:!0})],"analysis"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane()}destroy(){this.analysisViewData.active&&(this.analysisViewData.active=!1,this.view.slicePlane=null),wi(this.view,this),this._handles.destroy(),this.set("view",null)}get _allLayerAndSubLayerViews(){const t=this.view.allLayerViews.items;return t.concat(t.filter(Et).flatMap(({sublayerViews:i})=>i.items))}_updateBoundedPlaneFromSlicePlane(){const t=this.analysis.shape,i=this._currentSlicePlane;if(p(i)&&p(t)||r(i)&&r(t)&&t.equals(i))return;let e=null,a=null;if(r(t)&&r(t.position)){const s=t.position.spatialReference,o=Tt(t,this.view);p(o)&&Qt(this.analysis,s,B),e=St(o,this.view,{tiltEnabled:this.analysis.tiltEnabled},d()),r(e)&&(a={heading:t.heading,tilt:t.tilt,position:t.position,width:t.width,height:t.height})}this._currentSlicePlane=a,this._internalChange=!0,this.analysisViewData.plane=e,this._internalChange=!1}_updateSlicePlaneFromBoundedPlane(){const t=this.analysisViewData.plane,i=pt(t,this.view,this.view.spatialReference,new ht);let e=null;r(i)&&(e={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=e,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane()}_updateActiveController(){if(F)return;const t=Pt(this.view);if(t)if(this.analysisViewData.active)r(t.activeController)&&t.activeController!==this?(F=!0,t.activeController.analysisViewData.active=!1,F=!1):r(t.activeController)&&t.activeController,this._updateLayerViews(),t.activeController=this;else{if(r(t.activeController)&&t.activeController!==this)return;r(t.activeController)&&t.activeController===this&&(t.activeController=null,this._updateLayerViews())}}_updateViewSlicePlane(){_i(this.view)}_updateLayerViews(){const t=r(this.analysisViewData.plane)&&this.analysisViewData.visible&&this.analysisViewData.active,i=[],e=a=>{"layers"in a?a.layers.forEach(e):i.push(a)};this.analysis.excludedLayers.forEach(e),this.view.allLayerViews.forEach(a=>{a.destroyed||("slicePlaneEnabled"in a&&(a.slicePlaneEnabled=t&&!i.includes(a.layer)),"sublayerViews"in a&&a.sublayerViews.forEach(s=>{s.slicePlaneEnabled=t&&!i.includes(s.sublayer)}))}),this.view.basemapTerrain!=null&&(this.view.basemapTerrain.slicePlaneEnabled=t&&!this.analysis.excludeGroundSurface)}};n([l()],P.prototype,"view",void 0),n([l()],P.prototype,"analysis",void 0),n([l()],P.prototype,"analysisViewData",void 0),n([l()],P.prototype,"_allLayerAndSubLayerViews",null),P=n([z(wt)],P);const g=new Map;let F=!1;function _i(t){var e;const i=(e=Pt(t))==null?void 0:e.activeController;r(i)&&r(i.analysisViewData.plane)&&i.analysisViewData.visible?t.slicePlane=i.analysisViewData.plane:t.slicePlane=null}function vi(t,i){var e;g.has(t)||g.set(t,{all:[],activeController:null}),(e=g.get(t))==null||e.all.push(i)}function Pt(t){return g.get(t)}function wi(t,i){if(!g.has(t))throw new Error("view expected in global slice register");const e=g.get(t),a=(e==null?void 0:e.all.lastIndexOf(i))??-1;if(!e||a===-1)throw new Error("controller expected in global slice register");e.all.splice(a,1),e.all.length===0&&g.delete(t)}var Z;let h=Z=class extends ui{constructor(t){super(t),this._clock=ti,this._previewPlaneOpacity=1,this.removeIncompleteOnCancel=!1,this.layersMode="none",this.shiftManipulator=null,this.rotateHeadingManipulator=null,this.rotateTiltManipulator=null,this.resizeManipulators=null,this._handles=new H,this._viewHandles=new H,this._frameTask=null,this._pointerMoveTimerMs=Ct,this._prevPointerMoveTimeout=null,this._previewPlaneGridVisualElement=null,this._previewPlaneOutlineVisualElement=null,this._startPlane=d(),this._previewPlane=null,this._activeKeyModifiers={},this._lastCursorPosition=ii(),this._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}],this._intersector=qt(t.view.state.viewingMode),this._intersector.options.store=Zt.MIN}initialize(){if(this.analysis==null)throw new Error("SliceTool requires valid analysis, but null was provided.");this._rotateHeadingImage=li(this.view.toolViewManager.textures),this._rotateTiltImage=pi(this.view.toolViewManager.textures);const t=e=>{this._updateManipulatorsInteractive(e),e.grabbing||(r(this.analysisViewData.plane)&&m(this.analysisViewData.plane,this._startPlane),this.inputState=null)};this.shiftManipulator=xt(this.view),this.manipulators.add(this.shiftManipulator),this.shiftManipulator.events.on("grab-changed",e=>{this._onShiftGrab(e),t(this.shiftManipulator)}),this._handles.add(this._createShiftDragPipeline(this.shiftManipulator)),this.rotateHeadingManipulator=Q(this.view,this._rotateHeadingImage.texture),this.manipulators.add(this.rotateHeadingManipulator),this.rotateHeadingManipulator.events.on("grab-changed",e=>{this._onRotateHeadingGrab(e),t(this.rotateHeadingManipulator)}),this._handles.add(this._createRotateHeadingDragPipeline(this.rotateHeadingManipulator)),this.rotateTiltManipulator=Q(this.view,this._rotateTiltImage.texture),this.manipulators.add(this.rotateTiltManipulator),this.rotateTiltManipulator.events.on("grab-changed",e=>{this._onRotateTiltGrab(e),t(this.rotateTiltManipulator)}),this._handles.add(this._createRotateTiltDragPipeline(this.rotateTiltManipulator)),this.resizeManipulators=this._resizeHandles.map((e,a)=>{const s=$t(this.view,e);return s.events.on("grab-changed",o=>{this._onResizeGrab(o,a),t(s)}),this._handles.add(this._createResizeDragPipeline(s)),s}),this.manipulators.addMany(this.resizeManipulators),this._previewPlaneGridVisualElement=ut(this.view),this._previewPlaneOutlineVisualElement=mt(this.view),this._previewPlaneOutlineVisualElement.width=ct,this._handles.add(_(()=>this.analysisViewData.plane,()=>this._updateManipulators(),jt));const i=_(()=>this.state,e=>{e==="sliced"&&this.finishToolCreation()},U);this._handles.add([i,_(()=>this.view.state.camera,()=>this._onCameraChange())])}destroy(){this._rotateHeadingImage=Y(this._rotateHeadingImage),this._rotateTiltImage=Y(this._rotateTiltImage),this._handles=w(this._handles),this._viewHandles=w(this._viewHandles),this._removeFrameTask(),this._clearPointerMoveTimeout(),this._previewPlaneOutlineVisualElement=w(this._previewPlaneOutlineVisualElement),this._previewPlaneGridVisualElement=w(this._previewPlaneGridVisualElement)}get state(){const t=!!this.analysisViewData.plane,i=!!this.inputState;return t?t&&i?"slicing":t&&!i?"sliced":"ready":"ready"}get cursor(){return this._isPlacingSlicePlane||this.layersMode==="exclude"?"crosshair":r(this._creatingPointerId)?"grabbing":null}set analysis(t){if(t==null)throw new Error("SliceTool requires valid analysis, but null was provided.");this._handles.remove("analysis"),this._set("analysis",t)}get inputState(){return this._get("inputState")}set inputState(t){this._set("inputState",t),this.analysisViewData.showGrid=r(t)&&t.type==="resize",this._updateMaterials()}get _isPlacingSlicePlane(){return!this.inputState&&!this.analysisViewData.plane&&this.active}get _creatingPointerId(){return r(this.inputState)&&this.inputState.type==="shift"?this.inputState.creatingPointerId:null}enterExcludeLayerMode(){p(this.analysisViewData.plane)||(this._set("layersMode","exclude"),this.active||(this.view.activeTool=this))}exitExcludeLayerMode(){p(this.analysisViewData.plane)||(this._set("layersMode","none"),this.active&&(this.view.activeTool=null))}onDeactivate(){this._set("layersMode","none"),this._updatePreviewPlane(null)}onShow(){this._updateVisibility(!0)}onHide(){this._updateVisibility(!1)}_updateVisibility(t){this._updateManipulators(),t||this._clearPointerMoveTimeout()}onInputEvent(t){switch(t.type){case"pointer-drag":if(!K(t))return;this._isPlacingSlicePlane?this._onClickPlacePlane(t)&&t.stopPropagation():this._onPointerDrag(t)&&t.stopPropagation();break;case"pointer-move":this._onPointerMove(t);break;case"pointer-up":this._onPointerUp(t)&&t.stopPropagation();break;case"immediate-click":if(!K(t))return;this._onClickPlacePlane(t)&&t.stopPropagation();break;case"click":if(!K(t))return;this._onClickExcludeLayer(t)&&t.stopPropagation();break;case"drag":this.inputState&&t.stopPropagation();break;case"key-down":this._onKeyDown(t)&&t.stopPropagation();break;case"key-up":this._onKeyUp(t)&&t.stopPropagation()}}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}_onPointerDrag(t){const i=this.inputState;if(t.pointerId===this._creatingPointerId&&r(i)&&i.type==="shift"){const e=M(t);return this.shiftManipulator.events.emit("drag",{action:i.hasBeenDragged?"update":"start",pointerType:t.pointerType,start:e,screenPoint:e}),i.hasBeenDragged=!0,!0}return!1}_onPointerMove(t){this._lastCursorPosition.x=t.x,this._lastCursorPosition.y=t.y,this._resetPointerMoveTimeout(),t.pointerType!=="touch"&&this._updatePreviewPlane(M(t),this._activeKeyModifiers)}_onCameraChange(){this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),this._updateManipulators()}_onPointerUp(t){if(t.pointerId===this._creatingPointerId&&r(this.analysisViewData.plane)){const i=M(t);return this.shiftManipulator.events.emit("drag",{action:"end",start:i,screenPoint:i}),m(this.analysisViewData.plane,this._startPlane),this.inputState=null,!0}return!1}_onClickPlacePlane(t){if(this.layersMode==="exclude")return!1;if(this._isPlacingSlicePlane){const i=M(t),e=d();if(this._pickPlane(i,!1,this._activeKeyModifiers,e)){if(m(e,this._startPlane),this.analysis.shape=pt(e,this.view,this.view.spatialReference,new ht),t.type==="pointer-drag"){const a=this._calculatePickRay(i);this.inputState=lt(a,t.pointerId,e.origin,e)}return!0}}return!1}_onClickExcludeLayer(t){return!(this.layersMode!=="exclude"||!this.created)&&(this.view.hitTest(M(t)).then(i=>{if(i.results.length){const e=i.results[0],a=(e==null?void 0:e.type)==="graphic"&&e.graphic;if(a){const s=a.sourceLayer||a.layer;s&&this.analysis.excludedLayers.push(s)}}else i.ground.layer?this.analysis.excludedLayers.push(i.ground.layer):this.analysis.excludeGroundSurface=!0}),this._set("layersMode","none"),this.active&&(this.view.activeTool=null),!0)}_onKeyDown(t){return(t.key===R||t.key===G)&&(this._activeKeyModifiers[t.key]=!0,r(this._previewPlane)&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0)}_onKeyUp(t){return!(t.key!==R&&t.key!==G||!this._activeKeyModifiers[t.key])&&(delete this._activeKeyModifiers[t.key],r(this._previewPlane)&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0)}_onShiftGrab(t){if(t.action!=="start"||p(this.analysisViewData.plane)||!t.screenPoint)return;const i=this._calculatePickRay(t.screenPoint);m(this.analysisViewData.plane,this._startPlane),this.inputState=lt(i,null,this.shiftManipulator.renderLocation,this.analysisViewData.plane)}_createShiftDragPipeline(t){return $(t,(i,e,a)=>{const s=this.inputState;if(p(s)||s.type!=="shift")return;const o=r(this.analysisViewData.plane)?m(this.analysisViewData.plane,d()):null;e.next(x(this.view,s.shiftPlane)).next(this._shiftDragAdjustSensitivity(s)).next(this._shiftDragUpdatePlane(s)),a.next(()=>{r(o)&&this._updateBoundedPlane(o)})})}_shiftDragAdjustSensitivity(t){return i=>{if(p(this.analysisViewData.plane))return null;const e=.001,a=Math.min((1-Math.abs(C(N(this.analysisViewData.plane),i.ray.direction)/E(i.ray.direction)))/e,1),s=-ot(this._startPlane.plane,i.renderEnd),o=-ot(this._startPlane.plane,t.startPoint);return t.depth=t.depth*(1-a)+s*a-o,i}}_shiftDragUpdatePlane(t){return()=>{if(p(this.analysisViewData.plane))return;const i=st(c.get(),this._startPlane.origin),e=st(c.get(),N(this._startPlane));O(e,e,-t.depth),rt(e,e,i);const a=it(e,this.analysisViewData.plane.basis1,this.analysisViewData.plane.basis2,d());this._updateBoundedPlane(a)}}_onRotateHeadingGrab(t){if(t.action!=="start"||p(this.analysisViewData.plane)||!t.screenPoint)return;const i=X(this.analysisViewData.plane,this.view.renderCoordsHelper,tt.HEADING,q()),e=this._calculatePickRay(t.screenPoint),a=j();k(i,e,a)&&(m(this.analysisViewData.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:i,startPoint:a})}_createRotateHeadingDragPipeline(t){return $(t,(i,e,a)=>{const s=this.inputState;if(p(s)||s.type!=="rotate")return;const o=r(this.analysisViewData.plane)?m(this.analysisViewData.plane,d()):null;e.next(x(this.view,s.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(s)).next(this._rotateDragUpdatePlaneFromRotate()),a.next(()=>{r(o)&&this._updateBoundedPlane(o)})})}_onRotateTiltGrab(t){if(t.action!=="start"||p(this.analysisViewData.plane)||!t.screenPoint)return;const i=X(this.analysisViewData.plane,this.view.renderCoordsHelper,tt.TILT,q()),e=this._calculatePickRay(t.screenPoint),a=j();k(i,e,a)&&(m(this.analysisViewData.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:i,startPoint:a})}_createRotateTiltDragPipeline(t){return $(t,(i,e,a)=>{const s=this.inputState;if(p(s)||s.type!=="rotate")return;const o=r(this.analysisViewData.plane)?m(this.analysisViewData.plane,d()):null;e.next(x(this.view,s.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(s)).next(this._rotateDragUpdatePlaneFromRotate()),a.next(()=>{r(o)&&this._updateBoundedPlane(o)})})}_rotateDragRenderPlaneToRotate(t){return i=>{if(p(this.analysisViewData.plane))return null;const e=ri(t.rotatePlane),a=hi(t.startPoint,i.renderEnd,this.analysisViewData.plane.origin,e);return{...i,rotateAxis:e,rotateAngle:a}}}_rotateDragUpdatePlaneFromRotate(){return t=>{if(p(this.analysisViewData.plane))return;const i=ai(T.get(),t.rotateAngle,t.rotateAxis);if(p(i))return;const e=nt(c.get(),this._startPlane.basis1,i),a=nt(c.get(),this._startPlane.basis2,i),s=it(this.analysisViewData.plane.origin,e,a,d());this._updateBoundedPlane(s)}}_onResizeGrab(t,i){if(t.action!=="start"||p(this.analysisViewData.plane)||!t.screenPoint)return;const e=this._calculatePickRay(t.screenPoint),a=c.get();k(this.analysisViewData.plane.plane,e,a)&&(m(this.analysisViewData.plane,this._startPlane),this.inputState={type:"resize",activeHandleIdx:i,startPoint:si(a)})}_createResizeDragPipeline(t){return $(t,(i,e,a)=>{const s=this.inputState;if(p(s)||s.type!=="resize"||p(this.analysisViewData.plane))return;const o=m(this.analysisViewData.plane,d());e.next(x(this.view,this.analysisViewData.plane.plane)).next(this._resizeDragUpdatePlane(s)),a.next(()=>{this._updateBoundedPlane(o)})})}_resizeDragUpdatePlane(t){return i=>{if(p(this.analysisViewData.plane))return;const e=this._resizeHandles[t.activeHandleIdx],a=kt(e,t.startPoint,i.renderEnd,this.view.state.camera,this._startPlane,m(this.analysisViewData.plane));this._updateBoundedPlane(a)}}_updateBoundedPlane(t){const i=this.analysisViewData;if(!r(i))throw new Error("valid internal object expected");i.plane=t}_updatePreviewPlane(t,i={}){let e=this._previewPlane;if(this._previewPlane=null,p(t))return this._removeFrameTask(),void this._updateManipulators();if(!this.analysisViewData.plane&&this.active){const a=r(e)?e:d();if(e=r(e)?m(e,Pi):null,this._pickPlane(t,!0,i,a)){const s=Bt;let o=!1;r(e)&&(o=C(e.plane,a.plane)<s||C(A(c.get(),e.basis1),A(c.get(),a.basis1))<s),o&&(this._previewPlaneOpacity=0),this._previewPlane=a}}r(this._previewPlane)&&p(this._frameTask)&&this._previewPlaneOpacity===0?this._frameTask=Mt({update:({deltaTime:a})=>{this._previewPlaneOpacity=Math.min(this._previewPlaneOpacity+a/(1e3*Ht),1),this._updateManipulators(),this._previewPlaneOpacity===1&&this._removeFrameTask()}}):p(this._previewPlane)&&r(this._frameTask)?this._removeFrameTask():r(this._previewPlane)&&this._updateManipulators()}_removeFrameTask(){this._frameTask=J(this._frameTask)}_calculatePickRay(t){const i=ni(),e=at(t,gi);return Wt(this.view.state.camera,e,i),A(i.direction,i.direction),i}_pickMinResult(t){const i=at(t,oi.get());return this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector),this._intersector.results.min}_pickPlane(t,i,e,a){const s=this._pickMinResult(t),o=c.get();if(!s.getIntersectionPoint(o))return!1;const u=s.getTransformedNormal(c.get()),V=this.view.state.camera;C(u,V.viewForward)>0&&O(u,u,-1);const I=zt(o,V),gt=(i?1:-1)*I*Ft,L=O(c.get(),u,gt);rt(L,L,o);const ft=this.analysis.tiltEnabled?S.TILTED:S.HORIZONTAL_OR_VERTICAL,Vt=e[R]?S.VERTICAL:e[G]?S.HORIZONTAL:ft;return It(L,u,I,I,V,Vt,this.view.renderCoordsHelper,a),!0}_clearPointerMoveTimeout(){this._prevPointerMoveTimeout=J(this._prevPointerMoveTimeout)}_resetPointerMoveTimeout(){this._clearPointerMoveTimeout(),this.shiftManipulator.state|=f,this.rotateHeadingManipulator.state|=f,this.rotateTiltManipulator.state|=f,this._prevPointerMoveTimeout=this._clock.setTimeout(()=>{this.shiftManipulator.state&=~f,this.rotateHeadingManipulator.state&=~f,this.rotateTiltManipulator.state&=~f},this._pointerMoveTimerMs)}_updateManipulators(){if(Z.disableEngineLayers)return;let t,i=!1;if(r(this.analysisViewData.plane))t=this.analysisViewData.plane,i=!1;else{if(!r(this._previewPlane))return this.shiftManipulator.available=!1,this.rotateHeadingManipulator.available=!1,this.rotateTiltManipulator.available=!1,this.resizeManipulators.forEach(u=>u.available=!1),this._previewPlaneOutlineVisualElement.visible=!1,void(this._previewPlaneGridVisualElement.visible=!1);t=this._previewPlane,i=!0}const e=dt(t,T.get());i?(this.shiftManipulator.available=!1,this.rotateHeadingManipulator.available=!1,this.rotateTiltManipulator.available=!1,this.resizeManipulators.forEach(u=>u.available=!1),this._previewPlaneOutlineVisualElement.attached=!0,this._previewPlaneGridVisualElement.attached=!0,this._previewPlaneOutlineVisualElement.visible=!0,this._previewPlaneGridVisualElement.visible=!0):(this.shiftManipulator.available=!0,this.rotateHeadingManipulator.available=!0,this.rotateTiltManipulator.available=this.analysis.tiltEnabled,this.resizeManipulators.forEach(u=>u.available=!0),Lt(this.shiftManipulator,e,t,this.view.state.camera),Rt(this.rotateHeadingManipulator,e,t,this.view.renderCoordsHelper),Gt(this.rotateTiltManipulator,e,t),this.resizeManipulators.forEach((u,V)=>Ot(u,this._resizeHandles[V],e,t)),this._previewPlaneOutlineVisualElement.visible=!1,this._previewPlaneGridVisualElement.visible=!1);const a=vt(c.get(),E(t.basis1),E(t.basis2),1),s=yt(T.get(),a),o=_t(s,e,s);this._previewPlaneOutlineVisualElement.transform=o,this._previewPlaneGridVisualElement.transform=o,this._updateMaterials()}_updateMaterials(){const t=[b[0],b[1],b[2],b[3]*this._previewPlaneOpacity];this._previewPlaneOutlineVisualElement.color=t;const i=[D[0],D[1],D[2],D[3]*this._previewPlaneOpacity],e=[0,0,0,0];this._previewPlaneGridVisualElement.backgroundColor=i,this._previewPlaneGridVisualElement.gridColor=e}_updateManipulatorsInteractive(t){if(!t.grabbing)return this.shiftManipulator.interactive=!0,this.rotateHeadingManipulator.interactive=!0,this.rotateTiltManipulator.interactive=!0,void this.resizeManipulators.forEach(i=>{i.interactive=!0});this.shiftManipulator.interactive=this.shiftManipulator===t,this.rotateHeadingManipulator.interactive=this.rotateHeadingManipulator===t,this.rotateTiltManipulator.interactive=this.rotateTiltManipulator===t,this.resizeManipulators.forEach(i=>{i.interactive=i===t})}testData(){return{plane:this.analysisViewData.plane,setPointerMoveTimerMs:t=>{this._pointerMoveTimerMs=t}}}};function lt(t,i,e,a){const s=At(e,N(a),t.direction,q()),o=j();return k(s,t,o)?{type:"shift",creatingPointerId:i,hasBeenDragged:!1,shiftPlane:s,depth:0,startPoint:o}:null}function K(t){return t.pointerType!=="mouse"||t.button===0}h.disableEngineLayers=!1,n([l()],h.prototype,"_clock",void 0),n([l({constructOnly:!0})],h.prototype,"view",void 0),n([l()],h.prototype,"analysisViewData",void 0),n([l({readOnly:!0})],h.prototype,"state",null),n([l({readOnly:!0})],h.prototype,"cursor",null),n([l()],h.prototype,"analysis",null),n([l()],h.prototype,"removeIncompleteOnCancel",void 0),n([l({readOnly:!0})],h.prototype,"layersMode",void 0),n([l({value:null})],h.prototype,"inputState",null),n([l()],h.prototype,"_isPlacingSlicePlane",null),n([l()],h.prototype,"_creatingPointerId",null),h=Z=n([z("esri.views.3d.analysis.Slice.SliceTool")],h);const Pi=d(),gi=ei(),fi=h;let v=class extends W{constructor(t){super(t),this._handles=new H,this._gridVisualElement=null,this._outlineVisualElement=null,this.showGrid=!1,this.preview=!0}initialize(){const t=this.analysisViewData;if(p(t))throw new Error("expected internal object to be valid");this._gridVisualElement=ut(this.view),this._outlineVisualElement=mt(this.view),this._handles.add([_(()=>({visible:r(t.plane)&&this.analysisViewData.visible,active:this.analysisViewData.active,preview:this.preview,showGrid:this.showGrid}),i=>this._updateMaterials(i),U),_(()=>t.plane,i=>this._updatePlane(i),U)],"internal")}destroy(){this._handles.destroy(),this._gridVisualElement=w(this._gridVisualElement),this._outlineVisualElement=w(this._outlineVisualElement),this.set("view",null)}_updatePlane(t){if(p(t))return;this._gridVisualElement.attached=!0,this._outlineVisualElement.attached=!0;const i=vt(c.get(),E(t.basis1),E(t.basis2),1),e=yt(T.get(),i),a=dt(t,T.get()),s=_t(e,a,e);this._outlineVisualElement.transform=s,this._gridVisualElement.transform=s}_updateMaterials({visible:t,active:i,preview:e,showGrid:a}){this._outlineVisualElement.color=b,this._outlineVisualElement.width=e?ct:Kt,this._outlineVisualElement.stipplePattern=i?null:Yt(5),this._gridVisualElement.backgroundColor=D,this._gridVisualElement.gridColor=a?Ut:di,this._gridVisualElement.visible=t,this._outlineVisualElement.visible=t}};n([l()],v.prototype,"view",void 0),n([l()],v.prototype,"analysis",void 0),n([l()],v.prototype,"analysisViewData",void 0),n([l()],v.prototype,"showGrid",void 0),n([l()],v.prototype,"preview",void 0),v=n([z("esri.views.3d.analysis.Slice.SliceVisualization")],v);let y=class extends Dt(W){constructor(t){super(t),this.type="slice-view-3d",this.analysis=null,this.tool=null,this.analysisVisualization=null,this.analysisController=null,this.plane=null,this.active=!0}initialize(){this.analysisVisualization=new v({view:this.view,analysis:this.analysis,analysisViewData:this}),this.analysisController=new P({view:this.view,analysis:this.analysis,analysisViewData:this}),this.addHandles(mi(this,fi))}destroy(){ci(this),this.analysisVisualization=w(this.analysisVisualization),this.analysisController=w(this.analysisController)}get showGrid(){var t;return((t=this.analysisVisualization)==null?void 0:t.showGrid)??!1}set showGrid(t){this.analysisVisualization&&(this.analysisVisualization.showGrid=t)}get editable(){return!this.analysisVisualization.preview}set editable(t){this.analysisVisualization.preview=!t}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController,tool:bt(this.tool)}}};n([l({readOnly:!0})],y.prototype,"type",void 0),n([l({constructOnly:!0,nonNullable:!0})],y.prototype,"analysis",void 0),n([l()],y.prototype,"tool",void 0),n([l()],y.prototype,"plane",void 0),n([l()],y.prototype,"active",void 0),n([l()],y.prototype,"showGrid",null),n([l()],y.prototype,"editable",null),y=n([z("esri.views.3d.analysis.SliceAnalysisView3D")],y);const Qn=y;export{Qn as default};
