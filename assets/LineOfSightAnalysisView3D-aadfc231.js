import{e as o,y as r,a as V,v as L,t as X,z as et,n as zt}from"./cast-8b575ab3.js";import{j as Ut}from"./Collection-47946fa8.js";import{n as kt}from"./Evented-d959ede6.js";import{O as Bt,j as Wt,t as h,r as p,w as wt,l as Jt,n as qt,a as D,o as xt}from"./typedArrayUtil-ce39e5f4.js";import"./ArrayPool-5813d861.js";import{n as _,t as vt,G as Zt,a as P,z as yt,g as W,u as J,x as Xt,e as tt,U as B,J as Ot,c as x}from"./vec3-015ca254.js";import{n as Kt}from"./AnalysisView3D-1c8b14ef.js";import{l as d}from"./Color-ad49dc79.js";import"./geometry-bad16232.js";import{l as dt,u as Tt,f as It}from"./LineOfSightAnalysisTarget-0b74df9a.js";import{j as Qt}from"./asyncUtils-623987a8.js";import{s as _t}from"./Error-685fdf30.js";import{g as Yt}from"./promiseUtils-e37fe75d.js";import{h as z,l as te,w as ee}from"./reactiveUtils-042dd05a.js";import{c as Ct}from"./HandleOwner-f773ce72.js";import{u as it,v as ie}from"./projection-582e07d8.js";import{D as oe,F as Pt,j as re}from"./aaBoundingRect-41e05474.js";import{l as ne,d as Ft,t as se,k as ut,h as ft}from"./sphere-8ab93b42.js";import{b as Vt,f as ae,g as le}from"./elevationInfoUtils-ab005f9a.js";import{d as pe}from"./screenUtils-410d12c0.js";import{R as de}from"./dehydratedFeatures-55779981.js";import{p as ot}from"./string-7a324480.js";import{x as ue,t as pt,ba as ce,bv as he,F as K,bw as me,bx as lt,by as ge,bz as ve,aX as Q,bd as ye,bA as ct,bB as Lt}from"./index-334863ed.js";import{a as St,g as ht}from"./LineVisualElement-b2465764.js";import{D as Rt,R as rt}from"./Scheduler-3113abcd.js";import{w as _e}from"./Extent-680ef92a.js";import{v as fe,b as be}from"./lineSegment-b352e49e.js";import{x as Et}from"./ElevationInfo-ad190ee6.js";import{i as Ce,e as we,R as Oe}from"./manipulatorUtils-ea52a52a.js";import{n as Te}from"./manipulatorUtils-d8bfd4d6.js";import{d as Ie,S as At}from"./PointVisualElement-25a13433.js";import{a as Pe,s as Ve,m as Le}from"./analysisViewUtils-afde4717.js";import{y as $t}from"./InteractiveToolBase-711b78f1.js";import{e as Se}from"./mat4f64-abdda1bb.js";import{g as mt}from"./VisualVariablePassParameters-8cb0a75a.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-6f002ab0.js";import"./common-d0b63c2d.js";import"./Promise-e757e514.js";import"./colorUtils-639f4d25.js";import"./mathUtils-5b623c84.js";import"./vec4-c7a19f0d.js";import"./Polyline-889037e7.js";import"./typeUtils-700e0da4.js";import"./Clonable-2b8b60cc.js";import"./persistable-63f0629a.js";import"./preload-helper-41c905a7.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./request-fc61835a.js";import"./uuid-73213768.js";import"./resourceExtension-a93bca74.js";import"./persistableUrlUtils-1c5d7615.js";import"./mat4-4714ff8c.js";import"./assets-5052bbaa.js";import"./Ellipsoid-89682c5e.js";import"./zscale-def794ea.js";import"./vec4f64-6d0e93be.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./quatf64-f8f1c132.js";import"./vec2f64-f35767d6.js";import"./aaBoundingBox-04c58f5a.js";import"./quantizationUtils-dc028b68.js";import"./Field-1bc3a16a.js";import"./enumeration-4ec8d3f9.js";import"./fieldType-232282e5.js";import"./IdentityManager-13ed5348.js";import"./intl-b84fb3c9.js";import"./number-134e9f14.js";import"./locale-30120714.js";import"./messages-8a541332.js";import"./dom-2ec1e33c.js";import"./Graphic-96c42a4d.js";import"./PopupTemplate-8ac0cb61.js";import"./fieldUtils-1ecec444.js";import"./arcadeOnDemand-a1bf65ec.js";import"./Identifiable-96150ecf.js";import"./symbols-0f3de684.js";import"./CIMSymbol-cdddfd9c.js";import"./opacityUtils-6b5cbdc2.js";import"./symbolLayerUtils3D-51cc6d75.js";import"./Symbol3DAnchorPosition2D-142c1e90.js";import"./collectionUtils-25147e5f.js";import"./Portal-7ecdc9f0.js";import"./Loadable-695031ac.js";import"./PortalGroup-ea788274.js";import"./PortalUser-a1aa49cd.js";import"./jsonUtils-03437bcd.js";import"./Basemap-f5ca570d.js";import"./deprecate-9828d7d2.js";import"./loadAll-8401c5ec.js";import"./PortalItem-6549afda.js";import"./writeUtils-ff257e5e.js";import"./layerUtils-0c01cb0c.js";import"./compilerUtils-175b9e40.js";import"./CollectionFlattener-9bc75576.js";import"./TablesMixin-b6031ef9.js";import"./Layer-b29c44e3.js";import"./Cyclical-34b2a5e3.js";import"./MultiOriginJSONSupport-a1d33be9.js";import"./originUtils-1469eeaf.js";import"./HeightModelInfo-42ae0f61.js";import"./arcgisLayerUrl-81a33ec5.js";import"./ViewingMode-5d7d590b.js";import"./saveUtils-bf4b189a.js";import"./resourceUtils-e6e10558.js";import"./OperationalLayer-c3a14c54.js";import"./TimeExtent-d116f9c4.js";import"./plane-e5e66c24.js";import"./mat3-4fd89d48.js";import"./Octree-d990d188.js";import"./Util-c12e93ba.js";import"./scaleUtils-87bb90d3.js";import"./objectResourceUtils-8909e8c3.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-da65c548.js";import"./vec2-8acac370.js";import"./vec33-8529ce65.js";import"./DefaultMaterial_COLOR_GAMMA-87d1f8e6.js";import"./types-e1c0a5bf.js";import"./enums-fc527c7c.js";import"./Version-419f71e1.js";import"./quat-99c4e099.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-37e06e9a.js";import"./DefaultMaterial.glsl-7d7dc23e.js";import"./ForwardLinearDepth.glsl-a0929473.js";import"./Matrix3PassUniform-0b3b1bba.js";import"./ShaderBuilder-7bfc11d2.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./View.glsl-03db830e.js";import"./mat4f32-60a2394b.js";import"./Texture2DPassUniform-70e1e126.js";import"./MixExternalColor.glsl-99b269fe.js";import"./ShaderTechniqueConfiguration-ee770726.js";import"./symbolColorUtils-834d5fca.js";import"./PhysicallyBasedRendering.glsl-32dfb9c7.js";import"./FloatPassUniform-e3702139.js";import"./Float4PassUniform-7f3c3ce8.js";import"./RgbaFloatEncoding.glsl-4a25e2a7.js";import"./Texture2DDrawUniform-02720a73.js";import"./PiUtils.glsl-5ee49495.js";import"./Slice.glsl-7975394d.js";import"./Transform.glsl-7294c426.js";import"./ObjectAndLayerIdColor.glsl-a64028da.js";import"./OutputDepth.glsl-f581dcdd.js";import"./OutputHighlight.glsl-08aacdf4.js";import"./VisualVariables.glsl-9e988d16.js";import"./DiscardOrAdjustAlphaBlend.glsl-f19054e7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a6b20292.js";import"./VertexColor.glsl-79a8c465.js";import"./VerticalOffset.glsl-5354e013.js";import"./Normals.glsl-0f400ece.js";import"./EvaluateSceneLighting.glsl-5da94bb7.js";import"./Texture-bf6b5582.js";import"./context-util-7ede29e5.js";import"./SSAOBlur.glsl-7265df26.js";import"./ScreenSpacePass.glsl-fee70090.js";import"./ReadLinearDepth.glsl-53a01bc1.js";import"./SSAO.glsl-c9cc39dd.js";import"./MultipassTerrainTest.glsl-43f42334.js";import"./vec2f32-eaf29605.js";import"./Texture-87febf19.js";import"./TextureOnly.glsl-548e665f.js";import"./Attribute-f72d3f37.js";import"./InterleavedLayout-d75b8228.js";import"./DefaultTechniqueConfiguration-5fedee5c.js";import"./RealisticTree.glsl-1e8f0ea9.js";import"./GraphicsLayer-70f87af0.js";import"./BlendLayer-291a2b49.js";import"./ScaleRangeLayer-7ff6c0d3.js";import"./workers-c3882da6.js";import"./Connection-6bd43370.js";import"./spatialReferenceEllipsoidUtils-23733e37.js";import"./AttachmentInfo-6f2ba68c.js";import"./AttachmentQuery-061e93ef.js";import"./LegendOptions-de492976.js";import"./DimensionalDefinition-4b26df38.js";import"./UniqueValueRenderer-3904f4cc.js";import"./diffUtils-0c65d604.js";import"./colorRamps-ddfecb23.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-a1979e31.js";import"./lengthUtils-1d09729e.js";import"./jsonUtils-e877a23b.js";import"./styleUtils-305d8f69.js";import"./vectorFieldUtils-3e325848.js";import"./colorUtils-7641d345.js";import"./normalizeUtils-6bee55d6.js";import"./normalizeUtilsCommon-17a95432.js";import"./ItemCache-c0904c4f.js";import"./MemCache-1d0e264b.js";import"./cimSymbolUtils-bff8b59b.js";import"./utils-3d986af0.js";import"./jsonUtils-b2e5d321.js";import"./DictionaryLoader-1438695d.js";import"./LRUCache-16cff7d8.js";import"./heatmapUtils-bc76f08e.js";import"./Query-65d38c02.js";import"./executeQueryJSON-04f85be1.js";import"./query-b200d7cb.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./OptimizedFeature-7f37a325.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bd6bba60.js";import"./FeatureSet-cb704b51.js";import"./featureConversionUtils-c227ec85.js";import"./RelationshipQuery-0abdb3e2.js";import"./TopFeaturesQuery-3a519c5e.js";import"./FeatureLayer-f2f6536e.js";import"./serviceCapabilitiesUtils-6f645c61.js";import"./FeatureLayerBase-b19f7ee7.js";import"./TimeReference-aeda2bb8.js";import"./datetime-b6333958.js";import"./editsZScale-eefb35e6.js";import"./APIKeyMixin-d7cb7220.js";import"./ArcGISService-7ce81abb.js";import"./CustomParametersMixin-0dbce8f2.js";import"./EditBusLayer-faff46ba.js";import"./FeatureReductionLayer-55e6b2c4.js";import"./labelingInfo-8462538e.js";import"./labelUtils-61dff46d.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-f840e564.js";import"./PortalLayer-7f6f61d4.js";import"./portalItemUtils-ba37e370.js";import"./RefreshableLayer-51d28698.js";import"./TemporalLayer-12ea8921.js";import"./FeatureTemplate-26b6ba5d.js";import"./FeatureType-474514d1.js";import"./fieldProperties-66b12497.js";import"./FieldsIndex-967913ce.js";import"./versionUtils-f77d2452.js";import"./styleUtils-4d62e921.js";import"./popupUtils-7d1e2de5.js";import"./callExpressionWithFeature-6f3761f2.js";import"./webStyleSymbolUtils-0f876db3.js";import"./ElevationSamplerData-b8eeacdf.js";import"./TileInfo-f339e6a5.js";import"./WaterSurface.glsl-55a88d78.js";import"./NormalUtils.glsl-f259fe4a.js";import"./HUD.glsl-79bd614f.js";import"./edgeProcessing-fa6d4038.js";import"./deduplicate-dffc7dea.js";import"./VertexElementDescriptor-2925c6af.js";import"./MeshComponent-f5ec9479.js";import"./earcut-61f7b102.js";import"./projection-c67d3c7f.js";import"./HUDMaterial.glsl-caa3e151.js";import"./sdfPrimitives-86e63320.js";import"./floatRGBA-11065dbc.js";import"./labelFormatUtils-695eab3b.js";import"./orientedBoundingBox-8bbf4141.js";import"./quatf32-51a323b8.js";import"./LineCallout.glsl-ede36b7c.js";import"./QueryEngineResult-c580d29f.js";import"./WhereClause-cbd158ef.js";import"./executionError-fb3f283a.js";import"./utils-f1e38d04.js";import"./generateRendererUtils-65ba2788.js";import"./json-48e3ea08.js";import"./MarkerSizing.glsl-0f21463c.js";import"./RibbonLine.glsl-376e988d.js";import"./LineStipple.glsl-dfd34f08.js";import"./LineMarker.glsl-b68d2081.js";import"./NativeLine.glsl-38506d53.js";import"./Path.glsl-5da6ce18.js";import"./ColorMaterial.glsl-d42d7e44.js";import"./Pattern.glsl-cc643bcf.js";import"./LercDecoder-e072a355.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-ae8a9188.js";import"./workerHelper-7b69330e.js";import"./capabilities-8176ed28.js";import"./geometryEngine-68f880a9.js";import"./geometryEngineBase-e1a33b0a.js";import"./hydrated-61d2b3c5.js";import"./floating-ui-8c8de742.js";import"./StreamLayer-b816a6d3.js";import"./SceneFilter-8312e3bf.js";import"./DimensionAnalysis-0ac2f8cd.js";import"./Analysis-cc5bd6fb.js";import"./ExportImageParameters-c93de02f.js";import"./sublayerUtils-7a7b4353.js";import"./ImageMaterial-29c669c5.js";import"./ImageMaterial.glsl-cead626d.js";import"./ShadedColorMaterial.glsl-a97ba27a.js";import"./VisualElementResources-04ba0905.js";import"./drawUtils-5bdcf78c.js";let A=class extends L{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new d([3,252,111,1]),this.visibleOuterColor=new d([3,252,111,.15]),this.occludedInnerColor=new d([252,3,69,1]),this.occludedOuterColor=new d([252,3,69,.1]),this.undefinedInnerColor=new d([255,255,255,1]),this.undefinedOuterColor=new d([127,127,127,.2])}};o([r({type:Number})],A.prototype,"innerWidth",void 0),o([r({type:Number})],A.prototype,"outerWidth",void 0),o([r({type:d})],A.prototype,"visibleInnerColor",void 0),o([r({type:d})],A.prototype,"visibleOuterColor",void 0),o([r({type:d})],A.prototype,"occludedInnerColor",void 0),o([r({type:d})],A.prototype,"occludedOuterColor",void 0),o([r({type:d})],A.prototype,"undefinedInnerColor",void 0),o([r({type:d})],A.prototype,"undefinedOuterColor",void 0),A=o([V("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],A);let F=class extends L{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};o([r()],F.prototype,"target",void 0),o([r()],F.prototype,"intersectedGraphic",void 0),o([r()],F.prototype,"intersectedLocation",void 0),o([r()],F.prototype,"elevationAlignedTargetLocation",void 0),o([r({type:Boolean})],F.prototype,"visible",void 0),F=o([V("esri.views.3d.analysis.LineOfSightAnalysisResult")],F);let G=class extends L{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:_(),observerSurfaceNormal:null,observerFeatureId:null,target:_(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:_(),targetAdjusted:_()},this.computationResult={start:_(),end:_(),intersection:_(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};o([r()],G.prototype,"target",void 0),o([r()],G.prototype,"elevationAlignedTargetLocation",void 0),o([r()],G.prototype,"inputPoints",void 0),o([r()],G.prototype,"computationResult",void 0),o([r()],G.prototype,"result",void 0),G=o([V("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],G);var bt;let R=bt=class extends L{constructor(t){super(t)}clone(){return new bt({type:this.type,id:ot(this.id),mapPoint:ot(this.mapPoint),renderPoint:vt(this.renderPoint),normal:ot(this.normal),ray:ot(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&Bt(this.mapPoint,t.mapPoint)&&Zt(this.renderPoint,t.renderPoint)&&Wt(this.normal,t.normal)&&ne(this.ray,t.ray)&&this.graphic===t.graphic}};o([r()],R.prototype,"type",void 0),o([r({constructOnly:!0})],R.prototype,"id",void 0),o([r({constructOnly:!0})],R.prototype,"mapPoint",void 0),o([r({constructOnly:!0})],R.prototype,"renderPoint",void 0),o([r({constructOnly:!0})],R.prototype,"normal",void 0),o([r({constructOnly:!0})],R.prototype,"graphic",void 0),o([r({constructOnly:!0})],R.prototype,"ray",void 0),R=bt=o([V("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],R);let q=class extends L{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=ue(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=pt.MIN}getScreenPointIntersection(t){const e=pe(t,se.get()),i=ce(this.view.state.camera,e,gt);return this._getRayIntersection(i)}_getRayIntersection(t,e){if(h(t)||h(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=pt.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,this.intersector,e);const i=this.intersector.results.min,n=_();if(!i.getIntersectionPoint(n))return null;const s=this.view.renderCoordsHelper.fromRenderCoords(n,this.view.spatialReference),l=vt(i.normal);if(he(i))return new R({type:K.OBJECT,id:`${i.target.layerUid}/${i.target.nodeIndex}/${i.target.componentIndex}`,mapPoint:s,renderPoint:n,normal:l,ray:ut(t),graphic:null});if(me(i))return new R({type:K.TERRAIN,id:i.target.lij.slice(),mapPoint:s,renderPoint:n,normal:l,ray:ut(t),graphic:null});const a=lt(i,this.view);if(p(a)){const g=a.layer,m=a.sourceLayer;let c;return m&&m.type==="scene"?c=de(a,m.objectIdField):c=a.uid,new R({type:K.OBJECT,id:`${g==null?void 0:g.uid}/${c}`,mapPoint:s,renderPoint:n,normal:l,ray:ut(t),graphic:a})}return null}updateFromGroundIntersection(t,e,i){const n=Re,s=Ee,l=Ae,a=$e;P(s,t),this.view.renderCoordsHelper.worldUpAtPosition(s,l),yt(l,l);const g=this.view.basemapTerrain.visibleElevationBounds,m=g?Math.abs(g.max-g.min):100,c=e>=0?1:-1;W(a,l,c*(m+Math.abs(e))),J(n,s,a),ft(n,s,gt);const u=this._getRayIntersection(gt,{include:this._terrainIntersectionOptionsLayerUids});return p(u)?(W(a,l,c*e),J(i,u.renderPoint,a),vt(u.normal)):(P(i,t),null)}};o([r()],q.prototype,"view",void 0),o([r()],q.prototype,"intersector",void 0),q=o([V("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],q);const Re=_(),Ee=_(),Ae=_(),$e=_(),gt=Ft(),Gt="esri.views.3d.analysis.LineOfSight.LineOfSightController",Ht=_t.getLogger(Gt);let b=class extends kt.EventedMixin(L){constructor(t){super(t),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new Ct,this._frameTask=Rt,this._handles=new X,this._computationHandles=new X,this._externalObserverUpdate=!0}initialize(){var e;const t=(e=this.view.resourceController)==null?void 0:e.scheduler;this._frameTask=t?t.registerTask(rt.LINE_OF_SIGHT_TOOL):Rt,this._intersector=new q({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const e=t.computation,{inputPoints:i,computationResult:n}=e,{observerAdjusted:s,targetAdjusted:l}=i,{start:a,end:g}=n;P(a,s),P(g,l),this._canCompute(e)?this._computeIntersection(t):this._interpolateIntersection(t),e.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:e.result})}_updateAdjustedPointsFromFeatures(t){const e=this.view,{sceneIntersectionHelper:i}=e,{inputPoints:n}=t,{observerAdjusted:s,observerFeatureId:l,targetFeatureId:a,targetAdjusted:g}=n;if(h(l)&&h(a))return;const m=Xt(s,g),c=this._intersector.intersector,u=ft(n.observer,n.target,Mt);c.options.store=pt.ALL,i.intersectToolIntersectorRay(u,c);let y=null,v=null,w=null,I=null;for(const T of c.results.all){const f=lt(T,this.view);if(h(f)||h(T.distanceInRenderSpace))continue;const E=dt(f);h(E)||(p(l)&&E===l&&(h(y)&&(y=this._getFeatureDistanceThreshold(T,e,m)),T.distanceInRenderSpace<y&&(w=T)),p(a)&&E===a&&(h(v)&&(v=this._getFeatureDistanceThreshold(T,e,m)),h(I)&&T.distanceInRenderSpace<m&&m-T.distanceInRenderSpace<v&&(I=T)))}p(w)&&w.getIntersectionPoint(s)&&(n.observerSurfaceNormal=w.getTransformedNormal(_())),p(I)&&I.getIntersectionPoint(g)&&(n.targetSurfaceNormal=I.getTransformedNormal(_()))}_getFeatureDistanceThreshold(t,e,i){if(ge(t)){const n=ve(t,e);if(p(n))return Math.min(n*Me,i)}return 1e-5*i}_adjustStartEndPositions(t){const e=this._screenPixelSize,i=this.view,{inputPoints:n}=t,{observer:s,observerSurfaceNormal:l,target:a,targetSurfaceNormal:g,observerAdjusted:m,targetAdjusted:c}=n,u=nt;P(m,s),P(c,a),this._updateAdjustedPointsFromFeatures(t),p(l)?P(u,l):tt(u,c,m);const y=e;yt(u,u),W(u,u,Math.min(y,1)),J(m,m,u),p(g)?P(u,g):tt(u,m,c);const v=i.state.camera.computeScreenPixelSizeAt(c);yt(u,u),W(u,u,Math.min(v,1)),J(c,c,u)}_computeIntersection({computation:t,interpolationInfo:e}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:s}=i;if(h(n))return;const l=this._intersector.intersector,{computationResult:a,inputPoints:g}=t,{observer:m,target:c}=g,{start:u,end:y}=a,v=ft(u,y,Mt);l.options.store=pt.MIN,n.intersectToolIntersectorRay(v,l);const w=l.results.min,I=a.intersection,T=nt;let f=!0;if(p(w)&&w.getIntersectionPoint(I)){P(e.originalIntersection,I),P(e.originalObserver,u),P(e.originalTarget,y),s.fromRenderCoords(I,T,i.spatialReference);const S=1-B(y,c)/B(u,c);f=B(m,I)>=S*B(m,c)}const E=new _e(T,i.spatialReference);{const{result:S,target:k}=t;p(S)?(S.target=k,S.intersectedGraphic=f?null:lt(w,i),S.intersectedLocation=f?null:E,S.visible=f):t.result=new F({target:k,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:f?null:lt(w,i),intersectedLocation:f?null:E,visible:f})}a.isValid=g.isValid=!0,a.isTargetVisible=f}_interpolateIntersection({computation:t,interpolationInfo:e}){const{computationResult:i,inputPoints:n}=t,{start:s,end:l,intersection:a}=i,{originalIntersection:g,originalObserver:m,originalTarget:c}=e;if(P(a,g),n.isValid){const u=nt,y=B(m,g)/B(m,c);Ot(u,s,m),W(u,u,1-y),J(a,a,u),Ot(u,l,c),W(u,u,y),J(a,a,u),i.isValid=!0}else t.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(t){const e=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(h(e)||h(t.elevationAlignedTargetLocation)||h(i))return!1;const{observerAdjusted:n,targetAdjusted:s}=t.inputPoints,l=i.intersectsPoint(n),a=i.intersectsPoint(s);return l&&a}_onObserverPositionChange(t,e,i,n,s){if(this._externalObserverUpdate=s,h(t))return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(h(e))return St(this.analysis,t.spatialReference,Ht),void(this.analysisViewData.elevationAlignedObserver=null);const l=this._getEffectiveElevationInfo(e,i),{absoluteZ:a,elevation:g}=Vt(e.x,e.y,e.z,this.view.spatialReference,this.view,l),m=e.clone();m.z=a,this._effectiveObserverElevationMode=l.mode,this.analysisViewData.elevationAlignedObserver=m;const c=_();this.view.renderCoordsHelper.toRenderCoords(m,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=a-g,this._observerFeatureId=dt(n),this.priority=rt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,e,i,n,s){const{inputPoints:l}=t;switch(P(l.observer,e),l.observerFeatureId=s,l.observerSurfaceNormal=null,n){case"on-the-ground":case"relative-to-ground":{const a=this._intersector.updateFromGroundIntersection(l.observer,i,l.observer);h(l.observerFeatureId)&&(l.observerSurfaceNormal=a)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=rt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,e,i,n,s,l=!0){const a=t.inputPoints;if(l&&(a.isValid=!1),h(i))return p(e)&&St(this.analysis,e.spatialReference,Ht),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const g=this._getEffectiveElevationInfo(i,n),{absoluteZ:m,elevation:c}=Vt(i.x,i.y,i.z,this.view.spatialReference,this.view,g),u=i.clone();switch(u.z=m,t.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,a.target),a.targetFeatureId=dt(s),a.targetSurfaceNormal=null,g.mode){case"on-the-ground":case"relative-to-ground":{const y=this._intersector.updateFromGroundIntersection(a.target,m-c,a.target);h(a.targetFeatureId)&&(a.targetSurfaceNormal=y)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=rt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return et([this._updatingHandles.add(()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:it(t.target.position,this.view.spatialReference)}),({computation:e,targetPosition:i,targetElevationInfo:n,targetFeatureInfo:s,projectedTargetPosition:l})=>{p(l.pending)?this._updatingHandles.addPromise(l.pending):this._onTargetPositionChange(e,i,l.geometry,n,s)},z)])}_connectComputationToObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver}),({computation:e})=>{this._externalObserverUpdate&&(e.inputPoints.isValid=!1,e.notifyInputPointsChanged())},z)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:e,observer:i,observerGroundOffset:n,observerElevationMode:s,observerFeatureId:l})=>{this._onObserverRenderSpacePositionChangeForComputation(e,i,n,s,l)},z)}_connectComputationToCamera(t){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:e})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!e||t.notifyInputPointsChanged()})}_connectComputationToSlicePlane(t){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()})}_connectComputationToElevation(t){const e=(i,n)=>{const s=this.analysis.observer,l=t.target;let a=null,g=null,m=null,c=null,u=null,y=null;if(p(s)&&p(s.position)){const v=it(s.position,this.view.spatialReference);if(p(v.pending))return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,n));a=v.geometry,g=s.elevationInfo,m=s.feature}if(p(l.position)){const v=it(l.position,this.view.spatialReference);if(p(v.pending))return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,n));c=v.geometry,u=l.elevationInfo,y=l.feature}h(a)&&h(c)||(ie(i,n,st,this.view.spatialReference),p(a)&&Pt(st,a)&&this._onObserverPositionChange(p(s)?s.position:null,a,g,m,!1),p(c)&&Pt(st,c)&&this._onTargetPositionChange(t,l.position,c,u,y,!1),p(a)&&p(c)&&re(st,a,c)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",i=>e(i.extent,i.spatialReference))}_connectComputationToTask(t){let e=qt;const i={computation:t,interpolationInfo:{originalIntersection:_(),originalObserver:_(),originalTarget:_()}};return et([this._updatingHandles.add(()=>t.inputPoints,()=>{e=wt(e),e=Qt(async n=>{await Yt(this._frameTask.schedule(()=>this._computeResult(i),n))})},{initial:!0,equals:()=>!1}),zt(()=>e=wt(e))])}_connectComputation(t){const e=this._computationHandles;e.has(t)||e.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_onTargetCollectionChange({added:t,removed:e}){for(const i of e)this._removeTarget(i);for(const i of t)this._addTarget(i)}_onCursorTargetChange(t,e){p(e)&&this._removeTarget(e),p(t)&&this._addTarget(t)}_addTarget(t){this._computations.some(e=>e.target===t)||this._computations.add(new G({target:t}))}_removeTarget(t){const e=this._computations.findIndex(i=>i.target===t);this._computations.removeAt(e)}_connectObserver(){return et([this._updatingHandles.add(()=>({observerPosition:p(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:it(p(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:p(this.analysis.observer)?this.analysis.observer.elevationInfo:null,observerFeatureInfo:p(this.analysis.observer)?this.analysis.observer.feature:null}),({observerPosition:t,projectedObserverPosition:e,observerElevationInfo:i,observerFeatureInfo:n})=>{p(e.pending)?this._updatingHandles.addPromise(e.pending):this._onObserverPositionChange(t,e.geometry,i,n,!0)},z)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,t=>this._onComputationCollectionChange(t),{initial:!0,final:!0})}_connectTargets(){return et([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,t=>this._onTargetCollectionChange(t),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(t,e)=>{this._onCursorTargetChange(t,e)})])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:e}=this,{renderCoordsHelper:i}=e;if(h(t)||h(i))return!1;const n=nt;i.toRenderCoords(t,n);const s=e.state.camera.computeScreenPixelSizeAt(n);return Math.abs((s-this._screenPixelSize)/this._screenPixelSize)>He}_getEffectiveElevationInfo(t,e){return t.hasZ?Jt(e,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}}};o([r({constructOnly:!0})],b.prototype,"analysis",void 0),o([r({constructOnly:!0})],b.prototype,"analysisViewData",void 0),o([r({constructOnly:!0})],b.prototype,"view",void 0),o([r()],b.prototype,"updating",null),o([r()],b.prototype,"priority",null),o([r()],b.prototype,"updateOnCameraChange",void 0),o([r()],b.prototype,"_computations",null),o([r()],b.prototype,"_elevationAlignedObserverPositionRenderSpace",null),o([r()],b.prototype,"_observerGroundOffsetRenderSpace",void 0),o([r()],b.prototype,"_effectiveObserverElevationMode",void 0),o([r()],b.prototype,"_observerFeatureId",void 0),o([r()],b.prototype,"_screenPixelSize",null),o([r({readOnly:!0})],b.prototype,"_updatingHandles",void 0),o([r()],b.prototype,"_frameTask",void 0),o([r()],b.prototype,"_isCameraDirty",null),b=o([V(Gt)],b);const He=.1,nt=_(),Mt=Ft(),st=oe(),Me=.05;let H=class extends L{constructor(t){super(t),this.enabled=!0,this.glowColor=new d([255,127,0]),this.glowWidth=8,this.innerColor=new d([255,255,255]),this.innerWidth=.75,this.globalAlpha=.75}};o([r({type:Boolean})],H.prototype,"enabled",void 0),o([r({type:d})],H.prototype,"glowColor",void 0),o([r({type:Number})],H.prototype,"glowWidth",void 0),o([r({type:d})],H.prototype,"innerColor",void 0),o([r({type:Number})],H.prototype,"innerWidth",void 0),o([r({type:Number})],H.prototype,"globalAlpha",void 0),H=o([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightLaserLineConfiguration")],H);let Z=class extends L{constructor(t){super(t),this.size=.5,this.color=new d([255,127,0,.75])}};o([r({type:Number})],Z.prototype,"size",void 0),o([r({type:d})],Z.prototype,"color",void 0),Z=o([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightObserverConfiguration")],Z);let N=class extends L{constructor(t){super(t),this.size=.5,this.visibleColor=new d([3,252,111,.75]),this.occludedColor=new d([252,3,69,.75]),this.undefinedColor=new d([127,127,127,.75])}};o([r({type:Number})],N.prototype,"size",void 0),o([r({type:d})],N.prototype,"visibleColor",void 0),o([r({type:d})],N.prototype,"occludedColor",void 0),o([r({type:d})],N.prototype,"undefinedColor",void 0),N=o([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTargetConfiguration")],N);class M extends L{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new d([3,252,111,1]),this.visibleOuterColor=new d([3,252,111,.15]),this.occludedInnerColor=new d([252,3,69,1]),this.occludedOuterColor=new d([252,3,69,.1]),this.undefinedInnerColor=new d([255,255,255,1]),this.undefinedOuterColor=new d([127,127,127,.2])}}o([r({type:Number})],M.prototype,"innerWidth",void 0),o([r({type:Number})],M.prototype,"outerWidth",void 0),o([r({type:d})],M.prototype,"visibleInnerColor",void 0),o([r({type:d})],M.prototype,"visibleOuterColor",void 0),o([r({type:d})],M.prototype,"occludedInnerColor",void 0),o([r({type:d})],M.prototype,"occludedOuterColor",void 0),o([r({type:d})],M.prototype,"undefinedInnerColor",void 0),o([r({type:d})],M.prototype,"undefinedOuterColor",void 0);let j=class extends L{constructor(t){super(t),this.laserLine=new H,this.observer=new Z,this.target=new N,this.lineOfSight=new M}};o([r({type:H})],j.prototype,"laserLine",void 0),o([r({type:Z})],j.prototype,"observer",void 0),o([r({type:N})],j.prototype,"target",void 0),o([r({type:M})],j.prototype,"lineOfSight",void 0),j=o([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightToolConfiguration")],j);function at(t,e,i){return new we(ye(Oe(d.toUnitRGBA(e)),t,32,32),i)}function Nt(t){const e=[];return t.customColor1&&e.push(at(t.size,t.customColor1,Q.Custom1)),t.customColor2&&e.push(at(t.size,t.customColor2,Q.Custom2)),t.customColor3&&e.push(at(t.size,t.customColor3,Q.Custom3)),t.color&&e.push(at(t.size,t.color)),e}function De(t,e){const i=Nt(e),n=new Ce({view:t,renderObjects:i,elevationInfo:{mode:"absolute-height",offset:0}});return Te(n),n}var U;(function(t){t.Ready="ready",t.Creating="creating",t.Created="created"})(U||(U={}));let O=class extends Pe{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.configuration=new j,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new X,this._handles=new X,this._updatingHandles=new Ct,this._manipulatorHandles=new X,this._targetTrackerManipulator=null}initialize(){this._intersector=new q({view:this.view}),this._handles.add(te(()=>this.state,t=>{t===U.Created&&this.finishToolCreation()},ee)),this._observerManipulator=this._createObserverManipulator(),this._handles.add([this._updatingHandles.add(()=>({...this.configuration.observer}),()=>this._updateObserverManipulatorStyle()),this._updatingHandles.add(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.elevationAlignedObserver},t=>this._onObserverLocationChange(t),z),this._updatingHandles.add(()=>({...this.configuration.laserLine}),()=>this._createVisualElements(),z),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),z)])}destroy(){this._updatingHandles=D(this._updatingHandles),this._handles=D(this._handles),this._manipulatorHandles=D(this._manipulatorHandles),this._analysisHandles=D(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeVisualElements(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?U.Created:U.Creating:p(this.analysis.observer)&&p(this.analysis.observer.position)?U.Created:U.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return p(this.analysisViewData)&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){return this._showTracker&&p(this.analysis.observer)&&p(this.analysis.observer.position)&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){t.type==="immediate-click"&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_connectComputation(t){if(this.destroyed)return void _t.getLogger(this.declaredClass).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const e=this._analysisHandles;if(e.has(t))return;const i=this._createTargetManipulator(t.target);h(this._targetTrackerManipulator)&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),e.add([this._updatingHandles.add(()=>this._getLineOfSightManipulatorStateDependencies(t),()=>this._updateManipulatorState(i,t),z),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,n=>this._onTargetLocationChange(n,i),z)],t)}_disconnectComputation(t){if(this.destroyed)return void _t.getLogger(this.declaredClass).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const e=this._getTargetManipulator(t.target);p(e)&&(this.manipulators.remove(e),this._manipulatorHandles.remove(e),p(this._targetTrackerManipulator)&&this._targetTrackerManipulator===e&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=D(this.analysisViewData.cursorTarget)}_createManipulator(t,e,i){const n=De(this.view,t);return n.metadata=i,this._manipulatorHandles.add([e(n),n.events.on("grab-changed",s=>this._manipulatorGrabChanged(n,s)),n.events.on("immediate-click",s=>this._manipulatorClick(n,s))],n),this.manipulators.add(n),n}_createTargetManipulator(t){const e=this.configuration,i={size:e.target.size,customColor1:e.target.visibleColor,customColor2:e.target.occludedColor,customColor3:e.target.undefinedColor,visible:!0},n={target:t,type:"target"},s=this._createManipulator(i,l=>this._createTargetManipulatorDragPipeline(l),n);return p(t.position)?s.elevationAlignedLocation=t.position:s.available=!1,s}_getTargetManipulator(t){let e=null;return this.manipulators.forEach(i=>{const n=i.manipulator;h(e)&&n.metadata.type==="target"&&n.metadata.target===t&&(e=n)}),e}_createObserverManipulator(){const t=this.configuration,e={size:t.observer.size,color:t.observer.color,visible:!0};return this._createManipulator(e,i=>this._createObserverManipulatorDragPipeline(i),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const t=this._observerManipulator,e=this.configuration.observer,i={size:e.size,color:e.color,visible:t.available};t.renderObjects=Nt(i)}_screenToIntersection(){return t=>{const e=this._intersector.getScreenPointIntersection(t.screenEnd);return h(e)?null:{...t,intersection:e}}}_createTargetManipulatorDragPipeline(t){return $t(t,(e,i,n)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),n.next(this._cancelTargetDragStep(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return $t(t,(e,i,n)=>{i.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),n.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(p(t.intersection.mapPoint)?(h(this.analysis.observer)&&(this.analysis.observer=new Tt),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){const t=p(this.analysis.observer)&&p(this.analysis.observer.position)?this.analysis.observer.clone():null;return e=>(this.analysis.observer=t,e)}_updateTargetDragStep(t){return e=>{this._updateFromIntersection(t.metadata.target,e.intersection);const i=e.intersection.mapPoint;return p(i)&&(t.elevationAlignedLocation=i),e}}_cancelTargetDragStep(t){const e=xt(t.position,i=>i.clone());return i=>(t.position=e,i)}_manipulatorGrabChanged(t,e){switch(e.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_updateManipulatorState(t,e){const{isValid:i,isTargetVisible:n}=e.computationResult;t.state=i?n?Q.Custom1:Q.Custom2:Q.Custom3}_getLineOfSightManipulatorStateDependencies(t){const{isValid:e,isTargetVisible:i}=t.computationResult;return{isValid:e,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:p(this.analysis.observer)?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:e,grabbedManipulator:i,shouldRenderTracker:n,observerPosition:s,visible:l}=t;if(h(e))return;const a=p(i)?i:n&&p(s)?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&p(a)&&l?(e.visible=!0,e.heightManifoldTarget=a.renderLocation,a!==this._observerManipulator?e.lineVerticalPlaneSegment=be(this._observerManipulator.renderLocation,a.renderLocation,ze):e.lineVerticalPlaneSegment=null):(e.visible=!1,e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createVisualElements(){const t=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new Ie({view:this.view,attached:!0,visible:this.visible,style:{glowColor:d.toUnitRGB(t.glowColor),glowWidth:t.glowWidth,innerColor:d.toUnitRGB(t.innerColor),innerWidth:t.innerWidth,globalAlpha:t.globalAlpha}})}_removeVisualElements(){p(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(t){h(t)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t)}_onTargetLocationChange(t,e){p(t)?(e.elevationAlignedLocation=t,e!==this._targetTrackerManipulator&&(e.available=!0)):e.available=!1}_addPointFromClickEvent(t){const e=this._intersector.getScreenPointIntersection(t);if(!h(e)&&!h(e.mapPoint))if(p(this.analysis.observer)&&p(this.analysis.observer.position)){this._clearCursorTracker();const i=new It;this._updateFromIntersection(i,e),this.analysis.targets.add(i)}else{const i=new Tt;this._updateFromIntersection(i,e),this.analysis.observer=i}}_clickHandler(t){this.active&&t.button!==ct.Right&&(this._addPointFromClickEvent(Lt(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==ct.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&t.key==="Escape"&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||h(this.analysis.observer)||h(this.analysis.observer.position)))return;const e=Lt(t),i=this._intersector.getScreenPointIntersection(e);p(i)&&p(i.mapPoint)&&(h(this.analysisViewData.cursorTarget)&&(this.analysisViewData.cursorTarget=new It),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(t,e){if(h(e.mapPoint))return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(e.type){case K.OBJECT:if(p(e.graphic)){const n=e.graphic,s=ae(n);s.mode==="on-the-ground"&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new Et(s),t.feature=n}else t.elevationInfo=null,t.feature=null;break;case K.TERRAIN:case K.I3S:t.elevationInfo=new Et({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const i=e.mapPoint.clone();i.z=le(this.view,i,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=i}_manipulatorClick(t,e){if(t.metadata.type==="observer"||t.grabbing||t.dragging||e.button!==ct.Right||this.analysis.targets.length<=1)return;const{target:i}=t.metadata;this.analysis.targets.remove(i),e.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement}}};o([r({constructOnly:!0})],O.prototype,"view",void 0),o([r({constructOnly:!0})],O.prototype,"analysis",void 0),o([r({readOnly:!0})],O.prototype,"state",null),o([r({readOnly:!0})],O.prototype,"cursor",null),o([r()],O.prototype,"removeIncompleteOnCancel",void 0),o([r({readOnly:!0})],O.prototype,"updating",null),o([r({type:j})],O.prototype,"configuration",void 0),o([r({constructOnly:!0})],O.prototype,"analysisViewData",void 0),o([r({readOnly:!0})],O.prototype,"_showTracker",null),o([r()],O.prototype,"_latestPointerMovePointerType",void 0),o([r()],O.prototype,"_shouldRenderTracker",null),o([r()],O.prototype,"_laserlineVisualElement",void 0),o([r()],O.prototype,"_grabbedManipulator",void 0),O=o([V("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],O);const ze=fe();class ke{constructor(e,i,n,s){this.visibleLineVisualElement=e,this.occludedLineVisualElement=i,this.undefinedLineVisualElement=n,this.targetVisualElement=s}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let $=class extends L{constructor(t){super(t),this._lineOfSightVisualElements=new Array,this._computationHandles=new X,this._updatingHandles=new Ct}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=D(this._updatingHandles),this._computationHandles=D(this._computationHandles),this._observerVisualElement=D(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){return{disablePartialOcclusion:()=>{for(const t of this._lineOfSightVisualElements)t.visibleLineVisualElement.renderOccluded=mt.Occlude,t.occludedLineVisualElement.renderOccluded=mt.Occlude,t.undefinedLineVisualElement.renderOccluded=mt.Occlude},visualizations:this._lineOfSightVisualElements}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const t=this._configuration,e=this.view,i={view:e,attached:!0,width:t.outerWidth,innerWidth:t.innerWidth},n=d.toUnitRGBA(t.visibleOuterColor),s=d.toUnitRGBA(t.visibleInnerColor),l=d.toUnitRGBA(t.occludedOuterColor),a=d.toUnitRGBA(t.occludedInnerColor),g=d.toUnitRGBA(t.undefinedOuterColor),m=d.toUnitRGBA(t.undefinedInnerColor),c=new ht({...i,color:n,innerColor:s}),u=new ht({...i,color:l,innerColor:a}),y=new ht({...i,color:g,innerColor:m}),v=new At({view:e,attached:!0,...Dt,size:8}),w=new ke(c,u,y,v);return this._lineOfSightVisualElements.push(w),w}_destroyLineOfSightVisualization(t){t.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(t),1)}_updateLineOfSightVisualization(t,e,i){const n=this._configuration,{computationResult:s,inputPoints:l}=t,{start:a,end:g,intersection:m,isValid:c,isTargetVisible:u}=s,{observer:y}=l,v=Ne;v[12]=y[0],v[13]=y[1],v[14]=y[2];const w=tt(xe,a,y),I=tt(Fe,g,y),T=tt(Ge,m,y),{visibleLineVisualElement:f,occludedLineVisualElement:E,undefinedLineVisualElement:S,targetVisualElement:k}=e,jt=h(this.analysisViewData.elevationAlignedObserver)||h(t.elevationAlignedTargetLocation),Y=this.visible&&!jt;f.visible=Y,E.visible=Y,S.visible=Y,k.visible=Y,k.attached=!i.interactiveAndEditable,Y&&(f.geometry=null,E.geometry=null,S.geometry=null,k.geometry=t.elevationAlignedTargetLocation,c?u?(f.geometry=[[x(w),x(I)]],f.transform=v,f.color=d.toUnitRGBA(n.visibleOuterColor),k.color=d.toUnitRGBA(n.visibleInnerColor)):(f.geometry=[[x(w),x(T)]],f.transform=v,f.color=d.toUnitRGBA(n.occludedOuterColor),E.geometry=[[x(T),x(I)]],E.transform=v,k.color=d.toUnitRGBA(n.occludedInnerColor)):(S.geometry=[[x(w),x(I)]],S.transform=v,k.color=d.toUnitRGBA(n.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(t){const{computationResult:e}=t,{occludedOuterColor:i,visibleOuterColor:n}=this._configuration;return{computationResult:e,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(t){const e=this._computationHandles;if(e.has(t))return;const i=this._createLineOfSightVisualization();e.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(t),n=>this._updateLineOfSightVisualization(t,i,n),{initial:!0,equals:()=>!1}),zt(()=>this._destroyLineOfSightVisualization(i))],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_createObserverVisualization(){const t=d.toUnitRGBA(this._configuration.visibleInnerColor),e=new At({view:this.view,attached:!1,color:t,...Dt});this._observerVisualElement=e,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:n,visible:s})=>{h(i)||n||!s?e.attached=!1:(e.geometry=i,this._observerVisualElement.attached=!0)},z))}};o([r({constructOnly:!0})],$.prototype,"analysis",void 0),o([r({constructOnly:!0})],$.prototype,"analysisViewData",void 0),o([r({constructOnly:!0})],$.prototype,"view",void 0),o([r({readOnly:!0})],$.prototype,"visible",null),o([r()],$.prototype,"updating",null),o([r()],$.prototype,"interactiveAndEditable",null),o([r()],$.prototype,"test",null),o([r()],$.prototype,"_configuration",null),$=o([V("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],$);const Dt={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},xe=_(),Fe=_(),Ge=_(),Ne=Se();let C=class extends Kt(kt.EventedMixin(L)){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new Ut,this.elevationAlignedObserver=null,this.configuration=new A,this.observerEngineLocation=_(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,e=this.analysis;this._analysisController=new b({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new $({analysis:e,analysisViewData:this,view:t}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),Ve(this,O)])}destroy(){Le(this),this._analysisController=D(this._analysisController),this._analysisVisualization=D(this._analysisVisualization)}get results(){return this.computations.map(t=>t.result)}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return p(this._analysisController)&&this._analysisController.updating||p(this._analysisVisualization)&&this._analysisVisualization.updating}getResultForTarget(t){const e=this.computations.find(i=>i.target===t);return xt(e,i=>i.result)}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};o([r({readOnly:!0})],C.prototype,"type",void 0),o([r({constructOnly:!0,nonNullable:!0})],C.prototype,"analysis",void 0),o([r()],C.prototype,"tool",void 0),o([r({readOnly:!0})],C.prototype,"results",null),o([r()],C.prototype,"priority",null),o([r()],C.prototype,"computations",void 0),o([r()],C.prototype,"elevationAlignedObserver",void 0),o([r()],C.prototype,"configuration",void 0),o([r()],C.prototype,"observerEngineLocation",void 0),o([r()],C.prototype,"cursorTarget",void 0),o([r()],C.prototype,"updating",null),o([r()],C.prototype,"editable",void 0),o([r()],C.prototype,"_analysisController",void 0),o([r()],C.prototype,"_analysisVisualization",void 0),C=o([V("esri.views.3d.analysis.LineOfSightAnalysisView3D")],C);const ya=C;export{ya as default};
