import{e as s,y as l,a as b,X as T,B as G}from"./JSONSupport-32b5ad86.js";import{a as S}from"./Error-62cc7aff.js";import{Z as A}from"./request-f01affa1.js";import"./ensureType-249b88cd.js";import{r as d}from"./typedArrayUtil-70e1d79e.js";import{e as f,f as h,r as c}from"./Extent-2ad2c9a9.js";import{T as w,n as u}from"./TimeExtent-4bfae662.js";import{f as O}from"./persistableUrlUtils-ccf13db2.js";import"./string-7a2f1d87.js";import{x as M}from"./ElevationInfo-bc15f954.js";import{r as v}from"./opacityUtils-c0957a27.js";function j(a){if(!a)return a;const{start:e,end:r}=a;return new w({start:d(e)?u(e,-e.getTimezoneOffset(),"minutes"):e,end:d(r)?u(r,-r.getTimezoneOffset(),"minutes"):r})}function $(a){if(!a)return a;const{start:e,end:r}=a;return new w({start:d(e)?u(e,e.getTimezoneOffset(),"minutes"):e,end:d(r)?u(r,r.getTimezoneOffset(),"minutes"):r})}const J={type:Boolean,value:!0,json:{origins:{service:{read:!1,write:!1},"web-map":{read:!1,write:!1}},name:"screenSizePerspective",write:!0}},H={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader:(a,e)=>!e.disablePopup},write:{enabled:!0,writer(a,e,r){e[r]=!a}}}},K={type:Boolean,value:!0,nonNullable:!0,json:{name:"showLabels",write:!0}},U={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:O}}},k={type:Boolean,value:!0,nonNullable:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}},X={value:null,type:M,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:!0}};function Z(a){return{type:a,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const I={write:!0,read:!0},g={type:Number,json:{origins:{"web-document":I,"portal-item":{write:!0}}}},_={...g,json:{...g.json,origins:{"web-document":{...I,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader:(a,e,r)=>r&&r.origin!=="service"||!e.drawingInfo||e.drawingInfo.transparency===void 0?e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.transparency!==void 0?v(e.layerDefinition.drawingInfo.transparency):void 0:v(e.drawingInfo.transparency)}}},Q={type:w,readOnly:!0,get(){var p,o;if(!((p=this.layer)!=null&&p.timeInfo))return null;const{datesInUnknownTimezone:a,timeOffset:e,useViewTime:r}=this.layer,i=(o=this.view)==null?void 0:o.timeExtent;let n=this.layer.timeExtent;a&&(n=$(n));let t=r?i&&n?i.intersection(n):i||n:n;if(!t||t.isEmpty||t.isAllTime)return t;e&&(t=t.offset(-e.value,e.unit)),a&&(t=j(t));const y=this._get("timeExtent");return t.equals(y)?y:t}},Y={type:f,readOnly:!0,json:{origins:{service:{read:{source:["fullExtent","spatialReference"],reader:(a,e)=>{const r=f.fromJSON(a);return e.spatialReference!=null&&typeof e.spatialReference=="object"&&(r.spatialReference=h.fromJSON(e.spatialReference)),r}}}},read:!1}},ee={type:String,json:{origins:{service:{read:!1},"portal-item":{read:!1}}}},re={type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.minScale"},write:{target:"layerDefinition.minScale"}}},ie={type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"}}},D={json:{write:{ignoreOrigin:!0},origins:{"web-map":{read:!1,write:!1}}}},B={"web-scene/operational-layers":{ArcGISDimensionLayer:!0,ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISTiledElevationServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BuildingSceneLayer:!0,GroupLayer:!0,IntegratedMeshLayer:!0,OGCFeatureLayer:!0,PointCloudLayer:!0,WebTiledLayer:!0,CSV:!0,GeoJSON:!0,VectorTileLayer:!0,WFS:!0,WMS:!0,KML:!0,RasterDataLayer:!0,Voxel:!0,LineOfSightLayer:!0},"web-scene/basemap":{ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,WebTiledLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,ArcGISImageServiceLayer:!0,WMS:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0},"web-scene/ground":{ArcGISTiledElevationServiceLayer:!0,RasterDataElevationLayer:!0},"web-map/operational-layers":{ArcGISAnnotationLayer:!0,ArcGISDimensionLayer:!0,ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISStreamLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BingMapsAerial:!0,BingMapsHybrid:!0,BingMapsRoad:!0,CSV:!0,GeoRSS:!0,GeoJSON:!0,GroupLayer:!0,KML:!0,MediaLayer:!0,OGCFeatureLayer:!0,OrientedImageryLayer:!0,SubtypeGroupLayer:!0,VectorTileLayer:!0,WFS:!0,WMS:!0,WebTiledLayer:!0},"web-map/basemap":{ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,WMS:!0,WebTiledLayer:!0,BingMapsAerial:!0,BingMapsRoad:!0,BingMapsHybrid:!0},"web-map/tables":{ArcGISFeatureLayer:!0},"portal-item/operational-layers":{ArcGISFeatureLayer:!0,ArcGISSceneServiceLayer:!0,PointCloudLayer:!0,BuildingSceneLayer:!0,IntegratedMeshLayer:!0,OrientedImageryLayer:!0}},ae=a=>{let e=class extends a{constructor(){super(...arguments),this.title=null}writeListMode(r,i,n,t){(t&&t.layerContainerType==="ground"||r&&T(this,n,{},t))&&(i[n]=r)}writeOperationalLayerType(r,i,n,t){!r||t&&t.layerContainerType==="tables"||(i.layerType=r)}writeTitle(r,i){i.title=r??"Layer"}read(r,i){i&&(i.layer=this),G(this,r,n=>super.read(r,n),i)}write(r,i){var y,p;if(i!=null&&i.origin){const o=`${i.origin}/${i.layerContainerType||"operational-layers"}`,L=B[o];let m=L&&L[this.operationalLayerType];if(this.operationalLayerType==="ArcGISTiledElevationServiceLayer"&&o==="web-scene/operational-layers"&&(m=!1),this.operationalLayerType==="ArcGISDimensionLayer"&&o==="web-map/operational-layers"&&(m=!1),!m)return(y=i.messages)==null||y.push(new S("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${o}'`,{layer:this})),null}const n=super.write(r,{...i,layer:this}),t=!!i&&!!i.messages&&!!i.messages.filter(o=>o instanceof S&&o.name==="web-document-write:property-required").length;return A(n==null?void 0:n.url)?((p=i==null?void 0:i.messages)==null||p.push(new S("layer:invalid-url",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Blob URL cannot be written to web scenes and web maps`,{layer:this})),null):!this.url&&t?null:n}beforeSave(){}};return s([l({type:String,json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0}},"portal-item":{write:!1}}}})],e.prototype,"id",void 0),s([l(D)],e.prototype,"listMode",void 0),s([c("listMode")],e.prototype,"writeListMode",null),s([l({type:String,readOnly:!0,json:{read:!1,write:{target:"layerType",ignoreOrigin:!0},origins:{"portal-item":{write:!1}}}})],e.prototype,"operationalLayerType",void 0),s([c("operationalLayerType")],e.prototype,"writeOperationalLayerType",null),s([l(g)],e.prototype,"opacity",void 0),s([l({type:String,json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}},"portal-item":{write:!1}}},value:"Layer"})],e.prototype,"title",void 0),s([c("title"),c(["web-scene"],"title")],e.prototype,"writeTitle",null),s([l({type:Boolean,json:{name:"visibility"}})],e.prototype,"visible",void 0),e=s([b("esri.layers.mixins.OperationalLayer")],e),e};function te(a){return"operationalLayerType"in a}export{ie as D,re as I,D as S,k as a,Q as b,ae as c,X as d,g as e,U as f,_ as g,Y as j,J as l,K as m,H as p,te as u,ee as v,Z as y};
