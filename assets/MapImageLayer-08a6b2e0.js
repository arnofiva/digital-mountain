import{Q as v,D as f,e as s,y as a,a as w}from"./cast-8b575ab3.js";import{U as g}from"./request-fc61835a.js";import{T as I}from"./TimeExtent-d116f9c4.js";import{a as b}from"./Error-685fdf30.js";import{a as $}from"./HandleOwner-f773ce72.js";import{l as O}from"./loadAll-8401c5ec.js";import{r as T}from"./typedArrayUtil-ce39e5f4.js";import{O as E}from"./MultiOriginJSONSupport-a1d33be9.js";import{w as R,j as M}from"./promiseUtils-e37fe75d.js";import{T as L}from"./ArrayPool-5813d861.js";import{a as P,o as j,r as F}from"./Extent-680ef92a.js";import{i as N}from"./scaleUtils-87bb90d3.js";import{b as J}from"./Layer-b29c44e3.js";import{i as U}from"./APIKeyMixin-d7cb7220.js";import{E as _,y as q,Z as k}from"./SublayersOwner-939be123.js";import{p as A}from"./ArcGISService-7ce81abb.js";import{a as V}from"./BlendLayer-291a2b49.js";import{o as z}from"./CustomParametersMixin-0dbce8f2.js";import{c as D,f as B}from"./OperationalLayer-c3a14c54.js";import{_ as C}from"./PortalLayer-7f6f61d4.js";import{p as G}from"./RefreshableLayer-51d28698.js";import{t as H}from"./ScaleRangeLayer-7ff6c0d3.js";import{a as K}from"./TemporalLayer-12ea8921.js";import{c as W}from"./ExportImageParameters-c93de02f.js";import{e as Q}from"./imageBitmapUtils-753ed100.js";import{n as x}from"./sublayerUtils-7a7b4353.js";import{e as Z}from"./versionUtils-f77d2452.js";import{a as S}from"./TimeReference-aeda2bb8.js";import"./string-7a324480.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./reactiveUtils-042dd05a.js";import"./asyncUtils-623987a8.js";import"./Collection-47946fa8.js";import"./Evented-d959ede6.js";import"./SimpleObservable-6f002ab0.js";import"./Loadable-695031ac.js";import"./Promise-e757e514.js";import"./Ellipsoid-89682c5e.js";import"./geometry-bad16232.js";import"./Polyline-889037e7.js";import"./typeUtils-700e0da4.js";import"./Identifiable-96150ecf.js";import"./Version-419f71e1.js";import"./CollectionFlattener-9bc75576.js";import"./PopupTemplate-8ac0cb61.js";import"./Clonable-2b8b60cc.js";import"./fieldUtils-1ecec444.js";import"./arcadeOnDemand-a1bf65ec.js";import"./enumeration-4ec8d3f9.js";import"./number-134e9f14.js";import"./locale-30120714.js";import"./UniqueValueRenderer-3904f4cc.js";import"./symbols-0f3de684.js";import"./CIMSymbol-cdddfd9c.js";import"./Color-ad49dc79.js";import"./colorUtils-639f4d25.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-6b5cbdc2.js";import"./symbolLayerUtils3D-51cc6d75.js";import"./aaBoundingBox-04c58f5a.js";import"./aaBoundingRect-41e05474.js";import"./persistableUrlUtils-1c5d7615.js";import"./Symbol3DAnchorPosition2D-142c1e90.js";import"./collectionUtils-25147e5f.js";import"./Portal-7ecdc9f0.js";import"./PortalGroup-ea788274.js";import"./PortalUser-a1aa49cd.js";import"./LegendOptions-de492976.js";import"./diffUtils-0c65d604.js";import"./colorRamps-ddfecb23.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-a1979e31.js";import"./Graphic-96c42a4d.js";import"./jsonUtils-03437bcd.js";import"./compilerUtils-175b9e40.js";import"./lengthUtils-1d09729e.js";import"./jsonUtils-e877a23b.js";import"./layerUtils-0c01cb0c.js";import"./styleUtils-305d8f69.js";import"./jsonUtils-b2e5d321.js";import"./DictionaryLoader-1438695d.js";import"./LRUCache-16cff7d8.js";import"./MemCache-1d0e264b.js";import"./deprecate-9828d7d2.js";import"./heatmapUtils-bc76f08e.js";import"./vec4f64-6d0e93be.js";import"./serviceCapabilitiesUtils-6f645c61.js";import"./arcgisLayerUrl-81a33ec5.js";import"./QueryTask-fec5cc20.js";import"./Query-65d38c02.js";import"./Field-1bc3a16a.js";import"./fieldType-232282e5.js";import"./normalizeUtils-6bee55d6.js";import"./normalizeUtilsCommon-17a95432.js";import"./executeForIds-44df8e64.js";import"./query-b200d7cb.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./OptimizedFeature-7f37a325.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bd6bba60.js";import"./zscale-def794ea.js";import"./executeQueryJSON-04f85be1.js";import"./FeatureSet-cb704b51.js";import"./featureConversionUtils-c227ec85.js";import"./FeatureType-474514d1.js";import"./FeatureTemplate-26b6ba5d.js";import"./FieldsIndex-967913ce.js";import"./labelingInfo-8462538e.js";import"./labelUtils-61dff46d.js";import"./defaultsJSON-59981e75.js";import"./AttachmentQuery-061e93ef.js";import"./popupUtils-7d1e2de5.js";import"./mat4f32-60a2394b.js";import"./mat4-4714ff8c.js";import"./ElevationInfo-ad190ee6.js";import"./PortalItem-6549afda.js";import"./assets-5052bbaa.js";import"./portalItemUtils-ba37e370.js";import"./projection-582e07d8.js";import"./datetime-b6333958.js";let i=class extends V(K(H(_(q(A(D(C(E(G(U(z($(J))))))))))))){constructor(...t){super(...t),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(t,o){return typeof t=="string"?{url:t,...o}:t}load(t){const o=T(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},t).catch(R).then(()=>this._fetchService(o))),Promise.resolve(this)}readImageFormat(t,o){const n=o.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(t,o,n,e){var h;if(!this.loaded||!t)return;const p=t.slice().reverse().flatten(({sublayers:r})=>r&&r.toArray().reverse()).toArray();let m=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&((h=this.capabilities.exportMap)!=null&&h.supportsDynamicLayers)){const r=v(e.origin);if(r===f.PORTAL_ITEM){const c=this.createSublayersForOrigin("service").sublayers;m=x(p,c,f.SERVICE)}else if(r>f.PORTAL_ITEM){const c=this.createSublayersForOrigin("portal-item");m=x(p,c.sublayers,v(c.origin))}}const l=[],d={writeSublayerStructure:m,...e};let y=m;p.forEach(r=>{const c=r.write({},d);l.push(c),y=y||r.originOf("visible")==="user"}),l.some(r=>Object.keys(r).length>1)&&(o.layers=l),y&&(o.visibleLayers=p.filter(r=>r.visible).map(r=>r.id))}createExportImageParameters(t,o,n,e){const p=e&&e.pixelRatio||1;t&&this.version>=10&&(t=t.clone().shiftCentralMeridian());const m=new W({layer:this,floors:e==null?void 0:e.floors,scale:N({extent:t,width:o})*p}),l=m.toJSON();m.destroy();const d=!e||!e.rotation||this.version<10.3?{}:{rotation:-e.rotation},y=t&&t.spatialReference,h=y.wkid||JSON.stringify(y.toJSON());l.dpi*=p;const r={};if(e!=null&&e.timeExtent){const{start:c,end:u}=e.timeExtent.toJSON();r.time=c&&u&&c===u?""+c:`${c??"null"},${u??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(r.time="null,null");return{bbox:t&&t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:h,imageSR:h,size:o+","+n,...l,...d,...r}}async fetchImage(t,o,n,e){const{data:p}=await this._fetchImage("image",t,o,n,e);return p}async fetchImageBitmap(t,o,n,e){const{data:p,url:m}=await this._fetchImage("blob",t,o,n,e);return Q(p,m)}async fetchRecomputedExtents(t={}){const o={...t,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,o),{extent:e,fullExtent:p,timeExtent:m}=n,l=e||p;return{fullExtent:l&&P.fromJSON(l),timeExtent:m&&I.fromJSON({start:m[0],end:m[1]})}}loadAll(){return O(this,t=>{t(this.allSublayers)})}serviceSupportsSpatialReference(t){return Z(this,t)}async _fetchImage(t,o,n,e,p){var d,y,h;const m={responseType:t,signal:(p==null?void 0:p.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(o,n,e,p),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(((d=m.query)==null?void 0:d.dynamicLayers)!=null&&!((h=(y=this.capabilities)==null?void 0:y.exportMap)!=null&&h.supportsDynamicLayers))throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:m.query});try{const{data:r}=await g(l,m);return{data:r,url:l}}catch(r){throw M(r)?r:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:r})}}async _fetchService(t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:o,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:t});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=o,this.read(o,{origin:"service",url:this.parsedUrl})}};s([a({type:S})],i.prototype,"dateFieldsTimeReference",void 0),s([a({type:Boolean})],i.prototype,"datesInUnknownTimezone",void 0),s([a()],i.prototype,"dpi",void 0),s([a()],i.prototype,"gdbVersion",void 0),s([a()],i.prototype,"imageFormat",void 0),s([j("imageFormat",["supportedImageFormatTypes"])],i.prototype,"readImageFormat",null),s([a({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],i.prototype,"imageMaxHeight",void 0),s([a({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],i.prototype,"imageMaxWidth",void 0),s([a()],i.prototype,"imageTransparency",void 0),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([a({json:{read:!1,write:!1}})],i.prototype,"labelsVisible",void 0),s([a({type:["ArcGISMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([a({type:S})],i.prototype,"preferredTimeReference",void 0),s([a()],i.prototype,"sourceJSON",void 0),s([a({json:{write:{ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),s([F("sublayers",{layers:{type:[k]},visibleLayers:{type:[L]}})],i.prototype,"writeSublayers",null),s([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([a({json:{read:!1},readOnly:!0,value:"map-image"})],i.prototype,"type",void 0),s([a(B)],i.prototype,"url",void 0),i=s([w("esri.layers.MapImageLayer")],i);const fe=i;export{fe as default};
