import{e as o,y as a,a as d}from"./cast-8b575ab3.js";import{s as t}from"./Error-685fdf30.js";import"./ArrayPool-5813d861.js";import"./typedArrayUtil-ce39e5f4.js";import{f as l}from"./WhereClause-cbd158ef.js";import{o as p}from"./I3SUtil-284d2bb3.js";const y="updating";function m(s){return s==="updating"?null:s}function D(s){return s==="updating"}const _=s=>{let n=class extends s{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=i=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&t.getLogger(this.declaredClass).error("Error while evaluating definitionExpression: "+i),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&t.getLogger(this.declaredClass).error("Further errors are ignored")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const i=l.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!i.isStandardized)return t.getLogger(this.declaredClass).error("definitionExpression is using non standard function"),null;const e=[],r=i.fieldNames;return p(r,this.i3slayer.fields,{missingFields:e}),e.length>0?(t.getLogger(this.declaredClass).error(`definitionExpression references unknown fields: ${e.join(", ")}`),null):(this._definitionExpressionErrors=0,i)}catch(i){return t.getLogger(this.declaredClass).error("Failed to parse definitionExpression: "+i),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:[]}_evaluateClause(i,e){try{return i.testFeature(e)}catch(r){return this.logError(r),!1}}_addDefinitionExpressionToQuery(i){if(!this.parsedDefinitionExpression)return i;const e=this.i3slayer.definitionExpression,r=i.clone();return r.where?r.where=`(${e}) AND (${r.where})`:r.where=e,r}};return o([a()],n.prototype,"i3slayer",void 0),o([a({readOnly:!0})],n.prototype,"parsedDefinitionExpression",null),o([a({readOnly:!0})],n.prototype,"definitionExpressionFields",null),n=o([d("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],n),n};export{m as a,y as n,_ as t,D as u};
