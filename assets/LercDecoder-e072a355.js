import{t as _,e as o,r as l,F as c}from"./typedArrayUtil-ce39e5f4.js";import{n as m}from"./cast-8b575ab3.js";import{s as f}from"./Error-685fdf30.js";import{f as p}from"./promiseUtils-e37fe75d.js";import{u as V}from"./workers-c3882da6.js";class L{constructor(e,t,s,i){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=s,this.noDataValue=i)}get hasNoDataValues(){if(_(this._hasNoDataValues)){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),o(this._minValue)}get maxValue(){return this._ensureBounds(),o(this._maxValue)}_ensureBounds(){if(l(this._minValue))return;const{noDataValue:e,values:t}=this;let s=1/0,i=-1/0,h=!0;for(const r of t)r===e?this._hasNoDataValues=!0:(s=r<s?r:s,i=r>i?r:i,h=!1);h?(this._minValue=0,this._maxValue=0):(this._minValue=s,this._maxValue=i>-3e38?i:0)}}class v{constructor(e,t,s,i,h={}){this._mainMethod=t,this._transferLists=s,this._listeners=[],this._promise=V(e,{...h,schedule:i}).then(r=>{if(this._thread===void 0){this._thread=r,this._promise=null,h.hasInitialize&&this.broadcast({},"initialize");for(const d of this._listeners)this._connectListener(d)}else r.close()}),this._promise.catch(r=>f.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${r}`))}on(e,t){const s={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(s),this._connectListener(s),m(()=>{s.removed=!0,c(this._listeners,s),this._thread&&l(s.threadHandle)&&s.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,s){if(this._thread){const i=this._transferLists[e],h=i?i(t):[];return this._thread.invoke(e,t,{transferList:h,signal:s})}return this._promise?this._promise.then(()=>(p(s),this.invokeMethod(e,t,s))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class u extends v{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,s){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},s):Promise.resolve(null)}release(){--this.ref<=0&&(n.forEach((e,t)=>{e===this&&n.delete(t)}),this.destroy())}}const n=new Map;function w(a=null){let e=n.get(o(a));return e||(l(a)?(e=new u(t=>a.immediate.schedule(t)),n.set(a,e)):(e=new u,n.set(null,e))),++e.ref,e}export{L as e,v as h,w as n};
