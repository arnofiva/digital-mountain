import{e as n,v as M,y as c,a as P}from"./cast-8b575ab3.js";import{l as j}from"./Color-ad49dc79.js";import{g as $}from"./Graphic-96c42a4d.js";import{h as S}from"./mathUtils-5b623c84.js";import{r as g,t as x}from"./typedArrayUtil-ce39e5f4.js";import"./ArrayPool-5813d861.js";import{S as O,h as A,b as L,s as k}from"./symbols-0f3de684.js";const T=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let r=class extends M{constructor(t){super(t),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=T.map(t=>new O({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(t){this._enabled!==t&&(this._enabled=t,this.update())}update(){if(!this._enabled)return void this.clear();const t=e=>{if(g(e.label))return e.label;let l=e.lij.toString();return g(e.loadPriority)&&(l+=` (${e.loadPriority})`),l},h=this.getTiles(),y=new Array,d=new Set((this._labels.size,this._labels.keys()));h.forEach((e,l)=>{const s=e.lij.toString();d.delete(s);const z=e.lij[0],m=e.geometry;if(this.enablePolygons&&!this._polygons.has(s)){const o=new $({geometry:m,symbol:this._symbols[z%this._symbols.length]});this._polygons.set(s,o),y.push(o)}if(this.enableLabels){const o=t(e),u=l/(h.length-1),p=S(0,200,u),_=S(20,6,u)/.75,w=g(e.loadPriority)&&e.loadPriority>=h.length,f=new j([p,w?0:p,w?0:p]),v=this.view.type==="3d"?()=>new A({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new L({text:o,halo:{color:"white",size:1/.75},material:{color:f},size:_})]}):()=>new k({text:o,haloColor:"white",haloSize:1/.75,color:f,size:_}),a=this._labels.get(s);if(a){const i=v();(x(a.symbol)||JSON.stringify(i)!==JSON.stringify(a.symbol))&&(a.symbol=i)}else{const i=new $({geometry:m.extent.center,symbol:v()});this._labels.set(s,i),y.push(i)}}});const b=new Array;d.forEach(e=>{const l=this._polygons.get(e);l!=null&&(b.push(l),this._polygons.delete(e));const s=this._labels.get(e);s!=null&&(b.push(s),this._labels.delete(e))}),this.view.graphics.removeMany(b),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([c({constructOnly:!0})],r.prototype,"view",void 0),n([c({readOnly:!0})],r.prototype,"updating",void 0),n([c()],r.prototype,"enabled",null),r=n([P("esri.views.support.TileTreeDebugger")],r);export{r as b};
