import{e as a,v as D,y as n,a as G}from"./cast-8b575ab3.js";import{n as z}from"./Evented-d959ede6.js";import{r,t as g}from"./typedArrayUtil-ce39e5f4.js";import{l as M,U as I}from"./reactiveUtils-042dd05a.js";import{u as m,d as S,i as H}from"./screenUtils-410d12c0.js";import"./ArrayPool-5813d861.js";import{b as v}from"./vec2-8acac370.js";import{x as E,n as L}from"./vec3-015ca254.js";import{A as O,r as R,g as X}from"./projection-582e07d8.js";import{l as Y}from"./elevationInfoUtils-ab005f9a.js";import{J as k}from"./labelingInfo-8462538e.js";import{x as A}from"./ElevationInfo-ad190ee6.js";import{o as N}from"./drapedUtils-4f3ec69d.js";function U(e){let o=0,i=0,t=0;return e?(e.type==="cim"&&e.data.symbol&&"symbolLayers"in e.data.symbol&&e.data.symbol.symbolLayers&&e.data.symbol.symbolLayers.map(s=>{s.type==="CIMVectorMarker"&&s.anchorPoint&&(Math.abs(s.anchorPoint.x)>o&&(o=s.anchorPoint.x),Math.abs(s.anchorPoint.y)>i&&(i=s.anchorPoint.y),r(s.size)&&s.size>t&&(t=s.size))}),o=m(o),i=m(i),t=m(t),{offsetX:o,offsetY:i,size:t}):{offsetX:o,offsetY:i,size:t}}let l=class extends D{set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged()}get elevationInfo(){const{layer:e}=this.graphic,o=e&&"elevationInfo"in e?e.elevationInfo:null,i=Y(this.graphic),t=o?o.offset:0;return new A({mode:i,offset:t})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol())}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol())}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new z.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(e){const o=this.graphic;if(o.visible===!1)return null;const i=o.geometry;if(g(i))return null;const t=this._get("focusedSymbol"),s=r(t)?t:o.symbol;return this.view.type==="2d"?this._intersectDistance2D(this.view,e,i,s):this._intersectDistance3D(this.view,e,o)}attach(){this.attachSymbolChanged(),r(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),r(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=M(()=>{var e;return(e=this.graphic)==null?void 0:e.symbol},e=>{r(e)&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&r(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))},I)}detachSymbolChanged(){r(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&r(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(e,o,i,t){var d,f;if(t=t||k(i),g(t))return null;const s=1;let c=this._circleCollisionCache;if(i.type==="point"&&t.type==="cim"&&((d=t.data.symbol)==null?void 0:d.type)==="CIMPointSymbol"&&t.data.symbol.symbolLayers){const{offsetX:y,offsetY:h,size:p}=U(t),u=S(o,x),b=p/2,_=e.toScreen(i),P=_.x+y,w=_.y+h;return v(u,[P,w])<b*b?s:null}if(i.type!=="point"||t.type!=="simple-marker")return N(o,i,e)?s:null;if(g(c)||!c.originalPoint.equals(i)){const y=i,h=e.spatialReference;if(O(y.spatialReference,h)){const p=R(y,h);c={originalPoint:y.clone(),mapPoint:p,radiusPx:m(t.size)},this._circleCollisionCache=c}}if(r(c)){const y=S(o,x),h=(f=e.toScreen)==null?void 0:f.call(e,c.mapPoint);if(!h)return null;const p=c.radiusPx,u=h.x+m(t.xoffset),b=h.y-m(t.yoffset);return v(y,[u,b])<p*p?s:null}return null}_intersectDistance3D(e,o,i){const t=e.toMap(o,{include:[i]});return t&&X(t,C,e.renderSpatialReference)?E(C,e.state.camera.eye):null}};a([n({constructOnly:!0,nonNullable:!0})],l.prototype,"graphic",null),a([n()],l.prototype,"elevationInfo",null),a([n({constructOnly:!0,nonNullable:!0})],l.prototype,"view",void 0),a([n({value:null})],l.prototype,"focusedSymbol",null),a([n({constructOnly:!0})],l.prototype,"layer",void 0),a([n()],l.prototype,"interactive",void 0),a([n()],l.prototype,"selectable",void 0),a([n()],l.prototype,"grabbable",void 0),a([n({value:!1})],l.prototype,"grabbing",null),a([n()],l.prototype,"dragging",void 0),a([n()],l.prototype,"hovering",null),a([n({value:!1})],l.prototype,"selected",null),a([n()],l.prototype,"cursor",void 0),l=a([G("esri.views.interactive.GraphicManipulator")],l);const C=L(),x=H();export{l as j,U as t};
