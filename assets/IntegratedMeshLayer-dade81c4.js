import{u as S,e as o,y as r,a as h,t as w}from"./JSONSupport-32b5ad86.js";import{a as m}from"./Error-62cc7aff.js";import{x as f,r as _,t as T}from"./typedArrayUtil-70e1d79e.js";import{O}from"./MultiOriginJSONSupport-247be6b9.js";import{w as $}from"./promiseUtils-59dab60c.js";import{a as L,U as x}from"./reactiveUtils-e6d6c898.js";import"./ensureType-249b88cd.js";import{o as I}from"./Extent-2ad2c9a9.js";import{g as M}from"./persistable-5845b8f0.js";import{b as N}from"./Layer-ab90f8be.js";import{i as b}from"./APIKeyMixin-a999140b.js";import{p as A}from"./ArcGISService-69574b36.js";import{c as U,d as j}from"./OperationalLayer-892ef1ff.js";import{_ as D}from"./PortalLayer-f8afa381.js";import{t as J}from"./ScaleRangeLayer-56857dcb.js";import{E as V,L as c}from"./SceneService-0f15576e.js";import{s as K,l as P,u as E,m as R}from"./I3SLayerDefinitions-2c1e8173.js";import{L as z,U as C}from"./request-f01affa1.js";import{j as F}from"./Collection-9e42cc30.js";import{f as d}from"./SceneModification-a8ebd8d7.js";import{c as k}from"./persistableUrlUtils-ccf13db2.js";import"./string-7a2f1d87.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-41c905a7.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-73213768.js";import"./resourceExtension-58c3e69d.js";import"./geometry-f89ca072.js";import"./Polyline-cf51ad23.js";import"./typeUtils-05f9d41d.js";import"./Evented-36093e88.js";import"./Identifiable-99d92428.js";import"./Loadable-7c3ecd79.js";import"./Promise-3959c3ee.js";import"./arcgisLayerUrl-1177870a.js";import"./TimeExtent-4bfae662.js";import"./ElevationInfo-bc15f954.js";import"./fieldUtils-e397be4b.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./lengthUtils-e2d3809d.js";import"./opacityUtils-c0957a27.js";import"./asyncUtils-8de18dd2.js";import"./layerUtils-ff76096c.js";import"./Portal-52d960e8.js";import"./locale-30120714.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./PortalItem-476b4f2f.js";import"./assets-640b4d04.js";import"./portalItemUtils-f08de884.js";import"./projection-d42b91be.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./SimpleObservable-a6d3d2d8.js";import"./mat4-4714ff8c.js";import"./aaBoundingRect-42f9721f.js";import"./zscale-d428b1da.js";import"./originUtils-1469eeaf.js";import"./HeightModelInfo-bc3bd77c.js";import"./I3SIndexInfo-93dfc828.js";import"./saveUtils-44b7e317.js";import"./resourceUtils-a295dbcf.js";import"./enumeration-504d95a2.js";var a;let p=a=class extends S(F.ofType(d)){constructor(t){super(t),this.url=null}clone(){return new a({url:this.url,items:this.items.map(t=>t.clone())})}toJSON(t){return this.toArray().map(i=>i.toJSON(t)).filter(i=>!!i.geometry)}static fromJSON(t,i){const s=new a;for(const n of t)s.add(d.fromJSON(n,i));return s}static async fromUrl(t,i,s){const n={url:z(t),origin:"service"},v=await C(t,{responseType:"json",signal:f(s,"signal")}),g=i.toJSON(),y=[];for(const l of v.data)y.push(d.fromJSON({...l,geometry:{...l.geometry,spatialReference:g}},n));return new a({url:t,items:y})}};o([r({type:String})],p.prototype,"url",void 0),p=a=o([h("esri.layers.support.SceneModifications")],p);const u=p;let e=class extends V(A(U(D(J(O(b(N))))))){constructor(...t){super(...t),this._handles=new w,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(L(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,x))}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}readModifications(t,i,s){this._modificationsSource={url:k(t,s),context:s}}async load(t){return this.addResolvingPromise(this._doLoad(t)),this}async _doLoad(t){const i=f(t,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},t)}catch(s){$(s)}if(await this._fetchService(i),_(this._modificationsSource)){const s=await u.fromUrl(this._modificationsSource.url,this.spatialReference,t);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(!T(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(t,i){return this._debouncedSaveOperations(c.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},t)}async save(){const t={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(c.SAVE,t)}validateLayer(t){if(t.layerType&&t.layerType!=="IntegratedMesh")throw new m("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:t.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};o([r({type:String,readOnly:!0})],e.prototype,"geometryType",void 0),o([r({type:["show","hide"]})],e.prototype,"listMode",void 0),o([r({type:["IntegratedMeshLayer"]})],e.prototype,"operationalLayerType",void 0),o([r({json:{read:!1},readOnly:!0})],e.prototype,"type",void 0),o([r({type:K,readOnly:!0})],e.prototype,"nodePages",void 0),o([r({type:[P],readOnly:!0})],e.prototype,"materialDefinitions",void 0),o([r({type:[E],readOnly:!0})],e.prototype,"textureSetDefinitions",void 0),o([r({type:[R],readOnly:!0})],e.prototype,"geometryDefinitions",void 0),o([r({readOnly:!0})],e.prototype,"serviceUpdateTimeStamp",void 0),o([r({type:u}),M({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],e.prototype,"modifications",void 0),o([I(["web-scene","portal-item"],"modifications")],e.prototype,"readModifications",null),o([r(j)],e.prototype,"elevationInfo",void 0),o([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],e.prototype,"path",void 0),e=o([h("esri.layers.IntegratedMeshLayer")],e);const ie=e;export{ie as default};
