import{e as t,y as i,a as l,l as u}from"./JSONSupport-32b5ad86.js";import{j}from"./Collection-9e42cc30.js";import{l as D}from"./CollectionFlattener-53f524d1.js";import{s as b,a as P}from"./Error-62cc7aff.js";import{p as m}from"./string-7a2f1d87.js";import{l as G}from"./loadAll-b0bbaf30.js";import{r as H}from"./typedArrayUtil-70e1d79e.js";import{O as Q}from"./MultiOriginJSONSupport-247be6b9.js";import{w as Y}from"./promiseUtils-59dab60c.js";import{U as Z,V as ee}from"./request-f01affa1.js";import"./ensureType-249b88cd.js";import{o as q,f as te}from"./Extent-2ad2c9a9.js";import{b as re}from"./Layer-ab90f8be.js";import{M as C}from"./BuildingComponentSublayer-e5c8c619.js";import{d}from"./BuildingGroupSublayer-14933a52.js";import{i as ie}from"./APIKeyMixin-a999140b.js";import{p as oe}from"./ArcGISService-69574b36.js";import{c as se,j as pe,y as le,d as ne}from"./OperationalLayer-892ef1ff.js";import{_ as ae}from"./PortalLayer-f8afa381.js";import{t as me}from"./ScaleRangeLayer-56857dcb.js";import{E as ye,L as V}from"./SceneService-0f15576e.js";import{n as ue}from"./uuid-73213768.js";import{o as de}from"./enumeration-504d95a2.js";import{J as ce}from"./symbols-5a102dff.js";import{m as he}from"./Loadable-7c3ecd79.js";import{m as fe}from"./Promise-3959c3ee.js";import{l as ge}from"./FetchAssociatedFeatureLayer-2c4266ec.js";import"./nextTick-3ee5a785.js";import"./Evented-36093e88.js";import"./SimpleObservable-a6d3d2d8.js";import"./asyncUtils-8de18dd2.js";import"./preload-helper-41c905a7.js";import"./Ellipsoid-89682c5e.js";import"./geometry-f89ca072.js";import"./Polyline-cf51ad23.js";import"./typeUtils-05f9d41d.js";import"./Identifiable-99d92428.js";import"./Graphic-46941d56.js";import"./PopupTemplate-c1fb66ed.js";import"./Clonable-95fa5d2d.js";import"./fieldUtils-e397be4b.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./number-2db5f4a2.js";import"./locale-30120714.js";import"./jsonUtils-6d0a72e3.js";import"./UniqueValueRenderer-31cfe725.js";import"./LegendOptions-d1ee6f9f.js";import"./Color-5a385b27.js";import"./colorUtils-639f4d25.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./reactiveUtils-e6d6c898.js";import"./diffUtils-a2efee1b.js";import"./Portal-52d960e8.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./colorRamps-844ba070.js";import"./opacityUtils-c0957a27.js";import"./screenUtils-410d12c0.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6f78f1dd.js";import"./compilerUtils-2eb56463.js";import"./lengthUtils-e2d3809d.js";import"./CIMSymbol-561444b9.js";import"./symbolLayerUtils3D-5a2f49a8.js";import"./aaBoundingBox-dfb04110.js";import"./aaBoundingRect-42f9721f.js";import"./persistableUrlUtils-ccf13db2.js";import"./Symbol3DAnchorPosition2D-d0207ef9.js";import"./collectionUtils-61fc1a27.js";import"./jsonUtils-ba20c384.js";import"./layerUtils-ff76096c.js";import"./styleUtils-ba5d50e4.js";import"./jsonUtils-0cd7beab.js";import"./DictionaryLoader-e5256637.js";import"./LRUCache-805da42e.js";import"./MemCache-a072224a.js";import"./deprecate-2ea4a12e.js";import"./heatmapUtils-bc76f08e.js";import"./vec4f64-6d0e93be.js";import"./FeatureLayer-c3299dce.js";import"./serviceCapabilitiesUtils-d47be03f.js";import"./arcgisLayerUrl-1177870a.js";import"./FeatureLayerBase-4bc86305.js";import"./Field-efd8d6fa.js";import"./fieldType-ec749512.js";import"./HeightModelInfo-bc3bd77c.js";import"./TimeReference-dbe22fa2.js";import"./datetime-b6333958.js";import"./AttachmentQuery-be73c1f4.js";import"./Query-6df7497c.js";import"./TimeExtent-4bfae662.js";import"./RelationshipQuery-1388e5e8.js";import"./HandleOwner-f4554d8c.js";import"./workers-591e0dfc.js";import"./Connection-000cba43.js";import"./assets-640b4d04.js";import"./intl-0ee83c79.js";import"./messages-f54f7f46.js";import"./editsZScale-1f9f5428.js";import"./queryZScale-7c3cd57e.js";import"./zscale-d428b1da.js";import"./FeatureSet-adc6c42d.js";import"./BlendLayer-fe49ee20.js";import"./mat4f32-60a2394b.js";import"./mat4-4714ff8c.js";import"./CustomParametersMixin-0cb5d402.js";import"./EditBusLayer-40721674.js";import"./FeatureReductionLayer-5d021257.js";import"./labelingInfo-81f8350c.js";import"./labelUtils-2517fbb8.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e39f681d.js";import"./RefreshableLayer-6e09e5c7.js";import"./TemporalLayer-1cafdc62.js";import"./FeatureTemplate-c492af3e.js";import"./FeatureType-9aee1062.js";import"./fieldProperties-13016a3b.js";import"./FieldsIndex-3347fdc5.js";import"./versionUtils-3b55ef95.js";import"./styleUtils-a2cb1d02.js";import"./TopFeaturesQuery-c51356f1.js";import"./popupUtils-ef59e204.js";import"./ElevationInfo-bc15f954.js";import"./PortalItem-476b4f2f.js";import"./portalItemUtils-f08de884.js";import"./projection-d42b91be.js";import"./capabilities-a18453f6.js";import"./I3SIndexInfo-93dfc828.js";import"./I3SLayerDefinitions-2c1e8173.js";import"./I3SUtil-66e1266a.js";import"./mat3-4fd89d48.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quat-99c4e099.js";import"./quatf64-f8f1c132.js";import"./quatf32-51a323b8.js";import"./spatialReferenceEllipsoidUtils-26c8dea5.js";import"./I3SBinaryReader-c63d93b8.js";import"./VertexAttribute-15d1866a.js";import"./orientedBoundingBox-7f391048.js";import"./vec3f32-01c06d8d.js";import"./plane-fef3662c.js";import"./sphere-092242fd.js";import"./byteSizeEstimations-f0cab514.js";import"./vec2f64-f35767d6.js";import"./ViewingMode-5d7d590b.js";import"./Attribute-f72d3f37.js";import"./symbolColorUtils-7c94928f.js";import"./popupUtils-ec9821da.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./saveUtils-44b7e317.js";import"./resourceUtils-a295dbcf.js";let S=class extends u{constructor(){super(...arguments),this.type=null}};t([i({type:String,readOnly:!0,json:{write:!0}})],S.prototype,"type",void 0),S=t([l("esri.layers.support.BuildingFilterAuthoringInfo")],S);const z=S;var I;let h=I=class extends u{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new I({filterType:this.filterType,filterValues:m(this.filterValues)})}};t([i({type:String,json:{write:!0}})],h.prototype,"filterType",void 0),t([i({type:[String],json:{write:!0}})],h.prototype,"filterValues",void 0),h=I=t([l("esri.layers.support.BuildingFilterAuthoringInfoType")],h);const ve=h;var F;const be=j.ofType(ve);let w=F=class extends u{clone(){return new F({filterTypes:m(this.filterTypes)})}};t([i({type:be,json:{write:!0}})],w.prototype,"filterTypes",void 0),w=F=t([l("esri.layers.support.BuildingFilterAuthoringInfoBlock")],w);const Se=w;var T;const we=j.ofType(Se);let f=T=class extends z{constructor(){super(...arguments),this.type="checkbox"}clone(){return new T({filterBlocks:m(this.filterBlocks)})}};t([i({type:["checkbox"]})],f.prototype,"type",void 0),t([i({type:we,json:{write:!0}})],f.prototype,"filterBlocks",void 0),f=T=t([l("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],f);const K=f;let $=class extends u{};t([i({readOnly:!0,json:{read:!1}})],$.prototype,"type",void 0),$=t([l("esri.layers.support.BuildingFilterMode")],$);const B=$;var _;let x=_=class extends B{constructor(){super(...arguments),this.type="solid"}clone(){return new _}};t([i({type:["solid"],readOnly:!0,json:{write:!0}})],x.prototype,"type",void 0),x=_=t([l("esri.layers.support.BuildingFilterModeSolid")],x);const A=x;var E;let g=E=class extends B{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new E({edges:m(this.edges)})}};t([de({wireFrame:"wire-frame"})],g.prototype,"type",void 0),t([i(ce)],g.prototype,"edges",void 0),g=E=t([l("esri.layers.support.BuildingFilterModeWireFrame")],g);const J=g;var k;let O=k=class extends B{constructor(){super(...arguments),this.type="x-ray"}clone(){return new k}};t([i({type:["x-ray"],readOnly:!0,json:{write:!0}})],O.prototype,"type",void 0),O=k=t([l("esri.layers.support.BuildingFilterModeXRay")],O);const U=O;var L;const $e={nonNullable:!0,types:{key:"type",base:B,typeMap:{solid:A,"wire-frame":J,"x-ray":U}},json:{read:e=>{switch(e&&e.type){case"solid":return A.fromJSON(e);case"wireFrame":return J.fromJSON(e);case"x-ray":return U.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let c=L=class extends u{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new A,this.title=""}clone(){return new L({filterExpression:this.filterExpression,filterMode:m(this.filterMode),title:this.title})}};t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"filterExpression",void 0),t([i($e)],c.prototype,"filterMode",void 0),t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"title",void 0),c=L=t([l("esri.layers.support.BuildingFilterBlock")],c);const xe=c;var M;const Oe=j.ofType(xe);let y=M=class extends u{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=ue(),this.name=null}clone(){return new M({description:this.description,filterBlocks:m(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:m(this.filterAuthoringInfo)})}};t([i({type:String,json:{write:!0}})],y.prototype,"description",void 0),t([i({type:Oe,json:{write:{enabled:!0,isRequired:!0}}})],y.prototype,"filterBlocks",void 0),t([i({types:{key:"type",base:z,typeMap:{checkbox:K}},json:{read:e=>(e&&e.type)==="checkbox"?K.fromJSON(e):null,write:!0}})],y.prototype,"filterAuthoringInfo",void 0),t([i({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],y.prototype,"id",void 0),t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],y.prototype,"name",void 0),y=M=t([l("esri.layers.support.BuildingFilter")],y);const je=y;let a=class extends u{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};t([i({type:String})],a.prototype,"fieldName",void 0),t([i({type:String})],a.prototype,"modelName",void 0),t([i({type:String})],a.prototype,"label",void 0),t([i({type:Number})],a.prototype,"min",void 0),t([i({type:Number})],a.prototype,"max",void 0),t([i({json:{read:e=>Array.isArray(e)&&(e.every(r=>typeof r=="string")||e.every(r=>typeof r=="number"))?e.slice():null}})],a.prototype,"mostFrequentValues",void 0),t([i({type:[Number]})],a.prototype,"subLayerIds",void 0),a=t([l("esri.layers.support.BuildingFieldStatistics")],a);let v=class extends he.LoadableMixin(fe(u)){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||this.loadStatus==="loading"?this._get("fields"):(b.getLogger(this.declaredClass).error("building summary statistics are not loaded"),null)}load(e){const r=H(e)?e.signal:null;return this.addResolvingPromise(this._fetchService(r)),Promise.resolve(this)}async _fetchService(e){const r=(await Z(this.url,{query:{f:"json"},responseType:"json",signal:e})).data;this.read(r,{origin:"service"})}};t([i({constructOnly:!0,type:String})],v.prototype,"url",void 0),t([i({readOnly:!0,type:[a],json:{read:{source:"summary"}}})],v.prototype,"fields",null),v=t([l("esri.layers.support.BuildingSummaryStatistics")],v);const W=v,X=j.ofType(je),N=m(d.sublayersProperty);N.json.origins["web-scene"]={type:[C],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},N.json.origins["portal-item"]={type:[C],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}};let s=class extends ye(oe(se(ae(me(Q(ie(re))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new D({getCollections:()=>[this.sublayers],getChildrenFunction:r=>r.type==="building-group"?r.sublayers:null}),this.sublayers=null,this._sublayerOverrides=null,this.filters=new X,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.type="building-scene"}normalizeCtorArgs(e){return typeof e=="string"?{url:e}:e??{}}destroy(){this.allSublayers.destroy()}readSublayers(e,r,o){const p=d.readSublayers(e,r,o);return d.forEachSublayer(p,n=>n.layer=this),this._sublayerOverrides&&(this.applySublayerOverrides(p,this._sublayerOverrides),this._sublayerOverrides=null),p}applySublayerOverrides(e,{overrides:r,context:o}){d.forEachSublayer(e,p=>p.read(r.get(p.id),o))}readSublayerOverrides(e,r){var p;const o=new Map;for(const n of e)n!=null&&typeof n=="object"&&typeof n.id=="number"?o.set(n.id,n):(p=r.messages)==null||p.push(new P("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:n}));return{overrides:o,context:r}}writeSublayerOverrides(e,r,o){const p=[];d.forEachSublayer(this.sublayers,n=>{const R=n.write({},o);Object.keys(R).length>1&&p.push(R)}),p.length>0&&(r.sublayers=p)}writeUnappliedOverrides(e,r){r.sublayers=[],e.overrides.forEach(o=>{r.sublayers.push(m(o))})}write(e,r){return e=super.write(e,r),!r||r.origin!=="web-scene"&&r.origin!=="portal-item"||(this.sublayers?this.writeSublayerOverrides(this.sublayers,e,r):this._sublayerOverrides&&this.writeUnappliedOverrides(this._sublayerOverrides,e)),e}read(e,r){if(super.read(e,r),r&&(r.origin==="web-scene"||r.origin==="portal-item")&&e!=null&&Array.isArray(e.sublayers)){const o=this.readSublayerOverrides(e.sublayers,r);this.sublayers?this.applySublayerOverrides(this.sublayers,o):this._sublayerOverrides=o}}readSummaryStatistics(e,r){var o;if(typeof r.statisticsHRef=="string"){const p=ee((o=this.parsedUrl)==null?void 0:o.path,r.statisticsHRef);return new W({url:p})}return null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}load(e){const r=H(e)?e.signal:null,o=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Y).then(()=>this._fetchService(r)).then(()=>this._fetchAssociatedFeatureService(r));return this.addResolvingPromise(o),Promise.resolve(this)}loadAll(){return G(this,e=>{d.forEachSublayer(this.sublayers,r=>{r.type!=="building-group"&&e(r)}),this.summaryStatistics&&e(this.summaryStatistics)})}async saveAs(e,r){return this._debouncedSaveOperations(V.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(V.SAVE,e)}validateLayer(e){if(!e.layerType||e.layerType!=="Building")throw new P("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}_validateElevationInfo(){const e=this.elevationInfo;e&&(e.mode!=="absolute-height"&&b.getLogger(this.declaredClass).warn(".elevationInfo=","Building scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&b.getLogger(this.declaredClass).warn(".elevationInfo=","Building scene layers do not support featureExpressionInfo"))}async _fetchAssociatedFeatureService(e){const r=new ge(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedFeatureServiceItem=await r.fetchPortalItem()}catch(o){b.getLogger(this.declaredClass).warn("Associated feature service item could not be loaded",o)}}};t([i({type:["BuildingSceneLayer"]})],s.prototype,"operationalLayerType",void 0),t([i({readOnly:!0})],s.prototype,"allSublayers",void 0),t([i(N)],s.prototype,"sublayers",void 0),t([q("service","sublayers")],s.prototype,"readSublayers",null),t([i({type:X,nonNullable:!0,json:{write:!0}})],s.prototype,"filters",void 0),t([i({type:String,json:{write:!0}})],s.prototype,"activeFilterId",void 0),t([i({readOnly:!0,type:W})],s.prototype,"summaryStatistics",void 0),t([q("summaryStatistics",["statisticsHRef"])],s.prototype,"readSummaryStatistics",null),t([i({type:[String],json:{read:!1}})],s.prototype,"outFields",void 0),t([i(pe)],s.prototype,"fullExtent",void 0),t([i({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),t([i(le(te))],s.prototype,"spatialReference",void 0),t([i(ne)],s.prototype,"elevationInfo",null),t([i({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),t([i()],s.prototype,"associatedFeatureServiceItem",void 0),s=t([l("esri.layers.BuildingSceneLayer")],s);const wi=s;export{wi as default};
