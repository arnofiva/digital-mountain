import{e as r,y as o,a as m,l as q}from"./JSONSupport-32b5ad86.js";import{i as S,k as B}from"./PopupTemplate-c1fb66ed.js";import{V as _,U as E}from"./request-f01affa1.js";import{a,s as C}from"./Error-62cc7aff.js";import{p as u,o as N}from"./string-7a2f1d87.js";import{r as L}from"./typedArrayUtil-70e1d79e.js";import{O as V}from"./MultiOriginJSONSupport-247be6b9.js";import{w as O}from"./promiseUtils-59dab60c.js";import{T}from"./ensureType-249b88cd.js";import{o as A,r as k}from"./Extent-2ad2c9a9.js";import{b as D}from"./Layer-ab90f8be.js";import{i as K}from"./APIKeyMixin-a999140b.js";import{p as G}from"./ArcGISService-69574b36.js";import{c as M,p as U,d as z,a as H}from"./OperationalLayer-892ef1ff.js";import{_ as J}from"./PortalLayer-f8afa381.js";import{t as Q}from"./ScaleRangeLayer-56857dcb.js";import{E as W,L as F}from"./SceneService-0f15576e.js";import{o as v}from"./enumeration-504d95a2.js";import{y as w}from"./Field-efd8d6fa.js";import{s as X}from"./fieldProperties-13016a3b.js";import{c as j,d as Y,b as Z,a as ee}from"./PointCloudUniqueValueRenderer-6cce9ee5.js";import{p as te}from"./popupUtils-ef59e204.js";import"./nextTick-3ee5a785.js";import"./Clonable-95fa5d2d.js";import"./Collection-9e42cc30.js";import"./Evented-36093e88.js";import"./SimpleObservable-a6d3d2d8.js";import"./fieldUtils-e397be4b.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-5c3ab3f7.js";import"./geometry-f89ca072.js";import"./Polyline-cf51ad23.js";import"./typeUtils-05f9d41d.js";import"./number-2db5f4a2.js";import"./locale-30120714.js";import"./Identifiable-99d92428.js";import"./Ellipsoid-89682c5e.js";import"./Loadable-7c3ecd79.js";import"./Promise-3959c3ee.js";import"./arcgisLayerUrl-1177870a.js";import"./persistableUrlUtils-ccf13db2.js";import"./TimeExtent-4bfae662.js";import"./ElevationInfo-bc15f954.js";import"./lengthUtils-e2d3809d.js";import"./opacityUtils-c0957a27.js";import"./asyncUtils-8de18dd2.js";import"./layerUtils-ff76096c.js";import"./Portal-52d960e8.js";import"./PortalGroup-b49a7409.js";import"./PortalUser-85cf1ca9.js";import"./PortalItem-476b4f2f.js";import"./assets-640b4d04.js";import"./portalItemUtils-f08de884.js";import"./projection-d42b91be.js";import"./mathUtils-5b623c84.js";import"./vec3-015ca254.js";import"./common-d0b63c2d.js";import"./vec4-c7a19f0d.js";import"./mat4-4714ff8c.js";import"./aaBoundingRect-42f9721f.js";import"./zscale-d428b1da.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./HeightModelInfo-bc3bd77c.js";import"./I3SIndexInfo-93dfc828.js";import"./saveUtils-44b7e317.js";import"./uuid-73213768.js";import"./resourceUtils-a295dbcf.js";import"./fieldType-ec749512.js";import"./FieldsIndex-3347fdc5.js";import"./LegendOptions-d1ee6f9f.js";import"./Color-5a385b27.js";import"./colorUtils-639f4d25.js";let c=class extends q{constructor(e){super(e),this.field=null,this.type=null}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}};r([o({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"field",void 0),r([o({readOnly:!0,nonNullable:!0,json:{read:!1}})],c.prototype,"type",void 0),c=r([m("esri.layers.pointCloudFilters.PointCloudFilter")],c);const g=c;var b;let l=b=class extends g{constructor(e){super(e),this.requiredClearBits=null,this.requiredSetBits=null,this.type="bitfield"}clone(){return new b({field:this.field,requiredClearBits:u(this.requiredClearBits),requiredSetBits:u(this.requiredSetBits)})}};r([o({type:[T],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredSetBits}}}}})],l.prototype,"requiredClearBits",void 0),r([o({type:[T],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredClearBits}}}}})],l.prototype,"requiredSetBits",void 0),r([v({pointCloudBitfieldFilter:"bitfield"})],l.prototype,"type",void 0),l=b=r([m("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")],l);const re=l;var I;let f=I=class extends g{constructor(e){super(e),this.includedReturns=[],this.type="return"}clone(){return new I({field:this.field,includedReturns:u(this.includedReturns)})}};r([o({type:[["firstOfMany","last","lastOfMany","single"]],json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"includedReturns",void 0),r([v({pointCloudReturnFilter:"return"})],f.prototype,"type",void 0),f=I=r([m("esri.layers.pointCloudFilters.PointCloudReturnFilter")],f);const oe=f;var $;let d=$=class extends g{constructor(e){super(e),this.mode="exclude",this.type="value",this.values=[]}clone(){return new $({field:this.field,mode:this.mode,values:u(this.values)})}};r([o({type:["exclude","include"],json:{write:{enabled:!0,isRequired:!0}}})],d.prototype,"mode",void 0),r([v({pointCloudValueFilter:"value"})],d.prototype,"type",void 0),r([o({type:[Number],json:{write:{enabled:!0,isRequired:!0}}})],d.prototype,"values",void 0),d=$=r([m("esri.layers.pointCloudFilters.PointCloudValueFilter")],d);const ie=d,se={key:"type",base:g,typeMap:{value:ie,bitfield:re,return:oe}};var x;let h=x=class extends j{constructor(e){super(e),this.type="point-cloud-rgb",this.field=null}clone(){return new x({...this.cloneProperties(),field:u(this.field)})}};r([v({pointCloudRGBRenderer:"point-cloud-rgb"})],h.prototype,"type",void 0),r([o({type:String,json:{write:!0}})],h.prototype,"field",void 0),h=x=r([m("esri.renderers.PointCloudRGBRenderer")],h);const ne=h,P={key:"type",base:j,typeMap:{"point-cloud-class-breaks":Y,"point-cloud-rgb":ne,"point-cloud-stretch":Z,"point-cloud-unique-value":ee},errorContext:"renderer"},R=X();let i=class extends W(G(M(J(Q(V(K(D))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const t=this.fieldsIndex.get(e);return t&&t.domain?t.domain:null}readServiceFields(e,t,n){return Array.isArray(e)?e.map(s=>{const p=new w;return s.type==="FieldTypeInteger"&&((s=u(s)).type="esriFieldTypeInteger"),p.read(s,n),p}):Array.isArray(t.attributeStorageInfo)?t.attributeStorageInfo.map(s=>new w({name:s.name,type:s.name==="ELEVATION"?"double":"integer"})):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,t,n,s){N("layerDefinition.drawingInfo.renderer",e.write({},s),t)}load(e){const t=L(e)?e.signal:null,n=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(O).then(()=>this._fetchService(t));return this.addResolvingPromise(n),Promise.resolve(this)}createPopupTemplate(e){const t=te(this,e);return t&&(this._formatPopupTemplateReturnsField(t),this._formatPopupTemplateRGBField(t)),t}_formatPopupTemplateReturnsField(e){var p;const t=this.fieldsIndex.get("RETURNS");if(!t)return;const n=(p=e.fieldInfos)==null?void 0:p.find(y=>y.fieldName===t.name);if(!n)return;const s=new S({name:"pcl-returns-decoded",title:t.alias||t.name,expression:`
        var returnValue = $feature.${t.name};
        return (returnValue % 16) + " / " + Floor(returnValue / 16);
      `});e.expressionInfos=[...e.expressionInfos||[],s],n.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){var p;const t=this.fieldsIndex.get("RGB");if(!t)return;const n=(p=e.fieldInfos)==null?void 0:p.find(y=>y.fieldName===t.name);if(!n)return;const s=new S({name:"pcl-rgb-decoded",title:t.alias||t.name,expression:`
        var rgb = $feature.${t.name};
        var red = Floor(rgb / 65536, 0);
        var green = Floor((rgb - (red * 65536)) / 256,0);
        var blue = rgb - (red * 65536) - (green * 256);

        return "rgb(" + red + "," + green + "," + blue + ")";
      `});e.expressionInfos=[...e.expressionInfos||[],s],n.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,t){if(await this.load(t),!this.attributeStorageInfo)throw new a("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const n=this.fieldsIndex.get(e);if(!n)throw new a("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const s of this.attributeStorageInfo)if(s.name===n.name){const p=_(this.parsedUrl.path,`./statistics/${s.key}`);return E(p,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(y=>y.data)}throw new a("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(F.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(F.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="PointCloud")throw new a("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return this.attributeStorageInfo!=null&&this.attributeStorageInfo.some(t=>t.name===e)}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;e&&(e.mode!=="absolute-height"&&C.getLogger(this.declaredClass).warn(".elevationInfo=","Point cloud layers only support absolute-height elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&C.getLogger(this.declaredClass).warn(".elevationInfo=","Point cloud layers do not support featureExpressionInfo"))}};r([o({type:["PointCloudLayer"]})],i.prototype,"operationalLayerType",void 0),r([o(U)],i.prototype,"popupEnabled",void 0),r([o({type:B,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),r([o({readOnly:!0,json:{read:!1}})],i.prototype,"defaultPopupTemplate",null),r([o({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],i.prototype,"opacity",void 0),r([o({type:["show","hide"]})],i.prototype,"listMode",void 0),r([o({types:[se],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],i.prototype,"filters",void 0),r([o({type:[w]})],i.prototype,"fields",void 0),r([o(R.fieldsIndex)],i.prototype,"fieldsIndex",void 0),r([A("service","fields",["fields","attributeStorageInfo"])],i.prototype,"readServiceFields",null),r([o(R.outFields)],i.prototype,"outFields",void 0),r([o({readOnly:!0})],i.prototype,"attributeStorageInfo",void 0),r([o(z)],i.prototype,"elevationInfo",null),r([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),r([o(H)],i.prototype,"legendEnabled",void 0),r([o({types:P,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:P},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],i.prototype,"renderer",void 0),r([k("renderer")],i.prototype,"writeRenderer",null),r([o({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),i=r([m("esri.layers.PointCloudLayer")],i);const Tt=i;export{Tt as default};
