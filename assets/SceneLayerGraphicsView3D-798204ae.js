import{_ as q}from"./preload-helper-41c905a7.js";import{e as c,y as u,a as H}from"./cast-8b575ab3.js";import{g as F}from"./Graphic-96c42a4d.js";import{t as _,r as f,a as b,e as U,M as Q}from"./typedArrayUtil-ce39e5f4.js";import{s as E}from"./Error-685fdf30.js";import{h as C,l as T}from"./reactiveUtils-042dd05a.js";import{n as z}from"./ArrayPool-5813d861.js";import{o as k,n as B}from"./vec3-015ca254.js";import{x as G,j as W}from"./projection-582e07d8.js";import{a2 as Z}from"./Extent-680ef92a.js";import{o as J}from"./zscale-def794ea.js";import{T as O,C as K,u as Y,a3 as X,O as ee}from"./index-334863ed.js";import{M as te,N as re}from"./dehydratedFeatures-55779981.js";import{A as S,t as ie}from"./I3SOverrides-6784be14.js";import{y as oe}from"./FeatureReductionLayer-55e6b2c4.js";import{x as A}from"./Query-65d38c02.js";import{h as se}from"./LercDecoder-e072a355.js";import{n as ae}from"./LayerView3D-1b2fbab8.js";import{F as ne,p as pe}from"./FeatureLikeLayerView3D-51975cad.js";import{c as de,i as le,u as he,b as me,E as ce}from"./SceneLayerView-84f52faa.js";import{n as ue}from"./Evented-d959ede6.js";import{g as ge,w as fe,J as _e,a as ye,m as L}from"./I3SUtil-284d2bb3.js";import{t as be}from"./DefinitionExpressionSceneLayerView-81d06b52.js";import{c as ve}from"./PopupSceneLayerView-b094dc2a.js";import{Q as xe}from"./orientedBoundingBox-8bbf4141.js";import{s as Ee}from"./Attribute-f72d3f37.js";import{n as M}from"./MeshComponent-f5ec9479.js";import{R as Ie}from"./Scheduler-3113abcd.js";import"./string-7a324480.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e37fe75d.js";import"./geometry-bad16232.js";import"./Polyline-889037e7.js";import"./typeUtils-700e0da4.js";import"./PopupTemplate-8ac0cb61.js";import"./Clonable-2b8b60cc.js";import"./Collection-47946fa8.js";import"./SimpleObservable-6f002ab0.js";import"./fieldUtils-1ecec444.js";import"./arcadeOnDemand-a1bf65ec.js";import"./enumeration-4ec8d3f9.js";import"./number-134e9f14.js";import"./locale-30120714.js";import"./Identifiable-96150ecf.js";import"./symbols-0f3de684.js";import"./CIMSymbol-cdddfd9c.js";import"./Color-ad49dc79.js";import"./colorUtils-639f4d25.js";import"./mathUtils-5b623c84.js";import"./vec4-c7a19f0d.js";import"./common-d0b63c2d.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-6b5cbdc2.js";import"./symbolLayerUtils3D-51cc6d75.js";import"./aaBoundingBox-04c58f5a.js";import"./aaBoundingRect-41e05474.js";import"./request-fc61835a.js";import"./persistableUrlUtils-1c5d7615.js";import"./Symbol3DAnchorPosition2D-142c1e90.js";import"./collectionUtils-25147e5f.js";import"./Portal-7ecdc9f0.js";import"./Loadable-695031ac.js";import"./Promise-e757e514.js";import"./PortalGroup-ea788274.js";import"./PortalUser-a1aa49cd.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-03437bcd.js";import"./mat4-4714ff8c.js";import"./assets-5052bbaa.js";import"./IdentityManager-13ed5348.js";import"./intl-b84fb3c9.js";import"./messages-8a541332.js";import"./uuid-73213768.js";import"./dom-2ec1e33c.js";import"./Basemap-f5ca570d.js";import"./deprecate-9828d7d2.js";import"./loadAll-8401c5ec.js";import"./asyncUtils-623987a8.js";import"./PortalItem-6549afda.js";import"./writeUtils-ff257e5e.js";import"./layerUtils-0c01cb0c.js";import"./compilerUtils-175b9e40.js";import"./CollectionFlattener-9bc75576.js";import"./TablesMixin-b6031ef9.js";import"./Layer-b29c44e3.js";import"./Cyclical-34b2a5e3.js";import"./MultiOriginJSONSupport-a1d33be9.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./HeightModelInfo-42ae0f61.js";import"./arcgisLayerUrl-81a33ec5.js";import"./ViewingMode-5d7d590b.js";import"./saveUtils-bf4b189a.js";import"./resourceUtils-e6e10558.js";import"./fieldType-232282e5.js";import"./OperationalLayer-c3a14c54.js";import"./TimeExtent-d116f9c4.js";import"./ElevationInfo-ad190ee6.js";import"./lengthUtils-1d09729e.js";import"./plane-e5e66c24.js";import"./sphere-8ab93b42.js";import"./vec4f64-6d0e93be.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-50f3b9f6.js";import"./mat4f64-abdda1bb.js";import"./quatf64-f8f1c132.js";import"./vec2f64-f35767d6.js";import"./mat3-4fd89d48.js";import"./Octree-d990d188.js";import"./Util-c12e93ba.js";import"./scaleUtils-87bb90d3.js";import"./lineSegment-b352e49e.js";import"./objectResourceUtils-8909e8c3.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-da65c548.js";import"./vec2-8acac370.js";import"./vec33-8529ce65.js";import"./DefaultMaterial_COLOR_GAMMA-87d1f8e6.js";import"./types-e1c0a5bf.js";import"./enums-fc527c7c.js";import"./Version-419f71e1.js";import"./quat-99c4e099.js";import"./resourceUtils-527631ac.js";import"./basicInterfaces-7449a8bf.js";import"./Indices-37e06e9a.js";import"./DefaultMaterial.glsl-7d7dc23e.js";import"./ForwardLinearDepth.glsl-a0929473.js";import"./Matrix3PassUniform-0b3b1bba.js";import"./ShaderBuilder-7bfc11d2.js";import"./vec3f32-01c06d8d.js";import"./VertexAttribute-15d1866a.js";import"./View.glsl-03db830e.js";import"./mat4f32-60a2394b.js";import"./Texture2DPassUniform-70e1e126.js";import"./MixExternalColor.glsl-99b269fe.js";import"./ShaderTechniqueConfiguration-ee770726.js";import"./symbolColorUtils-834d5fca.js";import"./PhysicallyBasedRendering.glsl-32dfb9c7.js";import"./FloatPassUniform-e3702139.js";import"./Float4PassUniform-7f3c3ce8.js";import"./RgbaFloatEncoding.glsl-4a25e2a7.js";import"./Texture2DDrawUniform-02720a73.js";import"./PiUtils.glsl-5ee49495.js";import"./VisualVariablePassParameters-8cb0a75a.js";import"./VertexElementDescriptor-2925c6af.js";import"./Texture-bf6b5582.js";import"./context-util-7ede29e5.js";import"./Slice.glsl-7975394d.js";import"./Transform.glsl-7294c426.js";import"./ObjectAndLayerIdColor.glsl-a64028da.js";import"./OutputDepth.glsl-f581dcdd.js";import"./OutputHighlight.glsl-08aacdf4.js";import"./VisualVariables.glsl-9e988d16.js";import"./DiscardOrAdjustAlphaBlend.glsl-f19054e7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-a6b20292.js";import"./VertexColor.glsl-79a8c465.js";import"./VerticalOffset.glsl-5354e013.js";import"./Normals.glsl-0f400ece.js";import"./EvaluateSceneLighting.glsl-5da94bb7.js";import"./SSAOBlur.glsl-7265df26.js";import"./ScreenSpacePass.glsl-fee70090.js";import"./ReadLinearDepth.glsl-53a01bc1.js";import"./SSAO.glsl-c9cc39dd.js";import"./MultipassTerrainTest.glsl-43f42334.js";import"./vec2f32-eaf29605.js";import"./Texture-87febf19.js";import"./TextureOnly.glsl-548e665f.js";import"./InterleavedLayout-d75b8228.js";import"./DefaultTechniqueConfiguration-5fedee5c.js";import"./RealisticTree.glsl-1e8f0ea9.js";import"./GraphicsLayer-70f87af0.js";import"./HandleOwner-f773ce72.js";import"./BlendLayer-291a2b49.js";import"./ScaleRangeLayer-7ff6c0d3.js";import"./workers-c3882da6.js";import"./Connection-6bd43370.js";import"./spatialReferenceEllipsoidUtils-23733e37.js";import"./AttachmentInfo-6f2ba68c.js";import"./AttachmentQuery-061e93ef.js";import"./LegendOptions-de492976.js";import"./DimensionalDefinition-4b26df38.js";import"./UniqueValueRenderer-3904f4cc.js";import"./diffUtils-0c65d604.js";import"./colorRamps-ddfecb23.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-a1979e31.js";import"./jsonUtils-e877a23b.js";import"./styleUtils-305d8f69.js";import"./vectorFieldUtils-3e325848.js";import"./colorUtils-7641d345.js";import"./normalizeUtils-6bee55d6.js";import"./normalizeUtilsCommon-17a95432.js";import"./ItemCache-c0904c4f.js";import"./MemCache-1d0e264b.js";import"./cimSymbolUtils-bff8b59b.js";import"./utils-3d986af0.js";import"./jsonUtils-b2e5d321.js";import"./DictionaryLoader-1438695d.js";import"./LRUCache-16cff7d8.js";import"./heatmapUtils-bc76f08e.js";import"./executeQueryJSON-04f85be1.js";import"./query-b200d7cb.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./OptimizedFeature-7f37a325.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bd6bba60.js";import"./FeatureSet-cb704b51.js";import"./Field-1bc3a16a.js";import"./featureConversionUtils-c227ec85.js";import"./RelationshipQuery-0abdb3e2.js";import"./TopFeaturesQuery-3a519c5e.js";import"./FeatureLayer-f2f6536e.js";import"./serviceCapabilitiesUtils-6f645c61.js";import"./FeatureLayerBase-b19f7ee7.js";import"./TimeReference-aeda2bb8.js";import"./datetime-b6333958.js";import"./editsZScale-eefb35e6.js";import"./APIKeyMixin-d7cb7220.js";import"./ArcGISService-7ce81abb.js";import"./CustomParametersMixin-0dbce8f2.js";import"./EditBusLayer-faff46ba.js";import"./OrderedLayer-f840e564.js";import"./PortalLayer-7f6f61d4.js";import"./portalItemUtils-ba37e370.js";import"./RefreshableLayer-51d28698.js";import"./TemporalLayer-12ea8921.js";import"./FeatureTemplate-26b6ba5d.js";import"./FeatureType-474514d1.js";import"./fieldProperties-66b12497.js";import"./FieldsIndex-967913ce.js";import"./labelingInfo-8462538e.js";import"./labelUtils-61dff46d.js";import"./defaultsJSON-59981e75.js";import"./versionUtils-f77d2452.js";import"./styleUtils-4d62e921.js";import"./popupUtils-7d1e2de5.js";import"./callExpressionWithFeature-6f3761f2.js";import"./quantizationUtils-dc028b68.js";import"./webStyleSymbolUtils-0f876db3.js";import"./ElevationSamplerData-b8eeacdf.js";import"./TileInfo-f339e6a5.js";import"./WaterSurface.glsl-55a88d78.js";import"./NormalUtils.glsl-f259fe4a.js";import"./HUD.glsl-79bd614f.js";import"./edgeProcessing-fa6d4038.js";import"./deduplicate-dffc7dea.js";import"./projection-c67d3c7f.js";import"./HUDMaterial.glsl-caa3e151.js";import"./sdfPrimitives-86e63320.js";import"./floatRGBA-11065dbc.js";import"./labelFormatUtils-695eab3b.js";import"./LineCallout.glsl-ede36b7c.js";import"./earcut-61f7b102.js";import"./QueryEngineResult-c580d29f.js";import"./WhereClause-cbd158ef.js";import"./executionError-fb3f283a.js";import"./utils-f1e38d04.js";import"./generateRendererUtils-65ba2788.js";import"./json-48e3ea08.js";import"./MarkerSizing.glsl-0f21463c.js";import"./RibbonLine.glsl-376e988d.js";import"./LineStipple.glsl-dfd34f08.js";import"./LineMarker.glsl-b68d2081.js";import"./NativeLine.glsl-38506d53.js";import"./Path.glsl-5da6ce18.js";import"./ColorMaterial.glsl-d42d7e44.js";import"./Pattern.glsl-cc643bcf.js";import"./enums-fb086c25.js";import"./config-f7904f35.js";import"./TileKey-ae8a9188.js";import"./workerHelper-7b69330e.js";import"./capabilities-8176ed28.js";import"./geometryEngine-68f880a9.js";import"./geometryEngineBase-e1a33b0a.js";import"./hydrated-61d2b3c5.js";import"./floating-ui-8c8de742.js";import"./StreamLayer-b816a6d3.js";import"./SceneFilter-8312e3bf.js";import"./persistable-63f0629a.js";import"./resourceExtension-a93bca74.js";import"./elevationInfoUtils-ab005f9a.js";import"./DimensionAnalysis-0ac2f8cd.js";import"./Analysis-cc5bd6fb.js";import"./ExportImageParameters-c93de02f.js";import"./sublayerUtils-7a7b4353.js";import"./quatf32-51a323b8.js";import"./I3SNode-948a3cab.js";import"./I3SBinaryReader-855bcff2.js";import"./RenderTexture-35f5407b.js";import"./FeatureLayerView3D-898bf961.js";import"./FeatureLayerViewBase3D-bedf0cad.js";import"./EventedSet-218d336e.js";import"./popupUtils-d00ed938.js";import"./LayerView-e3f48a81.js";import"./RefreshableLayerView-1d39edb2.js";import"./dehydratedFeatureComparison-d263905a.js";import"./queryForSymbologySnapping-3357afe3.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-883f2275.js";import"./optimizedFeatureQueryEngineAdapter-34dd80f1.js";import"./centroid-65165a98.js";import"./PooledRBush-733f2760.js";import"./quickselect-56c5966e.js";import"./QueryEngine-14917f39.js";import"./QueryEngineCapabilities-42e44ded.js";import"./FeatureStore-ddd73ade.js";import"./BoundsStore-d242d513.js";import"./Heatmap.glsl-2ad64587.js";import"./HeatmapDensity.glsl-f65cdd20.js";import"./projectExtentUtils-350f8253.js";class P extends se{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}class we extends ue{constructor(t,i){super(),this._updateAndCompare=t,this._notifyUpdated=i,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const t=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:t})}this._nodes.clear()}get length(){return this._graphics.size}get(t){return this._graphics.get(t)}getNode(t){return this._nodes.get(t)}hasNode(t){return this._nodes.has(t)}nodes(){return this._nodes.values()}addNode(t,i){this._nodes.set(t,i);const r=i.graphics;if(r.length===0)return;const o=new Set;for(let a=0;a<r.length;a++){const n=r[a],p=n.objectId,l=this._graphics.get(p);if(l){o.add(p),n!==l&&(r[a]=l);const d=this._duplicates.get(p);d?d.push(t):this._duplicates.set(p,[l.nodeIndex,t])}else n.nodeIndex=t,this._graphics.set(p,n)}o.size&&this._updateForeignGraphics(i);const s=o.size>0?r.filter(a=>!o.has(a.objectId)):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(t){const i=this._nodes.get(t);if(!i)return void console.error("Removing unknown node");this._nodes.delete(t);const r=new Set,o=[];for(const s of i.graphics){const a=s.objectId,n=this._graphics.get(a);if(!n)continue;const p=this._duplicates.get(a);if(p){const l=p.indexOf(t);if(l===-1){console.error("error: removing graphic from node that should not reference it.");continue}if(p.splice(l,1),n.nodeIndex===t){let d=this.getNode(p[0]);for(let m=1;m<p.length;m++){const g=this.getNode(p[m]);(_(d)||f(g)&&g.node.level>d.node.level)&&(d=g)}f(d)&&r.add(d)}p.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),o.push(s)}o.length>0&&this.emit("change",{added:[],removed:o}),r.forEach(s=>this._updateForeignGraphics(s))}_updateForeignGraphics(t){const i=[],r=t.node.index,o=t.node.level;let s=0;for(;s<t.graphics.length;){const a=t.graphics[s].nodeIndex;if(a===r){s++;continue}let n=1;for(;s+n<t.graphics.length&&t.graphics[s+n].nodeIndex===a;)n++;const p=this.getNode(a);if(f(p)&&p.node.level>o)s+=n;else{for(let l=s;l<s+n;l++){const d=t.graphics[l];d.nodeIndex=r,this._updateAndCompare(d,t,l)&&i.push(d)}s+=n}}this._notifyUpdated(i)}toArray(){return Array.from(this._graphics.values())}find(t){let i;return z(this._graphics,r=>!!t(r)&&(i=r,!0)),i}forEach(t){this._graphics.forEach(i=>t(i))}forEachNode(t){this._nodes.forEach((i,r)=>t(i,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const t=new Map;this._nodes.forEach((r,o)=>{o!==r.node.index&&console.error("Mismatched node index"),r.graphics.forEach(s=>{t.set(s.objectId,1+(t.get(s.objectId)??0));const a=this._duplicates.get(s.objectId);a&&!a.includes(o)&&console.error("Node not listed in duplicate list"),a||s.nodeIndex===o||console.error("Unique graphic does not reference owning node index")})}),this._graphics.size!==t.size&&console.error("Mismatch between actual and expected number of graphics");let i=0;t.forEach((r,o)=>{i+=r>1?1:0;const s=this._graphics.get(o);if(!s)return void console.error("Missing graphic entry");const a=this._nodes.get(s.nodeIndex);if(!a)return void console.error("Graphic references unkown node");const n=this._duplicates.get(o);n?(n.length!==r&&console.error("Wrong number of entries in duplicate list"),n.forEach(p=>{const l=this._nodes.get(p);l?l.node.level>a.node.level&&console.error("Duplicated graphic does not reference highest level node"):console.error("Unknown node in duplicate list")})):r>1&&console.error("Missing duplicates entry")}),this._duplicates.size!==i&&console.error("Mismatch between expected and actual number of duplicate entries")}}const R=me();let h=class extends be(ve(ae(ce))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new we((e,t,i)=>Ce(e,t,i),e=>this.processor.graphicsCore.recreateGraphics(e)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then(()=>{var r;ge(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const i=(r=this.view.resourceController)==null?void 0:r.memoryController;this._i3sOverrides=new S({view:this.view,layer:e,memoryController:i}),b(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){var t,i;this.addResolvingPromise(this.layer.indexInfo);const e=(t=this.view.resourceController)==null?void 0:t.memoryController;this._i3sOverrides=new S({view:this.view,layer:this.layer,memoryController:e}),fe(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new de({layerView:this}),this.updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),C),this.updatingHandles.add(()=>this.layer.renderer,(r,o)=>this._rendererChange(r,o)),this.updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.handles.add(T(()=>O.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;q(()=>import("./I3STreeDebugger-458fd321.js"),["./I3STreeDebugger-458fd321.js","./cast-8b575ab3.js","./typedArrayUtil-ce39e5f4.js","./string-7a324480.js","./Error-685fdf30.js","./ArrayPool-5813d861.js","./nextTick-3ee5a785.js","./promiseUtils-e37fe75d.js","./geometry-bad16232.js","./Extent-680ef92a.js","./Ellipsoid-89682c5e.js","./Polyline-889037e7.js","./typeUtils-700e0da4.js","./mat4-4714ff8c.js","./vec3-015ca254.js","./common-d0b63c2d.js","./mat4f64-abdda1bb.js","./projection-582e07d8.js","./preload-helper-41c905a7.js","./mathUtils-5b623c84.js","./vec4-c7a19f0d.js","./SimpleObservable-6f002ab0.js","./assets-5052bbaa.js","./request-fc61835a.js","./aaBoundingRect-41e05474.js","./zscale-def794ea.js","./TileTreeDebugger-f0716264.js","./Color-ad49dc79.js","./colorUtils-639f4d25.js","./Graphic-96c42a4d.js","./PopupTemplate-8ac0cb61.js","./Clonable-2b8b60cc.js","./Collection-47946fa8.js","./Evented-d959ede6.js","./fieldUtils-1ecec444.js","./arcadeOnDemand-a1bf65ec.js","./enumeration-4ec8d3f9.js","./number-134e9f14.js","./locale-30120714.js","./Identifiable-96150ecf.js","./symbols-0f3de684.js","./CIMSymbol-cdddfd9c.js","./screenUtils-410d12c0.js","./opacityUtils-6b5cbdc2.js","./symbolLayerUtils3D-51cc6d75.js","./aaBoundingBox-04c58f5a.js","./persistableUrlUtils-1c5d7615.js","./Symbol3DAnchorPosition2D-142c1e90.js","./collectionUtils-25147e5f.js","./Portal-7ecdc9f0.js","./Loadable-695031ac.js","./Promise-e757e514.js","./PortalGroup-ea788274.js","./PortalUser-a1aa49cd.js","./jsonUtils-03437bcd.js"],import.meta.url).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&O.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||O.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},C)),this._set("processor",new ne({owner:this,preferredUpdatePolicy:K.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",r=>this._controller.updateElevationChanged(r.extent,r.spatialReference)),this.supportsHeightUnitConversion&&(this._verticalScale=J("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(this.uid),this._controller=new ie({layerView:this,scaleVisibilityEnabled:!1}),_e(this.layer.geometryDefinitions)&&(this._worker=new P(r=>this.view.resourceController.immediate.schedule(r))),this.handles.add(this.layer.on("apply-edits",r=>this.updatingHandles.addPromise(r.result))),this.handles.add(this.layer.on("edits",r=>this._handleEdits(r))),this.when(()=>{this._setupQueryEngine(),this.updatingHandles.add(()=>this.maximumNumberOfFeatures,r=>this._controller.featureTarget=r,C),this.updatingHandles.add(()=>this.suspended,r=>{r&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=b(this._treeDebugger),this._i3sOverrides=b(this._i3sOverrides),this._set("processor",b(this.processor)),this._controller=b(this._controller),this._queryEngine=b(this._queryEngine),this._worker=b(this._worker),this._memCache=b(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=b(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}async whenGraphicAttributes(e,t){return ye(this.layer,e,this._getObjectIdField(),t,()=>[...this.loadedGraphics.nodes()])}getHit(e){if(!this.loadedGraphics)return null;const t=Y(this.loadedGraphics.find(r=>r.uid===e),this.layer),i=this._getObjectIdField();return t&&t.attributes&&t.attributes[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return le(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};_(this._worker)&&(this._worker=new P(o=>this.view.resourceController.immediate.schedule(o)));const r=await this._worker.invoke(i,t);if(_(r))throw new Error("Failed to decompress Draco point data");return{positionData:r.positions,featureIds:r.featureIds}}async addNode(e,t,i){if(!D(t)&&!Ne(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void E.getLogger(this.declaredClass).error("I3S node "+e.id+" already added");const r=f(this.layer.fullExtent)?Oe(this.layer.fullExtent.clone(),.5):null,o=[],{featureIds:s,pointPositions:a}=D(t)?await this._extractBinaryPointPositions(e,t,i):this._extractLegacyPointPositions(t);this._validatePositions(e,s,a,r,o);const n=this._controller.crsVertex,p=this.view.spatialReference;G(a,n,0,a,p,0,s.length);const l=D(t)?e.level:0,d={graphics:this._createGraphics(s,a,e.index,l),featureIds:s,attributeInfo:t.attributeDataInfo,node:e};if(await this._i3sOverrides.apply(d.featureIds,t.attributeDataInfo,i),e.numFeatures=d.graphics.length,this._updateNodeMemory(e),$(d),o.length>0&&(this._computeObb(e,o,n),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(d);if(f(this._verticalScale))for(const g of d.graphics)this._verticalScale(g.geometry);const m=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(f(m))for(let g=0;g<d.featureIds.length;g++){const v=d.featureIds[g];m.setUidToObjectAndLayerId(v,d.graphics[g].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled,d.node.resources.attributes,g)}this.loadedGraphics.addNode(e.index,d),this._controller.updateLoadStatus(e.index,!0),this._filterNode(d),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;G(t,i,0,t,o,0,t.length/3),e.serviceObb=xe(new Ee(t,3)),r.isGeographic&&W(e.serviceObb.center,o,e.serviceObb.center,r)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,i){const r=await this._decompressBinaryPointData(t,i),o=r.positionData,s=3,a=o.length/s,n=M(3*a),p=f(e.serviceObb)?e.serviceObb.center:[0,0,0],l=Math.abs(p[2])*2**-20;for(let d=0;d<a;d++){const m=d*s;n[m+0]=o[m+0]+p[0],n[m+1]=o[m+1]+p[1],n[m+2]=o[m+2]+p[2],Math.abs(n[m+2])<l&&(n[m+2]=0)}return{featureIds:r.featureIds?Array.from(r.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){var o,s;const t=e.pointData.length,i=M(3*t),r=new Array;for(let a=0;a<t;a++){const n=e.pointData[a],p=n.featureDataPosition,l=p.length,d=((o=n.geometries)==null?void 0:o[0])??De[l],m=n.featureIds[0];if(d.type!=="Embedded"||d.params.type!=="points"||l<2||l>3)continue;const g=((s=d.params.vertexAttributes)==null?void 0:s.position)??[0,0,0],v=3*r.length;i[v+0]=p[0]+g[0],i[v+1]=p[1]+g[1],i[v+2]=l===3?p[2]+g[2]:NaN,r.push(m)}return{featureIds:r,pointPositions:i}}_validatePositions(e,t,i,r,o){if(_(r)&&e.serviceObb)return;const s=t.length,a=3;for(let n=0;n<s;n++){const p=n*a;k(I,i[p],i[p+1],i[p+2]),f(r)&&!Z(r,I)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&E.getLogger(this.declaredClass).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&E.getLogger(this.declaredClass).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObb||o.push(I[0],I[1],I[2])}}_createGraphics(e,t,i,r){const o=e.length,s=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,p=new Array,l=this.view.spatialReference;for(let d=0;d<o;d++){const m=e[d],g={};m!=null&&(g[a]=m);const v=m??F.generateUID(),w=d*s,j=isNaN(t[w+2])?void 0:t[w+2],N=te(t[w],t[w+1],j,l),x=this.loadedGraphics.get(v);if(f(x))(x.level==null||x.level<r)&&(y.property="geometry",y.graphic=x,y.oldValue=U(x.geometry),y.newValue=N,x.geometry=N,x.level=r,n.graphicUpdateHandler(y)),p.push(x);else{const V=F.generateUID();p.push({objectId:v,uid:V,geometry:N,attributes:g,visible:!0,nodeIndex:i,level:r})}}return p}_updateNodeMemory(e){e.memory=4096+(f(e.numFeatures)?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>re(r)+i,512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return _(t)?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){var t;return(t=this._memCache)==null?void 0:t.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this.loadedGraphics.hasNode(e.index)?E.getLogger(this.declaredClass).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.apply(t.featureIds,i,r),this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),t.attributeInfo=i,this._attributeValuesChanged(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(f(t)&&f(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(f(t)&&f(t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this.loadedGraphics.getNode(e);_(i)||_(i.attributeInfo)||(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this.loadedGraphics.getNode(e);_(r)||(await this._i3sOverrides.apply(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if($(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map(i=>i.uid);this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||X}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;e?(await e.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),t?(await t.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,n)=>o[n]===s[n])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&E.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of e.graphics){const s=o.visible,a=!t||this._evaluateClause(t,o),n=_(i)||Q(i,o.attributes[r])<0;o.visible=a&&n,s!==o.visible&&(y.graphic=o,y.property="visible",y.oldValue=s,y.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(y))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return f(this.filter)?this.filter.createQuery(e):new A(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(_(e)?this.createQuery():A.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new pe({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:Ie.FEATURE_QUERY_ENGINE})}getUsedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}getUnloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){he(this._attributeEditingContext,e)}get _attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:t=>this.loadedGraphics.forEachNode(i=>t(i.node,i.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:t=>this.getAttributeData(t),setAttributeData:(t,i,r)=>{this._setAttributeData(t,i);const o=this.loadedGraphics.getNode(t);if(f(r)){const s=this.loadedGraphics.get(r.attributes[e]);f(s)&&this.processor.graphicsCore.recreateGraphics([s])}else f(o)&&this.processor.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this.loadedGraphics.nodeCount,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this.loadedGraphics.nodeCount,loadedGraphics:this.loadedGraphics}}};c([u()],h.prototype,"processor",void 0),c([u({type:oe})],h.prototype,"filter",void 0),c([u()],h.prototype,"loadedGraphics",void 0),c([u()],h.prototype,"i3slayer",null),c([u()],h.prototype,"_controller",void 0),c([u()],h.prototype,"updating",void 0),c([u()],h.prototype,"suspended",void 0),c([u()],h.prototype,"holeFilling",void 0),c([u(ee)],h.prototype,"updatingProgress",void 0),c([u()],h.prototype,"updatingProgressValue",null),c([u(R.requiredFields)],h.prototype,"requiredFields",null),c([u(R.availableFields)],h.prototype,"availableFields",void 0),c([u()],h.prototype,"_fieldsHelper",void 0),c([u({type:Number})],h.prototype,"maximumNumberOfFeatures",null),c([u({readOnly:!0})],h.prototype,"maximumNumberOfFeaturesExceeded",null),c([u()],h.prototype,"_excludeObjectIdsSorted",null),c([u({readOnly:!0})],h.prototype,"lodFactor",null),c([u({readOnly:!0})],h.prototype,"hasM",null),c([u({readOnly:!0})],h.prototype,"hasZ",null),h=c([H("esri.views.3d.layers.SceneLayerGraphicsView3D")],h);const ya=h;function Ne(e){return"pointData"in e}function D(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function Ce(e,t,i){const r=t.attributeInfo;if(_(r)||_(r.loadedAttributes)||_(r.attributeData))return!1;let o=!1;for(const{name:s}of r.loadedAttributes)if(r.attributeData[s]){const a=L(r.attributeData[s],i);a!==e.attributes[s]&&(e.attributes[s]=a,o=!0)}return o}function $(e){const t=e.attributeInfo,i=e.node.index;if(!(_(t)||_(t.loadedAttributes)||_(t.attributeData)))for(let r=0;r<e.graphics.length;r++){const o=e.graphics[r];if(o.nodeIndex===i){o.attributes||(o.attributes={});for(const{name:s}of t.loadedAttributes)t.attributeData[s]&&(o.attributes[s]=L(t.attributeData[s],r))}}}function Oe(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.zmin!=null&&e.zmax!=null&&(e.zmin-=t,e.zmax+=t),e.mmin!=null&&e.mmax!=null&&(e.mmin-=t,e.mmax+=t),e}const De={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},I=B(),y={graphic:null,property:null,oldValue:null,newValue:null};export{ya as default};
