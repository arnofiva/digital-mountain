import{_ as O}from"./preload-helper-41c905a7.js";import{e as h,y as _,a as b}from"./cast-8b575ab3.js";import"./geometry-bad16232.js";import{E as R,U as E}from"./request-fc61835a.js";import{a as c,s as a}from"./Error-685fdf30.js";import{r as f,t as g,l as C,x as M}from"./typedArrayUtil-ce39e5f4.js";import{U as W,D as x}from"./promiseUtils-e37fe75d.js";import"./ArrayPool-5813d861.js";import"./string-7a324480.js";import{o as L}from"./zscale-def794ea.js";import{n as P}from"./Evented-d959ede6.js";import{c as F}from"./query-b200d7cb.js";import{x as T}from"./Query-65d38c02.js";import{v as q}from"./jsonUtils-03437bcd.js";import{f as $}from"./Extent-680ef92a.js";import"./nextTick-3ee5a785.js";import"./Polyline-889037e7.js";import"./typeUtils-700e0da4.js";import"./normalizeUtils-6bee55d6.js";import"./normalizeUtilsCommon-17a95432.js";import"./pbfQueryUtils-f001828a.js";import"./pbf-68e00ce0.js";import"./OptimizedFeature-7f37a325.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bd6bba60.js";import"./TimeExtent-d116f9c4.js";import"./enumeration-4ec8d3f9.js";import"./Field-1bc3a16a.js";import"./fieldType-232282e5.js";import"./Clonable-2b8b60cc.js";import"./Ellipsoid-89682c5e.js";let S=class extends P.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};h([_({readOnly:!0})],S.prototype,"connectionError",null),S=h([b("esri.layers.support.StreamConnection")],S);const N=S;var p;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(p||(p={}));let m=class extends N{constructor(t){super(),this._outstandingMessages=[],this.errorString=null;const{geometryType:r,spatialReference:s,sourceSpatialReference:o}=t;this._config=t,this._featureZScaler=L(r,o,s),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),f(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(g(this._websocket))return"disconnected";switch(this._websocket.readyState){case p.CONNECTING:case p.OPEN:return"connected";case p.CLOSING:case p.CLOSED:return"disconnected"}}sendMessageToSocket(t){g(this._websocket)?this._outstandingMessages.push(t):this._websocket.send(JSON.stringify(t))}sendMessageToClient(t){this._onMessage(t)}async _tryCreateWebSocket(t=this._config.source.path,r=1e3,s=0){try{if(this.destroyed)return;const o=R(t,this._config.customParameters??{});this._websocket=await this._createWebSocket(o),this.notifyChange("connectionStatus")}catch(o){const n=r/1e3;return this._config.maxReconnectionAttempts&&s>=this._config.maxReconnectionAttempts?(a.getLogger(this.declaredClass).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this.declaredClass).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,o)),await W(r),this._tryCreateWebSocket(t,Math.min(1.5*r,1e3*this._config.maxReconnectionInterval),s+1))}}_setWebSocketJSONParseHandler(t){t.onmessage=r=>{try{const s=JSON.parse(r.data);this._onMessage(s)}catch(s){return void a.getLogger(this.declaredClass).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:s}))}}}_createWebSocket(t){return new Promise((r,s)=>{const o=new WebSocket(t);o.onopen=()=>{if(o.onopen=null,this.destroyed)return o.onclose=null,void o.close();o.onclose=n=>this._onClose(n),o.onerror=n=>this._onError(n),this._setWebSocketJSONParseHandler(o),r(o)},o.onclose=n=>{o.onopen=o.onclose=null,s(n)}})}async _handshake(t=1e4){const r=this._websocket;if(g(r))return;const s=x(),o=r.onmessage,{filter:n,outFields:l,spatialReference:d}=this._config;return s.timeout(t),r.onmessage=u=>{var w;let i=null;try{i=JSON.parse(u.data)}catch{}i&&typeof i=="object"||(a.getLogger(this.declaredClass).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",u.data)),s.reject(),this.destroy()),((w=i.spatialReference)==null?void 0:w.wkid)!==(d==null?void 0:d.wkid)&&(a.getLogger(this.declaredClass).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${d.wkid}`,u.data)),s.reject(),this.destroy()),i.format!=="json"&&(a.getLogger(this.declaredClass).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",u.data)),s.reject(),this.destroy()),n&&i.filter!==n&&a.getLogger(this.declaredClass).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),l&&i.outFields!==l&&a.getLogger(this.declaredClass).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),r.onmessage=o;for(const v of this._outstandingMessages)r.send(JSON.stringify(v));this._outstandingMessages=[],s.resolve()},r.send(JSON.stringify({filter:n,outFields:l,format:"json",spatialReference:{wkid:d.wkid}})),s.promise}_onMessage(t){if(this.onMessage(t),"type"in t)switch(t.type){case"features":case"featureResult":for(const r of t.features)f(this._featureZScaler)&&this._featureZScaler(r.geometry),this.onFeature(r)}}_onError(t){const r="Encountered an error over WebSocket connection";this._set("errorString",r),a.getLogger(this.declaredClass).error("websocket-connection",r)}_onClose(t){this._websocket=null,this.notifyChange("connectionStatus"),t.code!==1e3&&a.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${t.code}`),this.destroyed||this._open()}};h([_()],m.prototype,"connectionStatus",null),h([_()],m.prototype,"errorString",void 0),m=h([b("esri.layers.graphics.sources.connections.WebSocketConnection")],m);const j=1e4,D={maxQueryDepth:5,maxRecordCountFactor:3};let k=class extends m{constructor(e){super({...D,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),f(this._featureZScaler)&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this.declaredClass).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=E(e.path,{query:t,responseType:"json"}),s=(await r).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return R(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.getLogger(this.declaredClass).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(g(r)||g(e)&&g(t))return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=x(),l=()=>{o||(this.destroyed||this._websocket!==r||a.getLogger(this.declaredClass).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},d=u=>{const i=JSON.parse(u.data);i.filter&&(i.error&&(a.getLogger(this.declaredClass).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())};return r.onmessage=d,r.send(s),setTimeout(l,j),n.promise}_serializeFilter(e,t){const r={};if(g(e)&&g(t))return r;if(f(e)&&e.geometry)try{const s=q(e.geometry);if(s.type!=="extent")throw new c(`Expected extent but found type ${s.type}`);r.geometry=JSON.stringify(s.shiftCentralMeridian())}catch(s){a.getLogger(this.declaredClass).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",s))}return f(e)&&e.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),f(t)&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return a.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const l in o)e.attributes[l]=o[l];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this.declaredClass).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const n of o.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this.declaredClass).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await O(()=>import("./FeatureLayer-f2f6536e.js"),["./FeatureLayer-f2f6536e.js","./preload-helper-41c905a7.js","./cast-8b575ab3.js","./typedArrayUtil-ce39e5f4.js","./string-7a324480.js","./Error-685fdf30.js","./ArrayPool-5813d861.js","./nextTick-3ee5a785.js","./promiseUtils-e37fe75d.js","./PopupTemplate-8ac0cb61.js","./Clonable-2b8b60cc.js","./Collection-47946fa8.js","./Evented-d959ede6.js","./SimpleObservable-6f002ab0.js","./Extent-680ef92a.js","./Ellipsoid-89682c5e.js","./fieldUtils-1ecec444.js","./arcadeOnDemand-a1bf65ec.js","./geometry-bad16232.js","./Polyline-889037e7.js","./typeUtils-700e0da4.js","./enumeration-4ec8d3f9.js","./number-134e9f14.js","./locale-30120714.js","./Identifiable-96150ecf.js","./UniqueValueRenderer-3904f4cc.js","./symbols-0f3de684.js","./CIMSymbol-cdddfd9c.js","./Color-ad49dc79.js","./colorUtils-639f4d25.js","./mathUtils-5b623c84.js","./vec3-015ca254.js","./common-d0b63c2d.js","./vec4-c7a19f0d.js","./screenUtils-410d12c0.js","./opacityUtils-6b5cbdc2.js","./symbolLayerUtils3D-51cc6d75.js","./aaBoundingBox-04c58f5a.js","./aaBoundingRect-41e05474.js","./request-fc61835a.js","./persistableUrlUtils-1c5d7615.js","./Symbol3DAnchorPosition2D-142c1e90.js","./collectionUtils-25147e5f.js","./Portal-7ecdc9f0.js","./Loadable-695031ac.js","./Promise-e757e514.js","./PortalGroup-ea788274.js","./PortalUser-a1aa49cd.js","./LegendOptions-de492976.js","./reactiveUtils-042dd05a.js","./diffUtils-0c65d604.js","./colorRamps-ddfecb23.js","./sizeVariableUtils-d4870b0d.js","./visualVariableUtils-a1979e31.js","./Graphic-96c42a4d.js","./jsonUtils-03437bcd.js","./compilerUtils-175b9e40.js","./lengthUtils-1d09729e.js","./jsonUtils-e877a23b.js","./layerUtils-0c01cb0c.js","./styleUtils-305d8f69.js","./jsonUtils-b2e5d321.js","./DictionaryLoader-1438695d.js","./LRUCache-16cff7d8.js","./MemCache-1d0e264b.js","./deprecate-9828d7d2.js","./heatmapUtils-bc76f08e.js","./vec4f64-6d0e93be.js","./MultiOriginJSONSupport-a1d33be9.js","./serviceCapabilitiesUtils-6f645c61.js","./arcgisLayerUrl-81a33ec5.js","./FeatureLayerBase-b19f7ee7.js","./Field-1bc3a16a.js","./fieldType-232282e5.js","./HeightModelInfo-42ae0f61.js","./OperationalLayer-c3a14c54.js","./TimeExtent-d116f9c4.js","./ElevationInfo-ad190ee6.js","./TimeReference-aeda2bb8.js","./datetime-b6333958.js","./AttachmentQuery-061e93ef.js","./Query-65d38c02.js","./RelationshipQuery-0abdb3e2.js","./Layer-b29c44e3.js","./HandleOwner-f773ce72.js","./workers-c3882da6.js","./Connection-6bd43370.js","./assets-5052bbaa.js","./intl-b84fb3c9.js","./messages-8a541332.js","./editsZScale-eefb35e6.js","./queryZScale-bd6bba60.js","./zscale-def794ea.js","./FeatureSet-cb704b51.js","./APIKeyMixin-d7cb7220.js","./ArcGISService-7ce81abb.js","./BlendLayer-291a2b49.js","./mat4f32-60a2394b.js","./mat4-4714ff8c.js","./CustomParametersMixin-0dbce8f2.js","./EditBusLayer-faff46ba.js","./FeatureReductionLayer-55e6b2c4.js","./labelingInfo-8462538e.js","./labelUtils-61dff46d.js","./defaultsJSON-59981e75.js","./OrderedLayer-f840e564.js","./PortalLayer-7f6f61d4.js","./asyncUtils-623987a8.js","./PortalItem-6549afda.js","./portalItemUtils-ba37e370.js","./projection-582e07d8.js","./RefreshableLayer-51d28698.js","./ScaleRangeLayer-7ff6c0d3.js","./TemporalLayer-12ea8921.js","./FeatureTemplate-26b6ba5d.js","./FeatureType-474514d1.js","./fieldProperties-66b12497.js","./FieldsIndex-967913ce.js","./versionUtils-f77d2452.js","./styleUtils-4d62e921.js","./TopFeaturesQuery-3a519c5e.js","./popupUtils-7d1e2de5.js"],import.meta.url)).default({url:e}),{capabilities:r}=await t.load(),s=r.query.supportsMaxRecordCountFactor,o=r.query.supportsPagination,n=r.query.supportsCentroid,l=this._config.maxRecordCountFactor,d=t.capabilities.query.maxRecordCount,u=s?d*l:d,i=new T;if(i.outFields=C(this._config.outFields,["*"]),i.where=C(M(this._config.filter,"where"),"1=1"),i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=$.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),s&&(i.maxRecordCountFactor=l),o)return i.num=u,t.destroy(),this._queryPages(e,i);const w=await F(e,i,this._config.sourceSpatialReference);return t.destroy(),w.data}async _queryPages(e,t,r=[],s=0){t.start=f(t.num)?s*t.num:null;const{data:o}=await F(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,s+1)):(r.forEach(n=>o.features.push(n)),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const n=o.attributes[s];t.set(n,o)}this._relatedFeatures=t}};k=h([b("esri.layers.graphics.sources.connections.GeoEventConnection")],k);const I=k;let y=class extends N{constructor(e){super(),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=L(t,s,r)}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)f(this._featureZScaler)&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};h([_()],y.prototype,"connectionStatus",void 0),h([_()],y.prototype,"errorString",void 0),y=h([b("esri.layers.support.ClientSideConnection")],y);function we(e,t,r,s,o,n,l,d){const u={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:o,maxReconnectionAttempts:n,maxReconnectionInterval:l,customParameters:d};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new m(u):new I(u):new y(u)}export{we as createConnection};
